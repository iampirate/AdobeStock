%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Map_Shop.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Ÿíà
%%CreationDate: 19.12.16
%%BoundingBox: 0 0 580 450
%%HiResBoundingBox: 0 0 580 450
%%CropBox: 0 0 580 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="ï»¿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">ÐŸÐµÑ‡Ð°Ñ‚ÑŒ</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-12-19T20:16:24+04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-12-19T20:16:24+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-12-19T20:16:24+04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9N3FxDbwtNM3CNacm3NK&#xA;mg6fPKyWS0XduQCHBB3B3xsLS5biFmCq4JPTG1WXV7bWqlrh+AHU0J6/IHK8uaOMXI0EE1uhP8Ra&#xA;N/y0j/gX/pmL/KWD+d97DxI97v8AEWjf8tI/4F/6Y/ylg/nfeviR718eu6TLIsaXAZ2NFHFv6ZOG&#xA;vwyIAlufekTBVbvUrKzcR3MojcioBBO30A5lk0zUP8QaP/y0j/gW/pg4gtKlxrOmW8CTzThInpwY&#xA;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&#xA;BQqJxUdFAoMmI0KCX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:ff897442-5faf-477d-9334-1ec62124e991</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:ff897442-5faf-477d-9334-1ec62124e991</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d05474c1-acb6-4587-bea4-d91d6aa7393a</stRef:instanceID>
            <stRef:documentID>xmp.did:d05474c1-acb6-4587-bea4-d91d6aa7393a</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d05474c1-acb6-4587-bea4-d91d6aa7393a</stEvt:instanceID>
                  <stEvt:when>2016-12-19T20:10:20+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ff897442-5faf-477d-9334-1ec62124e991</stEvt:instanceID>
                  <stEvt:when>2016-12-19T20:16:24+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>580.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Ð“Ñ€ÑƒÐ¿Ð¿Ð° Ð¾Ð±Ñ€Ð°Ð·Ñ†Ð¾Ð² Ð¿Ð¾ ÑƒÐ¼Ð¾Ð»Ñ‡Ð°Ð½Ð¸ÑŽ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
580 450 li
580 0 li
cp
clp
580 450 mo
0 450 li
0 0 li
580 0 li
580 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.976471 .968627 .94902 rgb
f
565.849 435.836 mo
14.1505 435.836 li
14.1505 14.164 li
565.849 14.164 li
565.849 435.836 li
.917647 .901961 .847059 rgb
f
340.268 111.795 mo
321.328 119.365 li
319.269 120.188 319.875 123.257 322.091 123.232 cv
337.782 123.055 li
339.97 123.031 342.095 123.79 343.774 125.196 cv
361.381 139.94 li
369.378 132.578 li
349.073 113.467 li
346.711 111.243 343.278 110.592 340.268 111.795 cv
cp
.67451 .866667 .294118 rgb
f
395.043 155.223 mo
374.4 136.644 li
366.589 144.413 li
385.93 163.631 li
395.043 155.223 li
cp
f
433.983 207.415 mo
480.268 253.638 li
484.957 248.853 li
438.876 202.762 li
433.983 207.415 li
f
412.301 321.966 mo
367.352 278.909 li
356.244 290.653 li
400.962 334.379 li
412.301 321.966 li
cp
f
490.681 36.3754 mo
486.836 39.801 482.96 43.4739 480.995 48.2388 cv
479.175 52.6544 479.174 57.5796 479.202 62.3571 cv
479.247 70.3972 479.293 78.4376 479.338 86.4778 cv
479.36 90.4546 479.389 94.4774 480.36 98.3332 cv
482.45 106.622 488.598 113.174 494.519 119.328 cv
497.873 122.814 501.323 126.372 505.672 128.484 cv
510.02 130.596 515.524 131 519.496 128.242 cv
523.612 125.383 525.093 119.953 525.272 114.937 cv
525.45 109.922 524.637 104.853 525.483 99.9064 cv
526.329 94.9601 529.437 89.8888 534.341 88.873 cv
539.417 87.8218 544.195 91.3439 548.19 94.6529 cv
552.665 98.3601 564.567 96.9051 565.849 92.411 cv
565.849 14.1639 li
502.329 14.1639 li
502.89 23.6815 498.368 29.5256 490.681 36.3754 cv
cp
f
250.902 375.262 mo
275.501 400.345 li
294.129 383.154 li
287.943 375.845 li
276.361 386.273 li
251.568 360.247 li
237.527 371.925 li
222.09 356.941 li
211.613 367.588 li
234.92 389.589 li
250.902 375.262 li
cp
f
231.185 274.582 mo
205.025 324.248 li
213.891 333.423 li
242.667 304.44 li
231.185 274.582 li
cp
f
499.231 203.707 mo
500.318 202.677 501.015 201.39 501.316 200.031 cv
501.827 197.729 501.206 195.221 499.435 193.406 cv
418.307 110.241 li
416.891 108.789 415.016 108.064 413.142 108.067 cv
411.269 108.07 409.396 108.8 407.983 110.256 cv
392.571 126.148 li
391.895 126.845 391.387 127.644 391.047 128.494 cv
389.997 131.122 390.552 134.239 392.695 136.343 cv
474.962 217.131 li
476.339 218.483 478.124 219.172 479.917 219.194 cv
481.727 219.217 483.544 218.561 484.958 217.222 cv
499.231 203.707 li
cp
f
420.26 185.433 mo
385.92 220.498 li
395.043 229.397 li
429.907 194.521 li
420.26 185.433 li
cp
f
125.327 410.387 mo
116.569 405.469 li
122.142 394.446 li
105.423 392.032 li
96.1429 435.836 li
112.831 435.836 li
125.327 410.387 li
cp
f
14.1505 272.612 mo
23.1556 277.262 li
45.432 235.927 li
14.1505 218.144 li
14.1505 272.612 li
cp
f
107.154 257.331 mo
120.171 263.806 li
135.512 232.552 li
122.935 226.027 li
107.154 257.331 li
cp
f
54.7014 241.158 mo
32.7471 281.494 li
70.6591 303.496 li
79.3169 287.828 li
48.6207 270.312 li
62.5422 245.659 li
54.7014 241.158 li
cp
f
204.653 428.037 mo
204.653 435.836 li
260.454 435.836 li
260.454 428.037 li
204.653 428.037 li
cp
f
565.849 405.241 mo
530.956 370.776 li
528.653 368.501 525.7 367.296 522.707 367.153 cv
519.231 366.988 515.702 368.256 513.079 370.95 cv
487.863 396.844 li
485.428 399.344 484.236 402.596 484.278 405.833 cv
484.32 409.07 485.595 412.291 488.093 414.727 cv
509.739 435.836 li
565.849 435.836 li
565.849 405.241 li
f
425.564 14.1639 mo
425.564 70.4374 li
432.115 70.4374 li
432.115 14.1639 li
425.564 14.1639 li
cp
f
353.277 394.427 mo
355.582 395.601 358.214 395.728 360.559 394.902 cv
361.711 394.496 362.794 393.86 363.736 393.005 cv
382.857 375.64 li
383.832 374.754 384.598 373.682 385.12 372.503 cv
385.642 371.323 385.92 370.034 385.92 368.716 cv
385.92 351.771 li
385.92 350.528 385.672 349.311 385.206 348.185 cv
384.738 347.059 384.052 346.024 383.172 345.147 cv
333.165 295.282 li
332.271 294.391 331.221 293.704 330.086 293.244 cv
328.426 292.571 326.583 292.381 324.776 292.74 cv
281.767 301.279 li
279.532 301.722 277.679 302.911 276.372 304.514 cv
274.194 307.187 273.534 311.01 275.153 314.453 cv
288.909 343.707 308.654 371.695 353.277 394.427 cv
cp
f
116.615 65.5096 mo
119.126 68.0547 123.453 66.2732 123.453 62.6945 cv
123.453 14.1639 li
65.9696 14.1639 li
116.615 65.5096 li
cp
f
220.361 96.2642 mo
219.713 96.5604 218.999 96.7215 218.261 96.7215 cv
196.801 96.7215 li
196.176 96.7215 195.787 97.1382 195.683 97.6178 cv
195.565 98.1619 195.812 98.787 196.496 98.9765 cv
219.53 105.364 li
220.447 105.618 221.388 105.556 222.225 105.234 cv
223.198 104.859 224.033 104.133 224.529 103.144 cv
269.248 14.1639 li
262.434 14.1639 li
222.792 93.9106 li
222.265 94.9704 221.398 95.7903 220.361 96.2642 cv
cp
f
298.914 21.4194 mo
291.415 14.1639 li
296.514 14.1639 li
301.374 18.8658 li
298.914 21.4194 li
cp
.439216 .439216 .435294 rgb
f
311.272 33.3767 mo
298.914 21.4194 li
301.374 18.8658 li
313.732 30.8232 li
311.272 33.3767 li
cp
1 1 1 rgb
f
323.631 45.3341 mo
311.272 33.3767 li
313.732 30.8232 li
326.091 42.7806 li
323.631 45.3341 li
cp
.439216 .439216 .435294 rgb
f
335.989 57.2915 mo
323.631 45.3341 li
326.091 42.7806 li
338.449 54.7379 li
335.989 57.2915 li
cp
1 1 1 rgb
f
348.347 69.2489 mo
335.989 57.2915 li
338.449 54.7379 li
350.807 66.6953 li
348.347 69.2489 li
cp
.439216 .439216 .435294 rgb
f
360.706 81.2062 mo
348.347 69.2489 li
350.807 66.6953 li
363.166 78.6527 li
360.706 81.2062 li
cp
1 1 1 rgb
f
373.064 93.1636 mo
360.706 81.2062 li
363.166 78.6527 li
375.524 90.6101 li
373.064 93.1636 li
cp
.439216 .439216 .435294 rgb
f
385.423 105.121 mo
373.064 93.1636 li
375.524 90.6101 li
387.883 102.567 li
385.423 105.121 li
cp
1 1 1 rgb
f
397.781 117.078 mo
385.423 105.121 li
387.883 102.567 li
400.241 114.525 li
397.781 117.078 li
cp
.439216 .439216 .435294 rgb
f
410.139 129.036 mo
397.781 117.078 li
400.241 114.525 li
412.599 126.482 li
410.139 129.036 li
cp
1 1 1 rgb
f
422.498 140.993 mo
410.139 129.036 li
412.599 126.482 li
424.958 138.44 li
422.498 140.993 li
cp
.439216 .439216 .435294 rgb
f
434.856 152.951 mo
422.498 140.993 li
424.958 138.44 li
437.316 150.397 li
434.856 152.951 li
cp
1 1 1 rgb
f
447.215 164.908 mo
434.856 152.951 li
437.316 150.397 li
449.675 162.354 li
447.215 164.908 li
cp
.439216 .439216 .435294 rgb
f
459.573 176.865 mo
447.215 164.908 li
449.675 162.354 li
462.033 174.312 li
459.573 176.865 li
cp
1 1 1 rgb
f
471.931 188.823 mo
459.573 176.865 li
462.033 174.312 li
474.391 186.269 li
471.931 188.823 li
cp
.439216 .439216 .435294 rgb
f
484.29 200.78 mo
471.931 188.823 li
474.391 186.269 li
486.75 198.226 li
484.29 200.78 li
cp
1 1 1 rgb
f
496.648 212.737 mo
484.29 200.78 li
486.75 198.226 li
499.108 210.184 li
496.648 212.737 li
cp
.439216 .439216 .435294 rgb
f
509.007 224.695 mo
496.648 212.737 li
499.108 210.184 li
511.467 222.141 li
509.007 224.695 li
cp
1 1 1 rgb
f
521.365 236.652 mo
509.007 224.695 li
511.467 222.141 li
523.825 234.099 li
521.365 236.652 li
cp
.439216 .439216 .435294 rgb
f
533.723 248.609 mo
521.365 236.652 li
523.825 234.099 li
536.183 246.056 li
533.723 248.609 li
cp
1 1 1 rgb
f
546.082 260.567 mo
533.723 248.609 li
536.183 246.056 li
548.542 258.013 li
546.082 260.567 li
cp
.439216 .439216 .435294 rgb
f
558.44 272.524 mo
546.082 260.567 li
548.542 258.013 li
560.9 269.971 li
558.44 272.524 li
cp
1 1 1 rgb
f
565.849 279.693 mo
558.44 272.524 li
560.9 269.971 li
565.849 274.759 li
565.849 279.693 li
cp
.439216 .439216 .435294 rgb
f
175.912 14.1639 mo
132.012 92.9025 173.373 144.767 195.652 166.459 cv
267.721 236.629 215.585 394.211 398.295 426.719 cv
408.169 428.476 418.913 431.532 429.538 435.836 cv
476.8 435.836 li
473.164 433.672 469.436 431.727 465.658 430.02 cv
440.343 418.58 411.491 421.224 385.573 412.539 cv
218.903 356.688 289.925 250.097 203.926 163.631 cv
169.585 129.103 153.525 75.0564 192.229 14.1639 cv
175.912 14.1639 li
cp
.352941 .8 .85098 rgb
f
496.954 273.096 mo
496.162 277.88 497.272 282.751 498.376 287.471 cv
499.479 292.187 500.582 296.903 501.685 301.619 cv
502.402 304.684 503.151 307.825 504.911 310.433 cv
507.875 314.825 513.703 317.043 518.836 315.757 cv
523.969 314.47 528.062 309.782 528.68 304.516 cv
529.216 299.947 527.371 295.473 525.564 291.244 cv
523.464 286.329 521.365 281.414 519.265 276.499 cv
517.238 271.755 513.875 263.716 508.152 262.414 cv
502.271 261.077 497.789 268.052 496.954 273.096 cv
cp
f
496.686 222.244 mo
511.065 208.596 li
537.616 234.975 li
523.425 248.853 li
496.686 222.244 li
cp
.917647 .901961 .847059 rgb
f
496.838 222.754 mo
489.59 221.45 li
489.333 221.404 489.161 221.157 489.207 220.899 cv
489.254 220.641 489.498 220.469 489.758 220.515 cv
496.534 221.734 li
509.324 209.594 li
508.423 204.202 li
508.38 203.943 508.554 203.698 508.812 203.655 cv
509.071 203.611 509.315 203.786 509.358 204.045 cv
510.342 209.936 li
510.159 210.11 li
496.838 222.754 li
cp
.776471 .756863 .686275 rgb
f
536.022 235.988 mo
543.284 237.206 li
543.542 237.25 543.717 237.495 543.673 237.753 cv
543.63 238.012 543.387 238.186 543.128 238.144 cv
536.338 237.004 li
523.69 249.294 li
524.654 254.675 li
524.701 254.934 524.529 255.18 524.272 255.227 cv
524.014 255.274 523.768 255.101 523.721 254.843 cv
522.668 248.963 li
522.849 248.788 li
536.022 235.988 li
cp
f
310.332 43.8291 mo
324.711 30.1809 li
351.262 56.5598 li
337.071 70.4374 li
310.332 43.8291 li
cp
.917647 .901961 .847059 rgb
f
310.484 44.3388 mo
303.236 43.0349 li
302.979 42.9885 302.807 42.7417 302.854 42.4834 cv
302.9 42.2255 303.145 42.0538 303.404 42.0998 cv
310.18 43.3192 li
322.97 31.1789 li
322.069 25.7862 li
322.026 25.5274 322.2 25.2825 322.459 25.2394 cv
322.717 25.1953 322.961 25.3706 323.004 25.6295 cv
323.989 31.5213 li
323.805 31.6947 li
310.484 44.3388 li
cp
.776471 .756863 .686275 rgb
f
349.668 57.5726 mo
356.93 58.7913 li
357.189 58.8346 357.363 59.0793 357.32 59.3382 cv
357.276 59.5967 357.034 59.7712 356.774 59.7283 cv
349.984 58.5885 li
337.337 70.8782 li
338.301 76.2599 li
338.347 76.5182 338.176 76.7652 337.918 76.8113 cv
337.66 76.8584 337.414 76.686 337.368 76.4277 cv
336.314 70.5478 li
336.496 70.3722 li
349.668 57.5726 li
cp
f
28.3093 283.011 mo
53.8808 237.316 li
96.7749 260.4 li
72.5318 307.101 li
28.3093 283.011 li
81.8315 187.369 mo
123.453 209.009 li
98.9627 256.186 li
56.1998 233.172 li
81.8315 187.369 li
14.1505 429.857 mo
74.5091 313.584 li
109.98 332.907 li
112.244 328.734 li
76.6967 309.37 li
100.951 262.648 li
137.638 282.392 li
139.881 278.207 li
103.139 258.433 li
127.66 211.196 li
165.789 231.02 li
167.972 226.804 li
46.9571 163.886 li
14.1505 120.305 li
14.1505 128.191 li
43.8203 167.606 li
77.6224 185.18 li
52.0238 230.925 li
19.9681 213.673 li
17.7255 217.858 li
49.7048 235.068 li
24.1452 280.743 li
14.1505 275.298 li
14.1505 280.704 li
21.8267 284.886 li
14.1505 298.603 li
14.1505 308.313 li
25.9911 287.154 li
70.3443 311.315 li
14.1505 419.565 li
14.1505 429.857 li
1 1 1 rgb
f
127.459 81.1242 mo
130.588 79.6661 134.318 81.0313 135.773 84.1674 cv
137.228 87.3037 135.866 91.0412 132.736 92.4993 cv
129.607 93.9575 125.877 92.5922 124.422 89.4559 cv
122.967 86.3199 124.33 82.5822 127.459 81.1242 cv
cp
120.442 81.5443 mo
118.837 84.5091 118.6 88.1715 120.124 91.4585 cv
120.64 92.5699 121.32 93.5522 122.12 94.3952 cv
93.6779 133.864 li
97.5202 136.644 li
126.052 97.0518 li
128.762 98.1267 131.889 98.1322 134.734 96.8064 cv
137.418 95.5562 139.359 93.3512 140.349 90.7817 cv
225.503 116.625 li
226.877 112.078 li
141.066 86.0362 li
140.976 84.7308 140.653 83.4205 140.071 82.1649 cv
138.564 78.9165 135.667 76.7508 132.417 76.0435 cv
132.042 14.1639 li
127.302 14.1639 li
127.678 76.0609 li
126.928 76.2305 126.185 76.4796 125.461 76.8171 cv
124.775 77.1367 124.138 77.5186 123.552 77.9529 cv
56.8825 14.1639 li
50.0193 14.1639 li
120.442 81.5443 li
cp
f
390.531 237.553 mo
393.982 237.553 396.79 240.366 396.79 243.825 cv
396.79 247.284 393.982 250.097 390.531 250.097 cv
387.08 250.097 384.272 247.284 384.272 243.825 cv
384.272 240.366 387.08 237.553 390.531 237.553 cv
390.531 254.847 mo
392.625 254.847 394.583 254.257 396.251 253.236 cv
444.04 301.127 li
447.391 297.769 li
399.672 249.947 li
400.844 248.195 401.53 246.088 401.53 243.825 cv
401.53 241.561 400.844 239.455 399.672 237.703 cv
441.629 195.655 li
438.278 192.297 li
396.251 234.414 li
394.583 233.393 392.625 232.803 390.531 232.803 cv
385.28 232.803 380.88 236.511 379.793 241.45 cv
336.729 241.45 li
336.729 246.2 li
379.793 246.2 li
380.88 251.139 385.28 254.847 390.531 254.847 cv
f
565.849 393.866 mo
460.125 285.448 li
456.735 288.767 li
518.564 352.171 li
463.489 406.005 li
466.798 409.405 li
521.876 355.568 li
565.849 400.662 li
565.849 393.866 li
f
420.504 109.722 mo
528.463 219.08 li
531.832 215.74 li
502.435 185.961 li
519.232 169.573 li
548.15 199.891 li
551.576 196.609 li
522.628 166.26 li
559.87 129.924 li
556.564 126.521 li
519.353 162.826 li
450.498 90.6382 li
481.069 14.1639 li
475.963 14.1639 li
444.964 91.7096 li
515.957 166.139 li
499.102 182.584 li
424.312 106.825 li
371.524 14.1639 li
366.066 14.1639 li
420.504 109.722 li
cp
f
298.388 125.408 mo
346.288 107.219 li
401.096 158.66 li
404.336 155.193 li
347.371 101.728 li
296.709 120.966 li
298.388 125.408 li
cp
f
263.094 345.335 mo
269.029 354.276 275.831 362.864 283.292 371.203 cv
276.022 377.719 li
254.006 353.612 li
263.094 345.335 li
285.841 374.016 mo
303.279 393.008 324.029 410.768 345.505 428.606 cv
347.925 425.68 li
315.663 398.884 285.058 372.284 265.146 341.556 cv
232.352 258.381 li
228.825 259.777 li
261.21 341.916 li
238.134 362.933 li
198.667 323.985 li
196.007 326.693 li
238.029 368.164 li
251.2 356.168 li
275.755 383.055 li
285.841 374.016 li
f
265.351 435.836 mo
265.351 410.044 li
236.248 410.044 li
182.485 358.169 li
179.855 360.906 li
230.781 410.044 li
200.26 410.044 li
200.26 435.836 li
204.052 435.836 li
204.052 413.844 li
261.559 413.844 li
261.559 435.836 li
265.351 435.836 li
f
250.179 173.496 mo
297.191 77.5059 li
314.561 86.2476 li
316.688 82.0034 li
257.925 52.4294 li
255.798 56.6736 li
292.955 75.374 li
245.904 171.445 li
250.179 173.496 li
cp
f
361.472 153.173 mo
361.472 158.061 357.518 162.023 352.64 162.023 cv
347.763 162.023 343.809 158.061 343.809 153.173 cv
343.809 148.285 347.763 144.322 352.64 144.322 cv
357.518 144.322 361.472 148.285 361.472 153.173 cv
cp
f
358.187 149.428 mo
357.818 149.428 357.45 149.285 357.171 149 cv
356.622 148.438 356.631 147.536 357.193 146.985 cv
374.528 129.977 li
375.089 129.427 375.99 129.436 376.539 129.999 cv
377.089 130.561 377.079 131.463 376.518 132.014 cv
359.182 149.021 li
358.905 149.293 358.546 149.428 358.187 149.428 cv
cp
f
351.8 147.12 mo
351.015 147.12 350.378 146.482 350.378 145.695 cv
350.378 142.845 li
304.454 142.845 li
303.669 142.845 303.032 142.207 303.032 141.42 cv
303.032 140.633 303.669 139.995 304.454 139.995 cv
353.222 139.995 li
353.222 145.695 li
353.222 146.482 352.585 147.12 351.8 147.12 cv
cp
f
348.583 160.888 mo
304.454 160.888 li
303.669 160.888 303.032 160.25 303.032 159.463 cv
303.032 158.676 303.669 158.038 304.454 158.038 cv
348.583 158.038 li
349.368 158.038 350.005 158.676 350.005 159.463 cv
350.005 160.25 349.368 160.888 348.583 160.888 cv
cp
f
354.062 179.237 mo
304.454 179.237 li
303.669 179.237 303.032 178.599 303.032 177.812 cv
303.032 177.025 303.669 176.387 304.454 176.387 cv
351.218 176.387 li
351.218 160.804 li
351.218 160.017 351.855 159.38 352.64 159.38 cv
353.425 159.38 354.062 160.017 354.062 160.804 cv
354.062 179.237 li
cp
f
358.917 153.173 mo
358.917 156.647 356.107 159.463 352.64 159.463 cv
349.174 159.463 346.364 156.647 346.364 153.173 cv
346.364 149.699 349.174 146.882 352.64 146.882 cv
356.107 146.882 358.917 149.699 358.917 153.173 cv
cp
.352941 .8 .85098 rgb
f
354.588 153.173 mo
354.588 154.251 353.716 155.125 352.64 155.125 cv
351.565 155.125 350.692 154.251 350.692 153.173 cv
350.692 152.094 351.565 151.22 352.64 151.22 cv
353.716 151.22 354.588 152.094 354.588 153.173 cv
cp
1 1 1 rgb
f
207.78 66.719 mo
233.649 66.719 li
233.649 59.841 li
207.78 59.841 li
207.78 66.719 li
cp
.776471 .756863 .686275 rgb
f
298.228 84.9321 mo
281.741 118.429 li
289.108 122.07 li
305.595 88.5737 li
298.228 84.9321 li
cp
f
312.215 55.5098 mo
300.82 59.9414 li
304.126 68.4769 li
315.521 64.0453 li
312.215 55.5098 li
cp
f
283.265 237.27 mo
310.046 251.473 li
315.293 241.539 li
288.512 227.335 li
283.265 237.27 li
cp
f
324.184 225.744 mo
297.403 211.54 li
292.157 221.475 li
318.938 235.679 li
324.184 225.744 li
cp
f
195.525 91.9203 mo
221.395 91.9203 li
221.395 85.0423 li
195.525 85.0423 li
195.525 91.9203 li
cp
f
227.522 72.4416 mo
201.652 72.4416 li
201.652 79.3197 li
227.522 79.3197 li
227.522 72.4416 li
cp
f
274.092 242.084 mo
269.775 230.937 li
254.893 236.724 li
259.21 247.872 li
274.092 242.084 li
cp
f
287.04 52.0355 mo
290.346 60.571 li
301.741 56.1394 li
298.435 47.6039 li
287.04 52.0355 li
cp
f
258.009 67.6051 mo
274.84 96.8197 li
282.876 92.1702 li
266.045 62.9557 li
258.009 67.6051 li
cp
f
290 190.237 mo
299.279 190.237 li
299.279 156.502 li
290 156.502 li
290 190.237 li
cp
f
113.459 311.899 mo
112.052 305.463 li
96.7749 308.817 li
98.1818 315.253 li
113.459 311.899 li
cp
f
130.943 375.408 mo
115.03 372.233 li
111.862 388.18 li
127.775 391.355 li
130.943 375.408 li
cp
f
90.2158 377.721 mo
95.2912 367.663 li
85.2548 362.577 li
63.3425 406 li
73.3789 411.087 li
90.2158 377.721 li
cp
f
75.4296 318.796 mo
68.2519 333.379 li
89.9719 344.116 li
97.1495 329.533 li
75.4296 318.796 li
cp
f
194.112 254.325 mo
172.392 243.589 li
165.215 258.171 li
186.935 268.908 li
194.112 254.325 li
cp
f
135.88 350.555 mo
119.966 347.381 li
116.799 363.328 li
132.712 366.502 li
135.88 350.555 li
cp
f
157.342 317.365 mo
135.622 306.629 li
128.445 321.211 li
150.165 331.948 li
157.342 317.365 li
cp
f
181.856 275.339 mo
160.136 264.602 li
152.958 279.184 li
174.678 289.921 li
181.856 275.339 li
f
147.879 285.615 mo
140.701 300.198 li
162.421 310.935 li
169.599 296.352 li
147.879 285.615 li
cp
f
149.381 395.701 mo
165.986 362.219 li
170.991 352.126 li
160.92 347.11 li
152.148 342.741 li
147.143 352.834 li
155.914 357.203 li
139.309 390.685 li
149.381 395.701 li
cp
f
226.162 28.917 mo
252.031 28.917 li
252.031 22.039 li
226.162 22.039 li
226.162 28.917 li
cp
f
176.11 66.719 mo
201.979 66.719 li
201.979 59.841 li
176.11 59.841 li
176.11 66.719 li
cp
f
177.471 237.158 mo
199.191 247.894 li
206.369 233.312 li
184.649 222.575 li
177.471 237.158 li
cp
f
174.325 79.3197 mo
195.852 79.3197 li
195.852 72.4416 li
174.325 72.4416 li
174.325 79.3197 li
cp
f
204.498 136.644 mo
211.675 122.062 li
189.956 111.325 li
182.778 125.908 li
204.498 136.644 li
cp
f
218.088 258.886 mo
223.164 248.828 li
213.127 243.741 li
191.215 287.164 li
201.251 292.251 li
218.088 258.886 li
cp
f
218.625 212.298 mo
196.905 201.562 li
189.728 216.144 li
211.448 226.881 li
218.625 212.298 li
cp
f
233.525 415.965 mo
205.025 415.965 li
205.025 426.231 li
233.525 426.231 li
233.525 415.965 li
cp
f
227.033 173.37 mo
223.164 181.229 li
252.726 195.842 li
256.594 187.983 li
227.033 173.37 li
cp
f
246.684 334.734 mo
237.898 343.467 li
229.011 334.488 li
237.797 325.755 li
231.505 319.398 li
216.202 334.609 li
237.672 356.303 li
252.975 341.092 li
246.684 334.734 li
cp
f
248.026 393.454 mo
241.58 387.303 li
235.444 393.004 li
219.4 377.957 li
213.151 384.33 li
235.444 406.108 li
248.026 393.454 li
cp
f
68.7977 387.134 mo
47.0778 376.398 li
39.9002 390.98 li
61.6201 401.717 li
68.7977 387.134 li
cp
f
266.796 125.729 mo
249.965 96.5146 li
241.929 101.164 li
258.76 130.379 li
266.796 125.729 li
cp
f
182.237 54.1183 mo
208.106 54.1183 li
208.106 47.2403 li
182.237 47.2403 li
182.237 54.1183 li
cp
f
266.831 113.654 mo
274.867 109.004 li
258.036 79.7895 li
250 84.4389 li
266.831 113.654 li
cp
f
249.961 157.978 mo
233.13 128.763 li
225.094 133.413 li
241.925 162.627 li
249.961 157.978 li
cp
f
258.378 141.853 mo
241.548 112.639 li
233.512 117.288 li
250.343 146.503 li
258.378 141.853 li
cp
f
279.507 141.575 mo
272.141 137.933 li
255.653 171.43 li
263.02 175.072 li
279.507 141.575 li
cp
f
194.491 28.917 mo
220.361 28.917 li
220.361 22.039 li
194.491 22.039 li
194.491 28.917 li
cp
f
239.776 47.2403 mo
213.907 47.2403 li
213.907 54.1183 li
239.776 54.1183 li
239.776 47.2403 li
cp
f
188.364 41.5176 mo
214.233 41.5176 li
214.233 34.6397 li
188.364 34.6397 li
188.364 41.5176 li
cp
f
220.034 41.5176 mo
245.904 41.5176 li
245.904 34.6397 li
220.034 34.6397 li
220.034 41.5176 li
cp
f
273.26 44.1295 mo
276.566 52.665 li
287.961 48.2334 li
284.656 39.6979 li
273.26 44.1295 li
cp
f
101.147 221.215 mo
74.3663 207.011 li
69.1197 216.946 li
95.901 231.15 li
101.147 221.215 li
cp
f
93.4681 249.622 mo
98.7146 239.687 li
71.9334 225.483 li
66.6869 235.418 li
93.4681 249.622 li
cp
f
86.5085 207.574 mo
113.29 221.777 li
118.536 211.842 li
91.7551 197.639 li
86.5085 207.574 li
cp
f
113.459 277.964 mo
112.052 271.528 li
96.7749 274.882 li
98.1817 281.318 li
113.459 277.964 li
f
118.871 184.059 mo
114.832 192.046 li
134.059 201.81 li
147.84 174.555 li
128.614 164.791 li
124.575 172.778 li
135.613 178.384 li
129.909 189.665 li
118.871 184.059 li
cp
f
73.2752 137.891 mo
69.2366 145.878 li
80.2749 151.483 li
74.5708 162.764 li
63.5324 157.159 li
59.4939 165.146 li
78.7205 174.909 li
92.5018 147.654 li
73.2752 137.891 li
cp
f
101.264 117.997 mo
83.0898 89.6018 li
75.2795 94.6224 li
93.4539 123.017 li
101.264 117.997 li
cp
f
70.4935 114.573 mo
78.3038 109.553 li
60.1294 81.1578 li
52.3191 86.1785 li
70.4935 114.573 li
cp
f
33.3054 140.063 mo
57.04 135.236 li
53.8128 119.301 li
30.0781 124.128 li
33.3054 140.063 li
cp
f
52.3191 58.7503 mo
70.4935 87.145 li
78.3038 82.1245 li
60.1294 53.7297 li
52.3191 58.7503 li
cp
f
138.524 120.71 mo
143.65 110.649 li
153.69 115.787 li
157.408 108.49 li
147.369 103.352 li
140.088 99.6262 li
136.37 106.923 li
131.243 116.984 li
138.524 120.71 li
cp
f
213.45 373.741 mo
207.575 367.77 li
219.699 354.793 li
213.151 348.729 li
194.506 368.173 li
207.513 380.386 li
213.45 373.741 li
cp
f
198.585 380.02 mo
182.36 380.02 li
182.36 390.286 li
198.585 390.286 li
198.585 380.02 li
cp
f
182.36 405.469 mo
198.585 405.469 li
198.585 395.203 li
182.36 395.203 li
182.36 405.469 li
cp
f
156.537 46.198 mo
134.921 46.198 li
134.921 57.512 li
156.537 57.512 li
156.537 46.198 li
cp
f
549.888 368.808 mo
565.849 362.6 li
565.849 352.78 li
546.582 360.273 li
549.888 368.808 li
cp
f
541.988 230.973 mo
565.849 230.973 li
565.849 219.027 li
541.988 219.027 li
541.988 230.973 li
cp
f
37.8621 322.764 mo
33.8236 330.75 li
53.0502 340.514 li
66.8316 313.259 li
47.6049 303.496 li
43.5663 311.483 li
54.6047 317.088 li
48.9005 328.369 li
37.8621 322.764 li
cp
f
28.1766 414.798 mo
20.999 429.381 li
34.0579 435.836 li
44.8262 435.836 li
49.8965 425.535 li
28.1766 414.798 li
cp
f
134.921 73.529 mo
154.531 73.529 li
154.531 62.215 li
134.921 62.215 li
134.921 73.529 li
cp
f
26.9777 389.057 mo
43.5826 355.575 li
48.5881 345.482 li
38.5166 340.466 li
29.745 336.097 li
24.7395 346.19 li
33.5111 350.559 li
16.9062 384.041 li
26.9777 389.057 li
cp
f
60.2677 208.845 mo
38.5477 198.109 li
30.5963 214.263 li
52.3162 225 li
60.2677 208.845 li
cp
f
29.3586 22.8781 mo
47.5331 51.2729 li
55.3434 46.2523 li
37.169 17.8576 li
29.3586 22.8781 li
cp
f
47.5331 78.701 mo
55.3434 73.6805 li
37.169 45.2857 li
29.3586 50.3064 li
47.5331 78.701 li
cp
f
14.8088 178.453 mo
36.5288 189.19 li
44.4803 173.035 li
22.7603 162.298 li
14.8088 178.453 li
cp
f
52.3191 31.3221 mo
70.4935 59.7169 li
78.3038 54.6962 li
60.1294 26.3016 li
52.3191 31.3221 li
cp
f
75.2795 67.1943 mo
93.4539 95.589 li
101.264 90.5683 li
83.0898 62.1737 li
75.2795 67.1943 li
cp
f
17.3778 118.628 mo
41.1125 113.801 li
37.8852 97.8655 li
14.1505 102.693 li
17.3778 118.628 li
cp
f
87.6989 348.733 mo
65.979 337.997 li
58.8013 352.579 li
80.5213 363.316 li
87.6989 348.733 li
cp
f
49.3507 371.78 mo
71.0707 382.516 li
78.2483 367.934 li
56.5284 357.197 li
49.3507 371.78 li
cp
f
32.4016 195.4 mo
14.1505 186.378 li
14.1505 206.463 li
24.4501 211.554 li
32.4016 195.4 li
cp
f
59.3471 406.335 mo
37.6272 395.598 li
30.4496 410.18 li
52.1695 420.917 li
59.3471 406.335 li
cp
f
96.9058 159.328 mo
107.944 164.934 li
102.24 176.214 li
91.2017 170.609 li
87.1631 178.596 li
106.39 188.359 li
120.171 161.105 li
100.944 151.341 li
96.9058 159.328 li
cp
f
99.8992 304.15 mo
98.4924 297.714 li
83.2151 301.068 li
84.6219 307.504 li
99.8992 304.15 li
cp
f
119.085 299.938 mo
117.679 293.502 li
102.401 296.856 li
103.808 303.292 li
119.085 299.938 li
cp
f
105.747 284.911 mo
90.4699 288.265 li
91.8768 294.701 li
107.154 291.347 li
105.747 284.911 li
cp
f
72.3464 186.481 mo
50.6264 175.744 li
42.6749 191.899 li
64.3949 202.635 li
72.3464 186.481 li
cp
f
78.8596 284.021 mo
89.2056 265.072 li
81.3674 260.774 li
75.4276 271.653 li
64.3569 265.583 li
70.2967 254.704 li
62.4586 250.406 li
52.1126 269.355 li
78.8596 284.021 li
cp
f
124.933 280.699 mo
109.656 284.053 li
111.063 290.489 li
126.34 287.135 li
124.933 280.699 li
cp
f
159.006 136.489 mo
148.967 131.351 li
141.686 127.625 li
137.968 134.921 li
132.841 144.982 li
140.122 148.708 li
145.249 138.648 li
155.288 143.785 li
159.006 136.489 li
cp
f
175.509 188.005 mo
156.283 178.242 li
152.244 186.229 li
163.283 191.834 li
157.578 203.115 li
146.54 197.509 li
142.501 205.496 li
161.728 215.26 li
175.509 188.005 li
cp
f
150.145 236.823 mo
155.15 226.73 li
145.079 221.714 li
136.307 217.345 li
131.302 227.438 li
140.073 231.807 li
123.468 265.289 li
133.54 270.305 li
150.145 236.823 li
f
119.012 117.083 mo
115.294 124.38 li
110.167 134.441 li
117.448 138.167 li
122.574 128.106 li
132.614 133.244 li
136.332 125.947 li
126.292 120.809 li
119.012 117.083 li
cp
f
238.729 426.231 mo
259.333 426.231 li
259.333 415.965 li
238.729 415.965 li
238.729 426.231 li
cp
f
558.796 349.47 mo
555.491 340.935 li
535.715 348.626 li
539.02 357.161 li
558.796 349.47 li
cp
f
565.849 169.759 mo
559.668 163.564 li
540.889 182.383 li
548.783 190.294 li
565.849 173.191 li
565.849 169.759 li
cp
f
553.268 314.07 mo
537.224 299.023 li
530.975 305.396 li
553.268 327.174 li
565.849 314.52 li
559.403 308.369 li
553.268 314.07 li
cp
f
544.224 280.9 mo
528.18 265.853 li
521.931 272.226 li
544.224 294.004 li
556.805 281.35 li
550.359 275.199 li
544.224 280.9 li
cp
f
466.115 99.9309 mo
473.616 92.4142 li
462.557 81.3317 li
455.057 88.8483 li
466.115 99.9309 li
cp
f
546.604 115.232 mo
562.244 115.232 li
562.244 108.643 li
546.604 108.643 li
546.604 115.232 li
cp
f
399.868 46.1602 mo
408.804 46.1602 li
408.804 29.9971 li
399.868 29.9971 li
399.868 46.1602 li
cp
f
189.724 85.0423 mo
174.325 85.0423 li
174.325 91.9203 li
189.724 91.9203 li
189.724 85.0423 li
cp
f
382.447 195.626 mo
390.516 203.434 li
411.562 181.588 li
403.493 173.781 li
382.447 195.626 li
cp
f
447.391 46.1602 mo
456.327 46.1602 li
456.327 29.9971 li
447.391 29.9971 li
447.391 46.1602 li
cp
f
476.645 320.268 mo
466.908 309.268 li
458.948 316.345 li
468.685 327.344 li
457.709 337.102 li
464.77 345.079 li
475.746 335.322 li
483.706 328.245 li
476.645 320.268 li
cp
f
501.724 360.99 mo
509.684 353.914 li
502.623 345.936 li
492.887 334.937 li
484.927 342.013 li
494.663 353.012 li
483.687 362.77 li
490.748 370.747 li
501.724 360.99 li
cp
f
541.356 195.943 mo
534.91 189.792 li
528.774 195.493 li
512.73 180.446 li
506.481 186.818 li
528.774 208.596 li
541.356 195.943 li
cp
f
154.845 155.237 mo
184.407 169.85 li
188.276 161.99 li
158.714 147.377 li
154.845 155.237 li
cp
f
554.942 141.503 mo
548.174 147.547 li
543.266 151.93 li
547.64 156.849 li
553.672 163.631 li
558.58 159.248 li
552.548 152.465 li
559.316 146.421 li
554.942 141.503 li
cp
f
469.375 376.113 mo
477.335 369.037 li
470.274 361.06 li
460.537 350.06 li
452.577 357.137 li
462.314 368.136 li
451.338 377.894 li
458.399 385.871 li
469.375 376.113 li
cp
f
547.929 337.824 mo
544.623 329.288 li
524.847 336.979 li
528.152 345.515 li
547.929 337.824 li
cp
f
513.98 325.333 mo
517.285 333.868 li
537.061 326.177 li
533.756 317.642 li
513.98 325.333 li
cp
f
533.103 129.628 mo
548.742 129.628 li
548.742 123.04 li
533.103 123.04 li
533.103 129.628 li
cp
f
519.602 144.025 mo
535.241 144.025 li
535.241 137.437 li
519.602 137.437 li
519.602 144.025 li
cp
f
538.892 155.596 mo
532.125 161.64 li
527.216 166.023 li
531.59 170.942 li
537.622 177.724 li
542.53 173.341 li
536.498 166.558 li
543.266 160.514 li
538.892 155.596 li
cp
f
25.1849 92.3655 mo
21.9577 76.4304 li
14.1505 78.0184 li
14.1505 94.6099 li
25.1849 92.3655 li
cp
f
552.54 242.44 mo
552.54 254.386 li
565.849 254.386 li
565.849 242.44 li
552.54 242.44 li
cp
f
456.327 23.9798 mo
456.327 14.1639 li
447.391 14.1639 li
447.391 23.9798 li
456.327 23.9798 li
cp
f
559.157 199.509 mo
559.157 211.455 li
565.849 211.455 li
565.849 199.509 li
559.157 199.509 li
cp
f
330.086 418.049 mo
323.64 411.898 li
317.505 417.599 li
301.461 402.552 li
295.211 408.925 li
317.505 430.703 li
330.086 418.049 li
f
134.921 41.495 mo
160.551 41.495 li
160.551 30.1809 li
134.921 30.1809 li
134.921 41.495 li
cp
f
565.849 368.653 mo
557.45 371.919 li
560.755 380.455 li
565.849 378.474 li
565.849 368.653 li
cp
f
408.804 23.9798 mo
408.804 14.1639 li
399.868 14.1639 li
399.868 23.9798 li
408.804 23.9798 li
cp
f
182.36 425.57 mo
182.36 435.836 li
198.585 435.836 li
198.585 425.57 li
182.36 425.57 li
cp
f
268.642 423.89 mo
268.642 435.836 li
306.744 435.836 li
306.744 423.89 li
268.642 423.89 li
cp
f
165.13 25.478 mo
165.13 14.1639 li
134.921 14.1639 li
134.921 25.478 li
165.13 25.478 li
cp
f
297.51 273.128 mo
270.729 258.924 li
265.482 268.859 li
292.263 283.063 li
297.51 273.128 li
cp
f
33.7531 316.358 mo
42.2402 300.996 li
26.911 292.491 li
14.1505 315.588 li
14.1505 351.84 li
33.7531 316.358 li
cp
f
66.9309 424.597 mo
72.0064 414.539 li
61.9699 409.453 li
48.6563 435.836 li
61.2594 435.836 li
66.9309 424.597 li
cp
f
18.726 433.999 mo
17.8216 435.836 li
22.4432 435.836 li
18.726 433.999 li
cp
f
453.673 404.414 mo
415.571 404.414 li
415.571 416.36 li
453.673 416.36 li
453.673 404.414 li
cp
f
14.1505 26.546 mo
24.5727 42.8289 li
32.383 37.8083 li
17.2491 14.1639 li
14.1505 14.1639 li
14.1505 26.546 li
cp
f
198.585 410.387 mo
182.36 410.387 li
182.36 420.653 li
198.585 420.653 li
198.585 410.387 li
cp
f
197.144 300.532 mo
187.108 295.446 li
165.195 338.869 li
175.232 343.956 li
192.069 310.59 li
197.144 300.532 li
cp
f
289.768 405.086 mo
283.322 398.935 li
277.186 404.637 li
261.142 389.589 li
254.893 395.962 li
277.186 417.74 li
289.768 405.086 li
f
129.099 435.836 mo
139.966 413.924 li
144.972 403.831 li
134.9 398.815 li
126.129 394.446 li
121.123 404.539 li
129.895 408.908 li
116.54 435.836 li
129.099 435.836 li
cp
f
151.709 429.555 mo
160.091 433.803 li
174.154 405.936 li
178.393 397.535 li
170.01 393.287 li
151.709 429.555 li
cp
f
479.322 31.3918 mo
485.469 33.728 li
491.015 19.0734 li
484.867 16.7371 li
479.322 31.3918 li
cp
f
353.532 190.955 mo
353.532 185.477 349.101 181.036 343.634 181.036 cv
343.634 200.874 li
349.101 200.874 353.532 196.433 353.532 190.955 cv
cp
f
349.005 33.5077 mo
365.836 62.7222 li
383.267 52.6364 li
366.436 23.4218 li
349.005 33.5077 li
cp
f
385.539 208.599 mo
377.47 200.792 li
356.424 222.637 li
364.493 230.444 li
385.539 208.599 li
cp
f
368.115 156.502 mo
368.115 176.34 li
373.581 176.34 378.013 171.9 378.013 166.421 cv
378.013 160.943 373.581 156.502 368.115 156.502 cv
cp
f
390.977 116.618 mo
379.015 106.025 li
371.114 114.985 li
383.077 125.578 li
390.977 116.618 li
cp
f
384.891 55.4552 mo
367.46 65.541 li
384.291 94.7556 li
401.722 84.6698 li
384.891 55.4552 li
cp
f
362.565 263.715 mo
372.68 274.366 li
380.388 267.015 li
370.273 256.364 li
362.938 248.639 li
355.23 255.99 li
344.601 266.126 li
351.937 273.851 li
362.565 263.715 li
cp
f
413.856 56.3831 mo
422.792 56.3831 li
422.792 40.2201 li
413.856 40.2201 li
413.856 56.3831 li
cp
f
422.792 18.0397 mo
413.856 18.0397 li
413.856 34.2027 li
422.792 34.2027 li
422.792 18.0397 li
cp
f
413.856 82.977 mo
444.345 82.977 li
444.345 61.3766 li
435.41 61.3766 li
435.41 73.7778 li
422.791 73.7778 li
422.791 61.3766 li
413.856 61.3766 li
413.856 82.977 li
cp
f
434.622 389.728 mo
396.52 389.728 li
396.52 401.674 li
434.622 401.674 li
434.622 389.728 li
cp
f
338.116 144.413 mo
304.454 144.413 li
304.454 156.9 li
338.116 156.9 li
338.116 144.413 li
cp
f
338.116 180.57 mo
304.454 180.57 li
304.454 193.057 li
338.116 193.057 li
338.116 180.57 li
cp
f
338.116 162.491 mo
304.454 162.491 li
304.454 174.979 li
338.116 174.979 li
338.116 162.491 li
cp
f
326.504 260.655 mo
316.791 255.035 li
301.641 281.332 li
311.354 286.952 li
326.504 260.655 li
cp
f
373.187 100.865 mo
361.225 90.2718 li
353.324 99.2323 li
365.287 109.825 li
373.187 100.865 li
cp
f
306.401 257.333 mo
279.62 243.13 li
274.374 253.064 li
301.155 267.268 li
306.401 257.333 li
cp
f
355.397 85.1116 mo
343.435 74.5188 li
335.534 83.4792 li
347.497 94.0721 li
355.397 85.1116 li
cp
f
338.116 126.334 mo
304.454 126.334 li
304.454 138.822 li
338.116 138.822 li
338.116 126.334 li
cp
f
365.772 178.688 mo
365.772 173.21 361.341 168.769 355.875 168.769 cv
355.875 188.607 li
361.341 188.607 365.772 184.166 365.772 178.688 cv
cp
f
334.156 89.1439 mo
319.274 94.9315 li
323.59 106.079 li
338.473 100.291 li
334.156 89.1439 li
cp
f
392.946 273.124 mo
403.061 283.775 li
410.769 276.424 li
400.654 265.773 li
393.319 258.048 li
385.611 265.399 li
374.982 275.535 li
382.318 283.26 li
392.946 273.124 li
cp
f
451.931 265.987 mo
436.815 281.135 li
444.746 289.084 li
459.862 273.935 li
451.931 265.987 li
cp
f
477.873 255.885 mo
469.942 247.937 li
454.826 263.085 li
462.757 271.033 li
477.873 255.885 li
cp
f
396.79 298.627 mo
404.125 306.352 li
414.754 296.216 li
424.868 306.867 li
432.577 299.516 li
422.462 288.865 li
415.127 281.14 li
407.419 288.491 li
396.79 298.627 li
cp
f
422.078 265.186 mo
437.194 250.037 li
429.263 242.089 li
414.147 257.238 li
422.078 265.186 li
cp
f
453.032 125.707 mo
456.338 134.242 li
467.733 129.811 li
464.428 121.275 li
453.032 125.707 li
cp
f
434.239 361.861 mo
445.215 352.103 li
453.175 345.027 li
446.114 337.05 li
436.377 326.051 li
428.417 333.127 li
438.154 344.126 li
427.178 353.884 li
434.239 361.861 li
cp
f
435.409 56.3831 mo
444.345 56.3831 li
444.345 40.2201 li
435.409 40.2201 li
435.409 56.3831 li
cp
f
410.744 253.237 mo
425.86 238.089 li
417.929 230.14 li
402.813 245.289 li
410.744 253.237 li
f
435.409 34.2027 mo
444.345 34.2027 li
444.345 18.0397 li
435.409 18.0397 li
435.409 34.2027 li
cp
f
479.431 151.641 mo
482.736 160.176 li
494.131 155.745 li
490.826 147.209 li
479.431 151.641 li
cp
f
439.833 112.74 mo
443.138 121.275 li
454.534 116.843 li
451.228 108.308 li
439.833 112.74 li
cp
f
472.091 50.4979 mo
478.238 52.8342 li
483.784 38.1795 li
477.637 35.8434 li
472.091 50.4979 li
cp
f
464.861 69.6041 mo
471.008 71.9403 li
476.554 57.2858 li
470.407 54.9495 li
464.861 69.6041 li
cp
f
288.549 219.452 mo
293.388 209.955 li
280.321 203.268 li
270.845 198.419 li
266.006 207.915 li
259.333 221.01 li
268.809 225.86 li
275.482 212.765 li
288.549 219.452 li
cp
f
507.33 168.712 mo
504.025 160.176 li
492.63 164.608 li
495.935 173.143 li
507.33 168.712 li
cp
f
469.537 147.209 mo
480.932 142.778 li
477.627 134.242 li
466.232 138.674 li
469.537 147.209 li
cp
f
432.158 239.188 mo
440.089 247.136 li
455.205 231.987 li
447.274 224.039 li
432.158 239.188 li
f
466.539 243.936 mo
458.608 235.988 li
443.492 251.137 li
451.423 259.085 li
466.539 243.936 li
f
425.481 269.187 mo
433.412 277.135 li
448.528 261.986 li
440.597 254.038 li
425.481 269.187 li
cp
f
428.755 235.187 mo
443.872 220.038 li
435.94 212.09 li
420.824 227.239 li
428.755 235.187 li
f
438.029 95.3409 mo
426.634 99.7725 li
429.939 108.308 li
441.334 103.876 li
438.029 95.3409 li
cp
f
399.87 337.402 mo
341.469 280.431 li
341.469 225.023 li
402.728 163.631 li
489.674 250.127 li
399.87 337.402 li
402.704 150.221 mo
335.872 217.196 li
273.493 183.484 li
304.038 121.434 330.525 65.479 353.679 14.164 cv
343.273 14.164 li
320.622 64.2279 294.801 118.718 265.144 178.972 cv
214.416 151.557 li
282.965 14.164 li
272.367 14.164 li
203.922 151.348 li
189.427 177.835 li
67.9684 119.49 li
14.1505 34.9321 li
14.1505 52.5977 li
61.4315 126.885 li
184.862 186.177 li
106.956 328.537 li
106.622 329.147 li
83.8777 435.836 li
93.5709 435.836 li
115.602 332.494 li
210.014 159.971 li
260.943 187.495 li
224.661 260.977 182.725 342.979 133.974 435.836 cv
144.685 435.836 li
192.418 344.851 233.583 264.319 269.291 192.006 cv
331.989 225.89 li
331.989 284.441 li
395.124 346.029 li
395.124 376.178 li
330.755 435.836 li
344.716 435.836 li
404.603 380.332 li
404.603 355.276 li
487.185 435.836 li
500.775 435.836 li
406.665 344.03 li
565.849 189.48 li
565.849 176.25 li
496.48 243.513 li
402.704 150.221 li
1 .694118 0 rgb
f
202.106 154.667 mo
201.876 154.54 201.588 154.625 201.462 154.855 cv
189.011 177.607 li
188.885 177.837 188.969 178.126 189.199 178.252 cv
189.426 178.311 li
189.594 178.311 189.756 178.221 189.842 178.064 cv
202.293 155.311 li
202.419 155.082 202.335 154.793 202.106 154.667 cv
cp
.439216 .439216 .435294 rgb
f
210.38 159.305 mo
210.15 159.178 209.862 159.263 209.736 159.494 cv
197.285 182.246 li
197.159 182.475 197.243 182.764 197.473 182.891 cv
197.7 182.949 li
197.868 182.949 198.03 182.86 198.117 182.702 cv
210.567 159.95 li
210.693 159.72 210.609 159.431 210.38 159.305 cv
cp
f
370.302 399.096 mo
370.122 398.905 369.822 398.897 369.632 399.078 cv
350.831 416.92 li
350.641 417.1 350.632 417.401 350.812 417.592 cv
351.011 417.717 li
351.171 417.768 351.352 417.733 351.483 417.61 cv
370.284 399.768 li
370.474 399.588 370.482 399.287 370.302 399.096 cv
cp
f
376.763 406.05 mo
376.583 405.858 376.283 405.851 376.093 406.032 cv
357.291 423.874 li
357.101 424.054 357.093 424.355 357.273 424.545 cv
357.472 424.671 li
357.631 424.722 357.813 424.687 357.943 424.563 cv
376.745 406.721 li
376.935 406.541 376.943 406.24 376.763 406.05 cv
cp
f
246.216 217.871 mo
245.982 217.751 245.697 217.846 245.579 218.08 cv
228.631 251.557 li
228.512 251.79 228.606 252.076 228.839 252.195 cv
229.068 252.246 li
229.236 252.241 229.395 252.147 229.476 251.986 cv
246.424 218.51 li
246.542 218.276 246.449 217.99 246.216 217.871 cv
cp
f
254.633 222.243 mo
254.399 222.123 254.115 222.217 253.996 222.451 cv
237.048 255.928 li
236.93 256.162 237.023 256.448 237.257 256.566 cv
237.486 256.618 li
237.653 256.612 237.813 256.518 237.894 256.358 cv
254.841 222.881 li
254.96 222.648 254.867 222.361 254.633 222.243 cv
cp
f
175.562 96.2567 mo
154.836 89.967 li
154.711 89.9285 154.579 89.9999 154.541 90.1256 cv
154.503 90.2508 154.574 90.3835 154.699 90.4215 cv
175.425 96.7113 li
175.493 96.7215 li
175.595 96.7215 175.689 96.6557 175.72 96.5527 cv
175.758 96.4274 175.687 96.2948 175.562 96.2567 cv
cp
f
174.157 100.823 mo
153.431 94.5331 li
153.305 94.4955 153.173 94.566 153.135 94.6917 cv
153.097 94.817 153.168 94.9496 153.293 94.9877 cv
174.019 101.277 li
174.088 101.288 li
174.19 101.288 174.284 101.222 174.315 101.119 cv
174.353 100.994 174.282 100.861 174.157 100.823 cv
cp
f
127.756 278.97 mo
121.99 278.97 116.578 278.729 111.898 278.307 cv
113.459 277.964 li
112.052 271.528 li
96.7749 274.882 li
96.8648 275.293 li
96.0214 274.836 95.5686 274.351 95.5686 273.85 cv
95.5686 271.851 102.768 270.12 113.268 269.276 cv
131.226 278.941 li
130.086 278.961 128.929 278.97 127.756 278.97 cv
145.348 278.139 mo
149.741 270.11 li
152.591 270.534 154.956 271.04 156.689 271.604 cv
154.14 276.784 li
151.781 277.319 148.793 277.78 145.348 278.139 cv
135.723 275.97 mo
122.402 268.8 li
124.143 268.754 125.932 268.729 127.756 268.729 cv
128.65 268.729 129.535 268.735 130.411 268.747 cv
133.54 270.305 li
134.269 268.834 li
136.069 268.893 137.817 268.976 139.493 269.081 cv
135.723 275.97 li
.678431 .666667 .627451 rgb
f
131.226 278.941 mo
113.268 269.276 li
116.098 269.049 119.168 268.886 122.402 268.8 cv
135.723 275.97 li
134.136 278.87 li
133.181 278.9 132.209 278.924 131.226 278.941 cv
.741176 .741176 .741176 rgb
f
154.14 276.784 mo
156.689 271.604 li
158.773 272.282 159.943 273.044 159.943 273.85 cv
159.943 274.941 157.798 275.953 154.14 276.784 cv
.576471 .560784 .509804 rgb
f
111.898 278.307 mo
104.704 277.658 99.2375 276.581 96.8648 275.293 cv
96.7749 274.882 li
112.052 271.528 li
113.459 277.964 li
111.898 278.307 li
f
133.54 270.305 mo
130.411 268.747 li
131.721 268.764 133.008 268.793 134.269 268.834 cv
133.54 270.305 li
f
134.136 278.87 mo
135.723 275.97 li
139.493 269.081 li
143.321 269.319 146.791 269.671 149.741 270.11 cv
145.348 278.139 li
141.992 278.488 138.204 278.74 134.136 278.87 cv
.741176 .513725 0 rgb
f
195.013 220.932 mo
60.4987 220.932 li
38.9972 220.932 21.5668 203.502 21.5668 182 cv
21.5668 97.1937 li
21.5668 75.6922 38.9972 58.2617 60.4987 58.2617 cv
195.013 58.2617 li
216.514 58.2617 233.945 75.6922 233.945 97.1937 cv
233.945 182 li
233.945 203.502 216.514 220.932 195.013 220.932 cv
cp
.0980392 .564706 .160784 rgb
f
154.694 218.334 mo
127.756 273.103 li
100.818 218.334 li
154.694 218.334 li
cp
f
429.492 239.925 mo
427.654 239.925 425.853 239.901 424.099 239.854 cv
425.86 238.089 li
417.929 230.14 li
409.296 238.792 li
405.535 238.309 402.47 237.695 400.381 236.992 cv
406.068 231.293 li
410.603 230.527 416.605 229.984 423.357 229.777 cv
428.755 235.187 li
434.192 229.738 li
436.659 229.796 439.036 229.898 441.287 230.039 cv
432.158 239.188 li
432.866 239.897 li
431.757 239.916 430.631 239.925 429.492 239.925 cv
448.24 238.967 mo
455.205 231.987 li
454.875 231.656 li
456.837 232.055 458.435 232.503 459.587 232.985 cv
461.645 235.04 li
461.476 235.633 460.674 236.2 459.343 236.724 cv
458.608 235.988 li
457.183 237.416 li
454.904 238.027 451.852 238.555 448.24 238.967 cv
.678431 .666667 .627451 rgb
f
461.645 235.04 mo
459.587 232.985 li
460.939 233.55 461.679 234.164 461.679 234.805 cv
461.679 234.884 461.668 234.962 461.645 235.04 cv
.498039 .643137 .219608 rgb
f
400.381 236.992 mo
398.408 236.329 397.304 235.587 397.304 234.805 cv
397.304 233.445 400.635 232.209 406.068 231.293 cv
400.381 236.992 li
.741176 .741176 .741176 rgb
f
424.099 239.854 mo
418.555 239.705 413.491 239.33 409.296 238.792 cv
417.929 230.14 li
425.86 238.089 li
424.099 239.854 li
.576471 .560784 .509804 rgb
f
432.866 239.897 mo
432.158 239.188 li
441.287 230.039 li
446.681 230.377 451.362 230.94 454.875 231.656 cv
455.205 231.987 li
448.24 238.967 li
443.82 239.472 438.565 239.803 432.866 239.897 cv
f
457.183 237.416 mo
458.608 235.988 li
459.343 236.724 li
458.731 236.964 458.007 237.196 457.183 237.416 cv
f
428.755 235.187 mo
423.357 229.777 li
425.343 229.716 427.393 229.684 429.492 229.684 cv
431.089 229.684 432.658 229.703 434.192 229.738 cv
428.755 235.187 li
f
496.749 181.887 mo
362.235 181.887 li
351.106 181.887 341.068 177.217 333.973 169.731 cv
327.359 162.753 323.303 153.328 323.303 142.955 cv
323.303 58.1484 li
323.303 45.2136 329.611 33.752 339.318 26.6723 cv
345.747 21.9833 353.668 19.2164 362.235 19.2164 cv
496.749 19.2164 li
508.691 19.2164 519.378 24.5936 526.519 33.0588 cv
532.236 39.8348 535.681 48.5893 535.681 58.1484 cv
535.681 142.955 li
535.681 154.563 530.6 164.985 522.541 172.118 cv
515.673 178.197 506.642 181.887 496.749 181.887 cv
cp
.482353 .192157 .4 rgb
f
456.429 179.288 mo
429.492 234.058 li
402.554 179.288 li
456.429 179.288 li
cp
f
198.531 195.296 mo
59.4846 195.296 li
59.4846 123.993 li
198.531 123.993 li
198.531 195.296 li
cp
1 .682353 .172549 rgb
f
205.546 189.666 mo
202.345 188.666 201.398 184.535 201.301 184.066 cv
201.271 183.783 li
201.271 125.829 li
204.054 125.829 li
204.054 183.625 li
204.27 184.493 205.047 186.594 206.376 187.01 cv
205.546 189.666 li
cp
.764706 .772549 .784314 rgb
f
196.776 103.436 mo
61.2394 103.436 li
50.9496 123.993 li
207.066 123.993 li
196.776 103.436 li
cp
.901961 0 .0156863 rgb
f
196.776 103.45 mo
61.24 103.45 li
61.24 97.0422 li
196.776 97.0422 li
196.776 103.45 li
cp
.776471 .0196078 .0588235 rgb
f
200.235 195.296 mo
57.7805 195.296 li
57.7805 186.692 li
57.7805 185.993 58.3443 185.427 59.04 185.427 cv
198.976 185.427 li
199.671 185.427 200.235 185.993 200.235 186.692 cv
200.235 195.296 li
cp
.52549 .52549 .529412 rgb
f
205.02 127.242 mo
51.8852 127.242 li
50.3242 127.242 49.0588 125.977 49.0588 124.415 cv
49.0588 123.787 li
207.846 123.787 li
207.846 124.415 li
207.846 125.977 206.58 127.242 205.02 127.242 cv
cp
.847059 .854902 .862745 rgb
f
209.687 196.93 mo
41.1732 196.93 li
41.1732 196.909 li
41.1732 195.765 42.4415 194.838 44.0059 194.838 cv
206.855 194.838 li
208.419 194.838 209.687 195.765 209.687 196.909 cv
209.687 196.93 li
cp
.490196 .278431 .105882 rgb
f
185.714 174.537 mo
101.977 174.537 li
101.977 133.131 li
185.714 133.131 li
185.714 174.537 li
cp
.627451 .827451 .878431 rgb
f
102.905 173.609 mo
184.786 173.609 li
184.786 134.059 li
102.905 134.059 li
102.905 173.609 li
cp
186.641 175.464 mo
101.049 175.464 li
101.049 132.204 li
186.641 132.204 li
186.641 175.464 li
cp
1 1 1 rgb
f
145.104 174.978 mo
142.587 174.978 li
142.587 132.689 li
145.104 132.689 li
145.104 174.978 li
cp
f
123.03 174.978 mo
121.844 174.978 li
121.844 132.689 li
123.03 132.689 li
123.03 174.978 li
cp
f
101.293 147.645 mo
101.293 146.46 li
143.581 146.46 li
143.581 147.645 li
101.293 147.645 li
cp
f
101.293 163.879 mo
101.293 162.694 li
143.581 162.694 li
143.581 163.879 li
101.293 163.879 li
cp
f
165.78 174.978 mo
164.595 174.978 li
164.595 132.689 li
165.78 132.689 li
165.78 174.978 li
cp
f
144.043 147.645 mo
144.043 146.46 li
186.332 146.46 li
186.332 147.645 li
144.043 147.645 li
cp
f
144.043 163.879 mo
144.043 162.694 li
186.332 162.694 li
186.332 163.879 li
144.043 163.879 li
cp
f
90.1502 184.152 mo
71.5374 184.152 li
71.5374 143.607 li
90.1502 143.607 li
90.1502 184.152 li
cp
.4 .196078 .0196078 rgb
f
85.4733 178.164 mo
76.2144 178.164 li
75.1021 178.164 74.2003 177.262 74.2003 176.15 cv
74.2003 148.171 li
74.2003 147.059 75.1021 146.157 76.2144 146.157 cv
85.4733 146.157 li
86.5856 146.157 87.4874 147.059 87.4874 148.171 cv
87.4874 176.15 li
87.4874 177.262 86.5856 178.164 85.4733 178.164 cv
cp
.627451 .827451 .878431 rgb
f
88.9271 165.192 mo
72.7606 165.192 li
72.7606 162.566 li
88.9271 162.566 li
88.9271 165.192 li
cp
.4 .196078 .0196078 rgb
f
74.3149 163.925 mo
74.3149 164.465 73.8768 164.904 73.3364 164.904 cv
72.796 164.904 72.3578 164.465 72.3578 163.925 cv
72.3578 163.385 72.796 162.947 73.3364 162.947 cv
73.8768 162.947 74.3149 163.385 74.3149 163.925 cv
cp
.682353 .686275 .698039 rgb
f
50.5977 151.077 mo
46.0414 151.077 li
45.1333 143.548 li
51.5058 143.548 li
50.5977 151.077 li
cp
.682353 .909804 .988235 rgb
f
51.4713 143.004 mo
49.5904 143.004 46.8962 143.004 45.1678 143.004 cv
45.1678 141.263 46.5789 139.852 48.3196 139.852 cv
50.0602 139.852 51.4713 141.263 51.4713 143.004 cv
cp
.223529 .215686 .227451 rgb
f
52.5678 142.354 mo
44.0713 142.354 li
44.0713 143.548 li
52.5678 143.548 li
52.5678 142.354 li
cp
.105882 .109804 .12549 rgb
f
50.4823 151.282 mo
49.1916 151.282 47.3429 151.282 46.1568 151.282 cv
46.1568 152.477 47.1252 153.445 48.3196 153.445 cv
49.5139 153.445 50.4823 152.477 50.4823 151.282 cv
cp
f
51.5246 151.728 mo
45.1146 151.728 li
45.1146 150.594 li
51.5246 150.594 li
51.5246 151.728 li
cp
f
47.5948 186.758 mo
47.5948 152.595 li
49.043 152.595 li
49.043 186.758 li
47.5948 186.758 li
cp
f
46.8217 194.952 mo
46.8217 182.984 li
49.816 182.984 li
49.816 194.952 li
46.8217 194.952 li
cp
f
146.878 94.8617 mo
191.606 94.8617 li
191.606 82.9512 li
146.878 82.9512 li
146.878 94.8617 li
cp
.4 .196078 .0196078 rgb
f
148.132 93.6326 mo
190.352 93.6326 li
190.352 84.1803 li
148.132 84.1803 li
148.132 93.6326 li
cp
1 1 1 rgb
f
151.214 97.0422 mo
150.078 97.0422 li
150.078 94.8009 li
151.214 94.8009 li
151.214 97.0422 li
cp
.4 .4 .4 rgb
f
188.405 97.0422 mo
187.269 97.0422 li
187.269 94.8009 li
188.405 94.8009 li
188.405 97.0422 li
cp
f
152.999 87.7021 mo
152.558 88.1694 li
152.279 87.9648 152.001 87.8652 151.677 87.8652 cv
151.346 87.8652 151.137 87.9912 151.137 88.2217 cv
151.137 88.4531 151.288 88.5474 151.914 88.7256 cv
152.674 88.9463 153.109 89.2295 153.109 89.9014 cv
153.109 90.5786 152.517 91.0513 151.514 91.0513 cv
150.818 91.0513 150.32 90.8203 149.989 90.5313 cv
150.471 90.0537 li
150.766 90.2793 151.085 90.4106 151.485 90.4106 cv
151.879 90.4106 152.123 90.2427 152.123 89.9648 cv
152.123 89.6968 151.972 89.5762 151.387 89.4136 cv
150.488 89.1616 150.157 88.8257 150.157 88.2852 cv
150.157 87.6445 150.772 87.2354 151.607 87.2354 cv
152.222 87.2354 152.645 87.3979 152.999 87.7021 cv
cp
.901961 0 .0156863 rgb
f
156.706 89.7549 mo
156.706 90.4893 156.185 91.0513 155.135 91.0513 cv
154.085 91.0513 153.569 90.521 153.569 89.7549 cv
153.569 87.3242 li
154.521 87.3242 li
154.521 89.7178 li
154.521 90.1851 154.706 90.4106 155.135 90.4106 cv
155.57 90.4106 155.755 90.1851 155.755 89.7178 cv
155.755 87.3242 li
156.706 87.3242 li
156.706 89.7549 li
cp
f
159.394 88.5107 mo
159.394 88.1221 159.156 87.9385 158.686 87.9385 cv
158.35 87.9385 li
158.35 89.1299 li
158.704 89.1299 li
159.133 89.1299 159.394 88.9673 159.394 88.5107 cv
cp
160.374 88.5107 mo
160.374 89.3555 159.712 89.7495 158.785 89.7495 cv
158.35 89.7495 li
158.35 90.9619 li
157.399 90.9619 li
157.399 87.3242 li
158.698 87.3242 li
159.735 87.3242 160.374 87.7129 160.374 88.5107 cv
cp
f
163.24 87.9385 mo
161.825 87.9385 li
161.825 88.8096 li
163.061 88.8096 li
163.061 89.4136 li
161.825 89.4136 li
161.825 90.3428 li
163.339 90.3428 li
163.339 90.9619 li
160.875 90.9619 li
160.875 87.3242 li
163.339 87.3242 li
163.24 87.9385 li
cp
f
164.873 88.9775 mo
165.273 88.9775 li
165.69 88.9775 165.911 88.8149 165.911 88.4316 cv
165.911 88.0801 165.685 87.9277 165.215 87.9277 cv
164.873 87.9277 li
164.873 88.9775 li
cp
165.244 89.5708 mo
164.873 89.5708 li
164.873 90.9619 li
163.922 90.9619 li
163.922 87.3242 li
165.238 87.3242 li
166.328 87.3242 166.891 87.6758 166.891 88.4316 cv
166.891 88.9097 166.641 89.1929 166.119 89.4136 cv
167.14 90.9619 li
166.067 90.9619 li
165.244 89.5708 li
cp
f
171.485 90.9619 mo
170.552 90.9619 li
170.482 89.5396 li
170.453 89.0303 170.441 88.5054 170.471 88.0537 cv
169.85 90.5786 li
168.951 90.5786 li
168.291 88.0537 li
168.331 88.5894 168.331 89.041 168.308 89.5498 cv
168.238 90.9619 li
167.311 90.9619 li
167.612 87.3242 li
168.813 87.3242 li
169.415 89.7915 li
169.978 87.3242 li
171.184 87.3242 li
171.485 90.9619 li
cp
f
173.835 89.5552 mo
173.412 87.9492 li
172.988 89.5552 li
173.835 89.5552 li
cp
174.003 90.1797 mo
172.826 90.1797 li
172.623 90.9619 li
171.638 90.9619 li
172.85 87.3242 li
174.003 87.3242 li
175.215 90.9619 li
174.206 90.9619 li
174.003 90.1797 li
cp
f
176.458 88.9775 mo
176.859 88.9775 li
177.276 88.9775 177.497 88.8149 177.497 88.4316 cv
177.497 88.0801 177.271 87.9277 176.801 87.9277 cv
176.458 87.9277 li
176.458 88.9775 li
cp
176.83 89.5708 mo
176.458 89.5708 li
176.458 90.9619 li
175.508 90.9619 li
175.508 87.3242 li
176.824 87.3242 li
177.914 87.3242 178.477 87.6758 178.477 88.4316 cv
178.477 88.9097 178.227 89.1929 177.705 89.4136 cv
178.726 90.9619 li
177.653 90.9619 li
176.83 89.5708 li
cp
f
181.059 88.957 mo
182.445 90.9619 li
181.343 90.9619 li
180.062 89.0195 li
181.337 87.3242 li
182.341 87.3242 li
181.059 88.957 li
cp
180.033 90.9619 mo
179.082 90.9619 li
179.082 87.3242 li
180.033 87.3242 li
180.033 90.9619 li
cp
f
185.115 87.9385 mo
183.7 87.9385 li
183.7 88.8096 li
184.935 88.8096 li
184.935 89.4136 li
183.7 89.4136 li
183.7 90.3428 li
185.213 90.3428 li
185.213 90.9619 li
182.749 90.9619 li
182.749 87.3242 li
185.213 87.3242 li
185.115 87.9385 li
cp
f
188.452 87.9858 mo
187.46 87.9858 li
187.46 90.9619 li
186.51 90.9619 li
186.51 87.9858 li
185.472 87.9858 li
185.472 87.3242 li
188.545 87.3242 li
188.452 87.9858 li
cp
f
65.6502 142.076 mo
96.0375 142.076 li
96.0375 134.249 li
65.6502 134.249 li
65.6502 142.076 li
cp
.0980392 .564706 .160784 rgb
f
66.5025 141.184 mo
95.1851 141.184 li
95.1851 135.141 li
66.5025 135.141 li
66.5025 141.184 li
cp
1 1 1 rgb
f
69.9756 137.227 mo
69.6812 137.539 li
69.4951 137.402 69.3091 137.335 69.0918 137.335 cv
68.8711 137.335 68.7314 137.419 68.7314 137.574 cv
68.7314 137.728 68.832 137.792 69.251 137.911 cv
69.7588 138.058 70.0493 138.248 70.0493 138.697 cv
70.0493 139.149 69.6538 139.465 68.9834 139.465 cv
68.5186 139.465 68.1851 139.311 67.9639 139.118 cv
68.2856 138.799 li
68.4834 138.95 68.6968 139.037 68.9639 139.037 cv
69.2275 139.037 69.3901 138.925 69.3901 138.739 cv
69.3901 138.56 69.2896 138.479 68.8979 138.371 cv
68.2974 138.202 68.0767 137.978 68.0767 137.616 cv
68.0767 137.188 68.4873 136.914 69.0454 136.914 cv
69.4561 136.914 69.7393 137.023 69.9756 137.227 cv
cp
.901961 0 .0156863 rgb
f
72.4561 138.599 mo
72.4561 139.09 72.1069 139.465 71.4058 139.465 cv
70.7041 139.465 70.3594 139.111 70.3594 138.599 cv
70.3594 136.974 li
70.9946 136.974 li
70.9946 138.574 li
70.9946 138.886 71.1187 139.037 71.4058 139.037 cv
71.6963 139.037 71.8203 138.886 71.8203 138.574 cv
71.8203 136.974 li
72.4561 136.974 li
72.4561 138.599 li
cp
f
74.2539 137.767 mo
74.2539 137.507 74.0952 137.384 73.7813 137.384 cv
73.5566 137.384 li
73.5566 138.181 li
73.793 138.181 li
74.0796 138.181 74.2539 138.072 74.2539 137.767 cv
cp
74.9092 137.767 mo
74.9092 138.332 74.4673 138.595 73.8472 138.595 cv
73.5566 138.595 li
73.5566 139.406 li
72.9209 139.406 li
72.9209 136.974 li
73.7891 136.974 li
74.4829 136.974 74.9092 137.233 74.9092 137.767 cv
cp
f
76.8271 137.384 mo
75.8818 137.384 li
75.8818 137.967 li
76.707 137.967 li
76.707 138.371 li
75.8818 138.371 li
75.8818 138.992 li
76.8931 138.992 li
76.8931 139.406 li
75.2461 139.406 li
75.2461 136.974 li
76.8931 136.974 li
76.8271 137.384 li
cp
f
77.9204 138.079 mo
78.1875 138.079 li
78.4668 138.079 78.6143 137.97 78.6143 137.714 cv
78.6143 137.479 78.4629 137.377 78.1489 137.377 cv
77.9204 137.377 li
77.9204 138.079 li
cp
78.1685 138.476 mo
77.9204 138.476 li
77.9204 139.406 li
77.2847 139.406 li
77.2847 136.974 li
78.1646 136.974 li
78.8931 136.974 79.269 137.209 79.269 137.714 cv
79.269 138.034 79.1025 138.223 78.7534 138.371 cv
79.4355 139.406 li
78.7188 139.406 li
78.1685 138.476 li
cp
f
82.3423 139.406 mo
81.7183 139.406 li
81.6719 138.455 li
81.6523 138.114 81.6445 137.763 81.6641 137.461 cv
81.2495 139.149 li
80.6484 139.149 li
80.2065 137.461 li
80.2339 137.819 80.2339 138.121 80.2183 138.462 cv
80.1719 139.406 li
79.5518 139.406 li
79.7534 136.974 li
80.5557 136.974 li
80.9585 138.623 li
81.3345 136.974 li
82.1406 136.974 li
82.3423 139.406 li
cp
f
83.916 138.465 mo
83.6333 137.391 li
83.3501 138.465 li
83.916 138.465 li
cp
84.0283 138.883 mo
83.2417 138.883 li
83.106 139.406 li
82.4473 139.406 li
83.2573 136.974 li
84.0283 136.974 li
84.8384 139.406 li
84.1641 139.406 li
84.0283 138.883 li
cp
f
85.6719 138.079 mo
85.939 138.079 li
86.2183 138.079 86.3652 137.97 86.3652 137.714 cv
86.3652 137.479 86.2144 137.377 85.9004 137.377 cv
85.6719 137.377 li
85.6719 138.079 li
cp
85.9199 138.476 mo
85.6719 138.476 li
85.6719 139.406 li
85.0361 139.406 li
85.0361 136.974 li
85.916 136.974 li
86.6445 136.974 87.0205 137.209 87.0205 137.714 cv
87.0205 138.034 86.854 138.223 86.5049 138.371 cv
87.187 139.406 li
86.4702 139.406 li
85.9199 138.476 li
cp
f
88.749 138.065 mo
89.6753 139.406 li
88.939 139.406 li
88.082 138.107 li
88.9351 136.974 li
89.6055 136.974 li
88.749 138.065 li
cp
88.063 139.406 mo
87.4272 139.406 li
87.4272 136.974 li
88.063 136.974 li
88.063 139.406 li
cp
f
91.4614 137.384 mo
90.5161 137.384 li
90.5161 137.967 li
91.3413 137.967 li
91.3413 138.371 li
90.5161 138.371 li
90.5161 138.992 li
91.5273 138.992 li
91.5273 139.406 li
89.8804 139.406 li
89.8804 136.974 li
91.5273 136.974 li
91.4614 137.384 li
cp
f
93.6938 137.416 mo
93.0313 137.416 li
93.0313 139.406 li
92.3955 139.406 li
92.3955 137.416 li
91.7017 137.416 li
91.7017 136.974 li
93.7559 136.974 li
93.6938 137.416 li
cp
f
106.206 185.059 mo
106.003 185.059 li
106.003 180.642 li
106.206 180.642 li
106.206 185.059 li
cp
.027451 .447059 .0666667 rgb
f
106.072 183.236 mo
106.072 183.236 105.534 183.077 105.115 182.822 cv
104.738 182.591 104.782 182.268 104.924 182.122 cv
105.066 181.976 105.385 181.924 105.629 182.292 cv
105.889 182.683 106.072 183.236 106.072 183.236 cv
cp
f
106.105 183.618 mo
106.105 183.618 106.643 183.459 107.062 183.203 cv
107.438 182.973 107.394 182.65 107.252 182.504 cv
107.11 182.358 106.792 182.305 106.548 182.673 cv
106.288 183.065 106.105 183.618 106.105 183.618 cv
cp
f
107.622 181.035 mo
107.679 180.895 107.592 180.728 107.173 180.558 cv
107.025 180.499 106.86 180.452 106.701 180.416 cv
106.86 180.377 107.024 180.328 107.171 180.266 cv
107.587 180.09 107.671 179.921 107.612 179.782 cv
107.553 179.643 107.373 179.586 106.957 179.762 cv
106.811 179.825 106.661 179.909 106.523 179.996 cv
106.608 179.856 106.689 179.705 106.749 179.558 cv
106.919 179.139 106.859 178.96 106.719 178.903 cv
106.579 178.847 106.412 178.933 106.242 179.352 cv
106.182 179.5 106.136 179.665 106.1 179.825 cv
106.061 179.666 106.012 179.501 105.95 179.355 cv
105.774 178.938 105.605 178.854 105.466 178.913 cv
105.327 178.972 105.27 179.152 105.446 179.568 cv
105.508 179.714 105.593 179.864 105.68 180.003 cv
105.54 179.917 105.389 179.836 105.242 179.776 cv
104.823 179.606 104.644 179.666 104.587 179.806 cv
104.531 179.946 104.617 180.113 105.036 180.283 cv
105.184 180.343 105.349 180.389 105.509 180.425 cv
105.349 180.464 105.185 180.513 105.039 180.575 cv
104.622 180.751 104.538 180.92 104.597 181.059 cv
104.656 181.198 104.836 181.255 105.252 181.079 cv
105.398 181.017 105.548 180.933 105.687 180.845 cv
105.601 180.985 105.52 181.136 105.46 181.284 cv
105.29 181.703 105.35 181.881 105.49 181.938 cv
105.63 181.995 105.797 181.908 105.967 181.489 cv
106.027 181.342 106.073 181.176 106.109 181.017 cv
106.148 181.176 106.197 181.34 106.259 181.487 cv
106.435 181.903 106.604 181.987 106.743 181.928 cv
106.882 181.869 106.939 181.69 106.763 181.273 cv
106.701 181.127 106.617 180.977 106.529 180.839 cv
106.669 180.924 106.82 181.006 106.968 181.065 cv
107.387 181.235 107.565 181.175 107.622 181.035 cv
cp
1 1 1 rgb
f
106.505 180.583 mo
106.416 180.804 106.164 180.911 105.942 180.822 cv
105.721 180.732 105.614 180.48 105.704 180.258 cv
105.793 180.037 106.045 179.93 106.267 180.02 cv
106.488 180.11 106.595 180.362 106.505 180.583 cv
cp
.901961 0 .0156863 rgb
f
110.385 185.059 mo
110.182 185.059 li
110.182 180.642 li
110.385 180.642 li
110.385 185.059 li
cp
.027451 .447059 .0666667 rgb
f
110.251 183.236 mo
110.251 183.236 109.713 183.077 109.294 182.822 cv
108.917 182.591 108.961 182.268 109.104 182.122 cv
109.245 181.976 109.564 181.924 109.808 182.292 cv
110.068 182.683 110.251 183.236 110.251 183.236 cv
cp
f
110.284 183.618 mo
110.284 183.618 110.822 183.459 111.241 183.203 cv
111.618 182.973 111.573 182.65 111.431 182.504 cv
111.289 182.358 110.971 182.305 110.727 182.673 cv
110.467 183.065 110.284 183.618 110.284 183.618 cv
cp
f
111.801 181.035 mo
111.858 180.895 111.771 180.728 111.352 180.558 cv
111.205 180.499 111.039 180.452 110.88 180.416 cv
111.039 180.377 111.203 180.328 111.35 180.266 cv
111.766 180.09 111.85 179.921 111.791 179.782 cv
111.732 179.643 111.553 179.586 111.136 179.762 cv
110.99 179.825 110.84 179.909 110.702 179.996 cv
110.787 179.856 110.868 179.705 110.928 179.558 cv
111.098 179.139 111.038 178.96 110.898 178.903 cv
110.758 178.847 110.591 178.933 110.421 179.352 cv
110.361 179.5 110.315 179.665 110.279 179.825 cv
110.24 179.666 110.191 179.501 110.129 179.355 cv
109.953 178.938 109.785 178.854 109.645 178.913 cv
109.506 178.972 109.449 179.152 109.625 179.568 cv
109.688 179.714 109.772 179.864 109.859 180.003 cv
109.719 179.917 109.568 179.836 109.421 179.776 cv
109.002 179.606 108.823 179.666 108.766 179.806 cv
108.71 179.946 108.796 180.113 109.215 180.283 cv
109.363 180.343 109.528 180.389 109.688 180.425 cv
109.529 180.464 109.364 180.513 109.218 180.575 cv
108.801 180.751 108.717 180.92 108.776 181.059 cv
108.835 181.198 109.015 181.255 109.431 181.079 cv
109.578 181.017 109.727 180.933 109.866 180.845 cv
109.781 180.985 109.699 181.136 109.639 181.284 cv
109.469 181.703 109.529 181.881 109.669 181.938 cv
109.809 181.995 109.976 181.908 110.146 181.489 cv
110.206 181.342 110.252 181.176 110.288 181.017 cv
110.327 181.176 110.376 181.34 110.438 181.487 cv
110.614 181.903 110.783 181.987 110.922 181.928 cv
111.061 181.869 111.118 181.69 110.942 181.273 cv
110.88 181.127 110.796 180.977 110.708 180.839 cv
110.848 180.924 110.999 181.006 111.147 181.065 cv
111.566 181.235 111.744 181.175 111.801 181.035 cv
cp
1 1 1 rgb
f
110.684 180.583 mo
110.595 180.804 110.343 180.911 110.121 180.822 cv
109.9 180.732 109.793 180.48 109.883 180.258 cv
109.973 180.037 110.225 179.93 110.446 180.02 cv
110.667 180.11 110.774 180.362 110.684 180.583 cv
cp
.901961 0 .0156863 rgb
f
114.565 185.059 mo
114.361 185.059 li
114.361 180.642 li
114.565 180.642 li
114.565 185.059 li
cp
.027451 .447059 .0666667 rgb
f
114.43 183.236 mo
114.43 183.236 113.892 183.077 113.473 182.822 cv
113.096 182.591 113.141 182.268 113.283 182.122 cv
113.424 181.976 113.743 181.924 113.987 182.292 cv
114.247 182.683 114.43 183.236 114.43 183.236 cv
cp
f
114.463 183.618 mo
114.463 183.618 115.001 183.459 115.42 183.203 cv
115.797 182.973 115.752 182.65 115.61 182.504 cv
115.468 182.358 115.15 182.305 114.906 182.673 cv
114.646 183.065 114.463 183.618 114.463 183.618 cv
cp
f
115.98 181.035 mo
116.037 180.895 115.95 180.728 115.531 180.558 cv
115.384 180.499 115.218 180.452 115.059 180.416 cv
115.218 180.377 115.382 180.328 115.529 180.266 cv
115.945 180.09 116.029 179.921 115.97 179.782 cv
115.911 179.643 115.732 179.586 115.315 179.762 cv
115.169 179.825 115.02 179.909 114.881 179.996 cv
114.966 179.856 115.048 179.705 115.107 179.558 cv
115.277 179.139 115.217 178.96 115.077 178.903 cv
114.937 178.847 114.77 178.933 114.6 179.352 cv
114.541 179.5 114.494 179.665 114.458 179.825 cv
114.419 179.666 114.37 179.501 114.308 179.355 cv
114.132 178.938 113.963 178.854 113.824 178.913 cv
113.685 178.972 113.628 179.152 113.805 179.568 cv
113.867 179.714 113.951 179.864 114.038 180.003 cv
113.898 179.917 113.747 179.836 113.6 179.776 cv
113.181 179.606 113.002 179.666 112.945 179.806 cv
112.889 179.946 112.975 180.113 113.394 180.283 cv
113.542 180.343 113.707 180.389 113.867 180.425 cv
113.708 180.464 113.543 180.513 113.397 180.575 cv
112.98 180.751 112.896 180.92 112.955 181.059 cv
113.014 181.198 113.194 181.255 113.61 181.079 cv
113.757 181.017 113.906 180.933 114.045 180.845 cv
113.96 180.985 113.878 181.136 113.818 181.284 cv
113.648 181.703 113.708 181.881 113.848 181.938 cv
113.988 181.995 114.156 181.908 114.325 181.489 cv
114.385 181.342 114.431 181.176 114.467 181.017 cv
114.506 181.176 114.555 181.34 114.617 181.487 cv
114.793 181.903 114.962 181.987 115.101 181.928 cv
115.24 181.869 115.297 181.69 115.121 181.273 cv
115.059 181.127 114.975 180.977 114.888 180.839 cv
115.027 180.924 115.178 181.006 115.326 181.065 cv
115.745 181.235 115.923 181.175 115.98 181.035 cv
cp
1 1 1 rgb
f
114.864 180.583 mo
114.774 180.804 114.522 180.911 114.3 180.822 cv
114.079 180.732 113.972 180.48 114.062 180.258 cv
114.152 180.037 114.404 179.93 114.625 180.02 cv
114.846 180.11 114.953 180.362 114.864 180.583 cv
cp
.901961 0 .0156863 rgb
f
118.744 185.059 mo
118.54 185.059 li
118.54 180.642 li
118.744 180.642 li
118.744 185.059 li
cp
.027451 .447059 .0666667 rgb
f
118.609 183.236 mo
118.609 183.236 118.071 183.077 117.652 182.822 cv
117.275 182.591 117.32 182.268 117.462 182.122 cv
117.604 181.976 117.922 181.924 118.166 182.292 cv
118.426 182.683 118.609 183.236 118.609 183.236 cv
cp
f
118.642 183.618 mo
118.642 183.618 119.18 183.459 119.599 183.203 cv
119.976 182.973 119.932 182.65 119.79 182.504 cv
119.648 182.358 119.329 182.305 119.085 182.673 cv
118.825 183.065 118.642 183.618 118.642 183.618 cv
cp
f
120.159 181.035 mo
120.216 180.895 120.129 180.728 119.71 180.558 cv
119.563 180.499 119.398 180.452 119.238 180.416 cv
119.397 180.377 119.561 180.328 119.708 180.266 cv
120.124 180.09 120.208 179.921 120.149 179.782 cv
120.09 179.643 119.911 179.586 119.495 179.762 cv
119.348 179.825 119.199 179.909 119.06 179.996 cv
119.145 179.856 119.227 179.705 119.286 179.558 cv
119.456 179.139 119.396 178.96 119.256 178.903 cv
119.116 178.847 118.949 178.933 118.779 179.352 cv
118.72 179.5 118.674 179.665 118.637 179.825 cv
118.598 179.666 118.55 179.501 118.487 179.355 cv
118.311 178.938 118.143 178.854 118.003 178.913 cv
117.864 178.972 117.807 179.152 117.984 179.568 cv
118.046 179.714 118.13 179.864 118.217 180.003 cv
118.077 179.917 117.926 179.836 117.779 179.776 cv
117.36 179.606 117.181 179.666 117.125 179.806 cv
117.068 179.946 117.154 180.113 117.574 180.283 cv
117.721 180.343 117.886 180.389 118.046 180.425 cv
117.887 180.464 117.722 180.513 117.576 180.575 cv
117.16 180.751 117.076 180.92 117.135 181.059 cv
117.193 181.198 117.373 181.255 117.789 181.079 cv
117.936 181.017 118.085 180.933 118.224 180.845 cv
118.139 180.985 118.057 181.136 117.997 181.284 cv
117.828 181.703 117.887 181.881 118.027 181.938 cv
118.167 181.995 118.335 181.908 118.504 181.489 cv
118.564 181.342 118.61 181.176 118.647 181.017 cv
118.685 181.176 118.734 181.34 118.796 181.487 cv
118.973 181.903 119.141 181.987 119.28 181.928 cv
119.419 181.869 119.476 181.69 119.3 181.273 cv
119.238 181.127 119.154 180.977 119.067 180.839 cv
119.207 180.924 119.357 181.006 119.505 181.065 cv
119.924 181.235 120.102 181.175 120.159 181.035 cv
cp
1 1 1 rgb
f
119.043 180.583 mo
118.953 180.804 118.701 180.911 118.48 180.822 cv
118.258 180.732 118.151 180.48 118.241 180.258 cv
118.331 180.037 118.583 179.93 118.804 180.02 cv
119.026 180.11 119.132 180.362 119.043 180.583 cv
cp
.901961 0 .0156863 rgb
f
122.923 185.059 mo
122.719 185.059 li
122.719 180.642 li
122.923 180.642 li
122.923 185.059 li
cp
.027451 .447059 .0666667 rgb
f
122.788 183.236 mo
122.788 183.236 122.25 183.077 121.831 182.822 cv
121.455 182.591 121.499 182.268 121.641 182.122 cv
121.783 181.976 122.101 181.924 122.345 182.292 cv
122.605 182.683 122.788 183.236 122.788 183.236 cv
cp
f
122.821 183.618 mo
122.821 183.618 123.359 183.459 123.778 183.203 cv
124.155 182.973 124.111 182.65 123.969 182.504 cv
123.827 182.358 123.508 182.305 123.264 182.673 cv
123.004 183.065 122.821 183.618 122.821 183.618 cv
cp
f
124.338 181.035 mo
124.395 180.895 124.308 180.728 123.889 180.558 cv
123.742 180.499 123.577 180.452 123.417 180.416 cv
123.576 180.377 123.74 180.328 123.887 180.266 cv
124.303 180.09 124.387 179.921 124.328 179.782 cv
124.269 179.643 124.09 179.586 123.674 179.762 cv
123.527 179.825 123.378 179.909 123.239 179.996 cv
123.324 179.856 123.406 179.705 123.466 179.558 cv
123.635 179.139 123.576 178.96 123.435 178.903 cv
123.295 178.847 123.128 178.933 122.959 179.352 cv
122.899 179.5 122.853 179.665 122.816 179.825 cv
122.777 179.666 122.729 179.501 122.667 179.355 cv
122.49 178.938 122.322 178.854 122.183 178.913 cv
122.043 178.972 121.986 179.152 122.163 179.568 cv
122.225 179.714 122.309 179.864 122.396 180.003 cv
122.256 179.917 122.105 179.836 121.958 179.776 cv
121.539 179.606 121.36 179.666 121.304 179.806 cv
121.247 179.946 121.334 180.113 121.753 180.283 cv
121.9 180.343 122.065 180.389 122.225 180.425 cv
122.066 180.464 121.901 180.513 121.755 180.575 cv
121.339 180.751 121.255 180.92 121.314 181.059 cv
121.373 181.198 121.552 181.255 121.968 181.079 cv
122.115 181.017 122.264 180.933 122.403 180.845 cv
122.318 180.985 122.236 181.136 122.176 181.284 cv
122.007 181.703 122.066 181.881 122.206 181.938 cv
122.347 181.995 122.514 181.908 122.683 181.489 cv
122.743 181.342 122.789 181.176 122.826 181.017 cv
122.864 181.176 122.913 181.34 122.975 181.487 cv
123.152 181.903 123.32 181.987 123.459 181.928 cv
123.598 181.869 123.655 181.69 123.479 181.273 cv
123.417 181.127 123.333 180.977 123.246 180.839 cv
123.386 180.924 123.536 181.006 123.684 181.065 cv
124.103 181.235 124.281 181.175 124.338 181.035 cv
cp
1 1 1 rgb
f
123.222 180.583 mo
123.132 180.804 122.88 180.911 122.659 180.822 cv
122.437 180.732 122.33 180.48 122.42 180.258 cv
122.51 180.037 122.762 179.93 122.983 180.02 cv
123.205 180.11 123.311 180.362 123.222 180.583 cv
cp
.901961 0 .0156863 rgb
f
127.102 185.059 mo
126.898 185.059 li
126.898 180.642 li
127.102 180.642 li
127.102 185.059 li
cp
.027451 .447059 .0666667 rgb
f
126.968 183.236 mo
126.968 183.236 126.429 183.077 126.01 182.822 cv
125.634 182.591 125.678 182.268 125.82 182.122 cv
125.962 181.976 126.281 181.924 126.525 182.292 cv
126.784 182.683 126.968 183.236 126.968 183.236 cv
cp
f
127 183.618 mo
127 183.618 127.539 183.459 127.957 183.203 cv
128.334 182.973 128.29 182.65 128.148 182.504 cv
128.006 182.358 127.687 182.305 127.443 182.673 cv
127.183 183.065 127 183.618 127 183.618 cv
cp
f
128.517 181.035 mo
128.574 180.895 128.488 180.728 128.068 180.558 cv
127.921 180.499 127.756 180.452 127.596 180.416 cv
127.755 180.377 127.92 180.328 128.066 180.266 cv
128.482 180.09 128.566 179.921 128.507 179.782 cv
128.449 179.643 128.269 179.586 127.853 179.762 cv
127.706 179.825 127.557 179.909 127.418 179.996 cv
127.503 179.856 127.585 179.705 127.645 179.558 cv
127.814 179.139 127.755 178.96 127.614 178.903 cv
127.474 178.847 127.307 178.933 127.138 179.352 cv
127.078 179.5 127.032 179.665 126.995 179.825 cv
126.957 179.666 126.908 179.501 126.846 179.355 cv
126.669 178.938 126.501 178.854 126.362 178.913 cv
126.223 178.972 126.166 179.152 126.342 179.568 cv
126.404 179.714 126.488 179.864 126.575 180.003 cv
126.435 179.917 126.285 179.836 126.137 179.776 cv
125.718 179.606 125.539 179.666 125.483 179.806 cv
125.426 179.946 125.513 180.113 125.932 180.283 cv
126.079 180.343 126.244 180.389 126.404 180.425 cv
126.245 180.464 126.081 180.513 125.934 180.575 cv
125.518 180.751 125.434 180.92 125.493 181.059 cv
125.552 181.198 125.731 181.255 126.147 181.079 cv
126.294 181.017 126.443 180.933 126.582 180.845 cv
126.497 180.985 126.415 181.136 126.355 181.284 cv
126.186 181.703 126.246 181.881 126.386 181.938 cv
126.526 181.995 126.693 181.908 126.863 181.489 cv
126.922 181.342 126.968 181.176 127.005 181.017 cv
127.044 181.176 127.092 181.34 127.154 181.487 cv
127.331 181.903 127.499 181.987 127.638 181.928 cv
127.778 181.869 127.834 181.69 127.658 181.273 cv
127.596 181.127 127.512 180.977 127.425 180.839 cv
127.565 180.924 127.716 181.006 127.863 181.065 cv
128.282 181.235 128.461 181.175 128.517 181.035 cv
cp
1 1 1 rgb
f
127.401 180.583 mo
127.311 180.804 127.059 180.911 126.838 180.822 cv
126.616 180.732 126.51 180.48 126.599 180.258 cv
126.689 180.037 126.941 179.93 127.162 180.02 cv
127.384 180.11 127.49 180.362 127.401 180.583 cv
cp
.901961 0 .0156863 rgb
f
131.281 185.059 mo
131.077 185.059 li
131.077 180.642 li
131.281 180.642 li
131.281 185.059 li
cp
.027451 .447059 .0666667 rgb
f
131.147 183.236 mo
131.147 183.236 130.608 183.077 130.19 182.822 cv
129.813 182.591 129.857 182.268 129.999 182.122 cv
130.141 181.976 130.46 181.924 130.704 182.292 cv
130.963 182.683 131.147 183.236 131.147 183.236 cv
cp
f
131.179 183.618 mo
131.179 183.618 131.718 183.459 132.136 183.203 cv
132.513 182.973 132.469 182.65 132.327 182.504 cv
132.185 182.358 131.866 182.305 131.622 182.673 cv
131.363 183.065 131.179 183.618 131.179 183.618 cv
cp
f
132.696 181.035 mo
132.753 180.895 132.667 180.728 132.248 180.558 cv
132.1 180.499 131.935 180.452 131.775 180.416 cv
131.934 180.377 132.099 180.328 132.245 180.266 cv
132.661 180.09 132.745 179.921 132.687 179.782 cv
132.628 179.643 132.448 179.586 132.032 179.762 cv
131.885 179.825 131.736 179.909 131.597 179.996 cv
131.682 179.856 131.764 179.705 131.824 179.558 cv
131.993 179.139 131.934 178.96 131.794 178.903 cv
131.654 178.847 131.486 178.933 131.317 179.352 cv
131.257 179.5 131.211 179.665 131.174 179.825 cv
131.136 179.666 131.087 179.501 131.025 179.355 cv
130.848 178.938 130.68 178.854 130.541 178.913 cv
130.402 178.972 130.345 179.152 130.521 179.568 cv
130.583 179.714 130.667 179.864 130.754 180.003 cv
130.615 179.917 130.464 179.836 130.316 179.776 cv
129.897 179.606 129.719 179.666 129.662 179.806 cv
129.605 179.946 129.692 180.113 130.111 180.283 cv
130.258 180.343 130.424 180.389 130.583 180.425 cv
130.424 180.464 130.26 180.513 130.113 180.575 cv
129.697 180.751 129.613 180.92 129.672 181.059 cv
129.731 181.198 129.91 181.255 130.326 181.079 cv
130.473 181.017 130.623 180.933 130.761 180.845 cv
130.676 180.985 130.594 181.136 130.535 181.284 cv
130.365 181.703 130.425 181.881 130.565 181.938 cv
130.705 181.995 130.872 181.908 131.042 181.489 cv
131.102 181.342 131.148 181.176 131.184 181.017 cv
131.223 181.176 131.272 181.34 131.334 181.487 cv
131.51 181.903 131.678 181.987 131.817 181.928 cv
131.957 181.869 132.014 181.69 131.837 181.273 cv
131.775 181.127 131.691 180.977 131.604 180.839 cv
131.744 180.924 131.895 181.006 132.042 181.065 cv
132.461 181.235 132.64 181.175 132.696 181.035 cv
cp
1 1 1 rgb
f
131.58 180.583 mo
131.49 180.804 131.238 180.911 131.017 180.822 cv
130.796 180.732 130.689 180.48 130.778 180.258 cv
130.868 180.037 131.12 179.93 131.341 180.02 cv
131.563 180.11 131.67 180.362 131.58 180.583 cv
cp
.901961 0 .0156863 rgb
f
133.578 184.834 mo
133.597 184.742 li
133.597 184.302 133.24 183.946 132.8 183.946 cv
132.553 183.946 132.341 184.065 132.195 184.242 cv
132.069 184.161 131.929 184.101 131.768 184.101 cv
131.676 184.101 131.592 184.125 131.51 184.153 cv
131.385 183.667 130.947 183.305 130.421 183.305 cv
129.967 183.305 129.579 183.574 129.399 183.96 cv
129.181 183.987 128.983 184.076 128.822 184.21 cv
128.783 183.909 128.536 183.673 128.225 183.673 cv
128.046 183.673 127.888 183.753 127.776 183.876 cv
127.717 183.816 127.636 183.779 127.546 183.779 cv
127.366 183.84 li
127.378 183.779 li
127.378 183.6 127.234 183.456 127.056 183.456 cv
126.913 183.456 126.796 183.55 126.753 183.678 cv
126.584 183.623 li
126.456 183.623 126.348 183.699 126.296 183.806 cv
126.208 183.784 126.117 183.769 126.022 183.769 cv
125.889 183.769 125.763 183.796 125.645 183.838 cv
125.502 183.623 125.27 183.472 124.992 183.472 cv
124.847 183.472 124.718 183.522 124.6 183.59 cv
124.42 183.467 124.202 183.396 123.968 183.396 cv
123.501 183.396 123.101 183.679 122.929 184.083 cv
122.788 184.018 122.632 183.981 122.466 183.981 cv
122.33 183.981 122.202 184.009 122.081 184.053 cv
121.972 183.743 121.685 183.517 121.338 183.517 cv
121.06 183.517 120.827 183.668 120.685 183.883 cv
120.566 183.841 120.44 183.814 120.307 183.814 cv
120.212 183.814 120.122 183.829 120.034 183.851 cv
119.981 183.744 119.873 183.668 119.746 183.668 cv
119.576 183.723 li
119.534 183.595 119.416 183.501 119.274 183.501 cv
119.095 183.501 118.951 183.645 118.951 183.824 cv
118.963 183.885 li
118.784 183.824 li
118.693 183.824 118.612 183.861 118.554 183.921 cv
118.442 183.798 118.284 183.718 118.105 183.718 cv
117.793 183.718 117.546 183.954 117.507 184.255 cv
117.346 184.121 117.149 184.032 116.93 184.005 cv
116.751 183.619 116.362 183.35 115.909 183.35 cv
115.549 183.35 115.231 183.522 115.024 183.785 cv
114.892 183.53 114.633 183.35 114.325 183.35 cv
114.044 183.35 113.809 183.504 113.667 183.724 cv
113.586 183.697 113.503 183.673 113.412 183.673 cv
113.225 183.673 113.061 183.747 112.925 183.855 cv
112.78 183.656 112.557 183.517 112.292 183.517 cv
112.014 183.517 111.782 183.668 111.639 183.883 cv
111.521 183.841 111.395 183.814 111.261 183.814 cv
111.167 183.814 111.076 183.829 110.988 183.851 cv
110.936 183.744 110.828 183.668 110.7 183.668 cv
110.531 183.723 li
110.488 183.595 110.371 183.501 110.228 183.501 cv
110.05 183.501 109.905 183.645 109.905 183.824 cv
109.918 183.885 li
109.738 183.824 li
109.648 183.824 109.567 183.861 109.508 183.921 cv
109.396 183.798 109.238 183.718 109.059 183.718 cv
108.747 183.718 108.5 183.954 108.462 184.255 cv
108.3 184.121 108.103 184.032 107.884 184.005 cv
107.705 183.619 107.317 183.35 106.863 183.35 cv
106.337 183.35 105.899 183.712 105.774 184.199 cv
105.692 184.17 105.607 184.146 105.516 184.146 cv
105.355 184.146 105.214 184.206 105.089 184.288 cv
104.943 184.11 104.731 183.991 104.483 183.991 cv
104.044 183.991 103.687 184.347 103.687 184.787 cv
103.706 184.879 li
103.443 184.948 103.246 185.176 103.246 185.461 cv
103.246 185.745 103.444 185.974 103.707 186.042 cv
103.748 186.274 103.863 186.478 104.021 186.638 cv
104.47 188.431 li
132.809 188.431 li
133.271 186.584 li
133.425 186.426 133.536 186.225 133.577 185.997 cv
133.84 185.929 134.038 185.7 134.038 185.416 cv
134.038 185.132 133.84 184.903 133.578 184.834 cv
cp
.0980392 .564706 .160784 rgb
f
132.615 190.831 mo
104.668 190.831 li
103.854 186.383 li
133.43 186.383 li
132.615 190.831 li
cp
.4 .196078 .0196078 rgb
f
110.699 194.838 mo
109.406 194.838 li
106.02 190.831 li
107.313 190.831 li
110.699 194.838 li
cp
.329412 .145098 .00784314 rgb
f
106.02 194.838 mo
107.313 194.838 li
110.699 190.831 li
109.406 190.831 li
106.02 194.838 li
cp
f
131.264 194.838 mo
129.971 194.838 li
126.585 190.831 li
127.878 190.831 li
131.264 194.838 li
cp
f
126.585 194.838 mo
127.878 194.838 li
131.264 190.831 li
129.971 190.831 li
126.585 194.838 li
cp
f
138.184 185.059 mo
137.98 185.059 li
137.98 180.642 li
138.184 180.642 li
138.184 185.059 li
cp
.027451 .447059 .0666667 rgb
f
138.049 183.236 mo
138.049 183.236 137.511 183.077 137.092 182.822 cv
136.715 182.591 136.76 182.268 136.902 182.122 cv
137.044 181.976 137.362 181.924 137.606 182.292 cv
137.866 182.683 138.049 183.236 138.049 183.236 cv
cp
f
138.082 183.618 mo
138.082 183.618 138.62 183.459 139.039 183.203 cv
139.416 182.973 139.371 182.65 139.229 182.504 cv
139.087 182.358 138.769 182.305 138.525 182.673 cv
138.265 183.065 138.082 183.618 138.082 183.618 cv
cp
f
139.599 181.035 mo
139.656 180.895 139.569 180.728 139.15 180.558 cv
139.003 180.499 138.837 180.452 138.678 180.416 cv
138.837 180.377 139.001 180.328 139.148 180.266 cv
139.564 180.09 139.648 179.921 139.589 179.782 cv
139.53 179.643 139.351 179.586 138.934 179.762 cv
138.788 179.825 138.639 179.909 138.5 179.996 cv
138.585 179.856 138.667 179.705 138.726 179.558 cv
138.896 179.139 138.836 178.96 138.696 178.903 cv
138.556 178.847 138.389 178.933 138.219 179.352 cv
138.16 179.5 138.113 179.665 138.077 179.825 cv
138.038 179.666 137.99 179.501 137.927 179.355 cv
137.751 178.938 137.582 178.854 137.443 178.913 cv
137.304 178.972 137.247 179.152 137.424 179.568 cv
137.486 179.714 137.57 179.864 137.657 180.003 cv
137.517 179.917 137.366 179.836 137.219 179.776 cv
136.8 179.606 136.621 179.666 136.564 179.806 cv
136.508 179.946 136.594 180.113 137.013 180.283 cv
137.161 180.343 137.326 180.389 137.486 180.425 cv
137.327 180.464 137.162 180.513 137.016 180.575 cv
136.6 180.751 136.516 180.92 136.574 181.059 cv
136.633 181.198 136.813 181.255 137.229 181.079 cv
137.376 181.017 137.525 180.933 137.664 180.845 cv
137.579 180.985 137.497 181.136 137.437 181.284 cv
137.268 181.703 137.327 181.881 137.467 181.938 cv
137.607 181.995 137.775 181.908 137.944 181.489 cv
138.004 181.342 138.05 181.176 138.087 181.017 cv
138.125 181.176 138.174 181.34 138.236 181.487 cv
138.412 181.903 138.581 181.987 138.72 181.928 cv
138.859 181.869 138.916 181.69 138.74 181.273 cv
138.678 181.127 138.594 180.977 138.507 180.839 cv
138.646 180.924 138.797 181.006 138.945 181.065 cv
139.364 181.235 139.542 181.175 139.599 181.035 cv
cp
1 1 1 rgb
f
138.483 180.583 mo
138.393 180.804 138.141 180.911 137.919 180.822 cv
137.698 180.732 137.591 180.48 137.681 180.258 cv
137.771 180.037 138.023 179.93 138.244 180.02 cv
138.465 180.11 138.572 180.362 138.483 180.583 cv
cp
.901961 0 .0156863 rgb
f
142.363 185.059 mo
142.159 185.059 li
142.159 180.642 li
142.363 180.642 li
142.363 185.059 li
cp
.027451 .447059 .0666667 rgb
f
142.228 183.236 mo
142.228 183.236 141.69 183.077 141.271 182.822 cv
140.895 182.591 140.939 182.268 141.081 182.122 cv
141.223 181.976 141.541 181.924 141.785 182.292 cv
142.045 182.683 142.228 183.236 142.228 183.236 cv
cp
f
142.261 183.618 mo
142.261 183.618 142.799 183.459 143.218 183.203 cv
143.595 182.973 143.551 182.65 143.409 182.504 cv
143.267 182.358 142.948 182.305 142.704 182.673 cv
142.444 183.065 142.261 183.618 142.261 183.618 cv
cp
f
143.778 181.035 mo
143.835 180.895 143.748 180.728 143.329 180.558 cv
143.182 180.499 143.017 180.452 142.857 180.416 cv
143.016 180.377 143.18 180.328 143.327 180.266 cv
143.743 180.09 143.827 179.921 143.768 179.782 cv
143.709 179.643 143.53 179.586 143.114 179.762 cv
142.967 179.825 142.818 179.909 142.679 179.996 cv
142.764 179.856 142.846 179.705 142.906 179.558 cv
143.075 179.139 143.015 178.96 142.875 178.903 cv
142.735 178.847 142.568 178.933 142.398 179.352 cv
142.339 179.5 142.292 179.665 142.256 179.825 cv
142.217 179.666 142.169 179.501 142.106 179.355 cv
141.93 178.938 141.762 178.854 141.622 178.913 cv
141.483 178.972 141.426 179.152 141.603 179.568 cv
141.665 179.714 141.749 179.864 141.836 180.003 cv
141.696 179.917 141.545 179.836 141.398 179.776 cv
140.979 179.606 140.8 179.666 140.744 179.806 cv
140.687 179.946 140.773 180.113 141.192 180.283 cv
141.34 180.343 141.505 180.389 141.665 180.425 cv
141.506 180.464 141.341 180.513 141.195 180.575 cv
140.779 180.751 140.695 180.92 140.753 181.059 cv
140.813 181.198 140.992 181.255 141.408 181.079 cv
141.555 181.017 141.704 180.933 141.843 180.845 cv
141.758 180.985 141.676 181.136 141.616 181.284 cv
141.447 181.703 141.506 181.881 141.646 181.938 cv
141.786 181.995 141.954 181.908 142.123 181.489 cv
142.183 181.342 142.229 181.176 142.266 181.017 cv
142.304 181.176 142.353 181.34 142.415 181.487 cv
142.592 181.903 142.76 181.987 142.899 181.928 cv
143.038 181.869 143.095 181.69 142.919 181.273 cv
142.857 181.127 142.773 180.977 142.686 180.839 cv
142.826 180.924 142.976 181.006 143.124 181.065 cv
143.543 181.235 143.721 181.175 143.778 181.035 cv
cp
1 1 1 rgb
f
142.662 180.583 mo
142.572 180.804 142.32 180.911 142.099 180.822 cv
141.877 180.732 141.77 180.48 141.86 180.258 cv
141.95 180.037 142.202 179.93 142.423 180.02 cv
142.645 180.11 142.751 180.362 142.662 180.583 cv
cp
.901961 0 .0156863 rgb
f
146.542 185.059 mo
146.338 185.059 li
146.338 180.642 li
146.542 180.642 li
146.542 185.059 li
cp
.027451 .447059 .0666667 rgb
f
146.408 183.236 mo
146.408 183.236 145.869 183.077 145.45 182.822 cv
145.074 182.591 145.118 182.268 145.26 182.122 cv
145.402 181.976 145.72 181.924 145.965 182.292 cv
146.224 182.683 146.408 183.236 146.408 183.236 cv
cp
f
146.44 183.618 mo
146.44 183.618 146.979 183.459 147.397 183.203 cv
147.774 182.973 147.73 182.65 147.588 182.504 cv
147.446 182.358 147.127 182.305 146.883 182.673 cv
146.623 183.065 146.44 183.618 146.44 183.618 cv
cp
f
147.957 181.035 mo
148.014 180.895 147.927 180.728 147.508 180.558 cv
147.361 180.499 147.196 180.452 147.036 180.416 cv
147.195 180.377 147.359 180.328 147.506 180.266 cv
147.922 180.09 148.006 179.921 147.947 179.782 cv
147.888 179.643 147.709 179.586 147.293 179.762 cv
147.146 179.825 146.997 179.909 146.858 179.996 cv
146.943 179.856 147.025 179.705 147.085 179.558 cv
147.254 179.139 147.195 178.96 147.054 178.903 cv
146.914 178.847 146.747 178.933 146.577 179.352 cv
146.518 179.5 146.472 179.665 146.435 179.825 cv
146.396 179.666 146.348 179.501 146.286 179.355 cv
146.109 178.938 145.941 178.854 145.802 178.913 cv
145.662 178.972 145.605 179.152 145.782 179.568 cv
145.844 179.714 145.928 179.864 146.015 180.003 cv
145.875 179.917 145.725 179.836 145.577 179.776 cv
145.158 179.606 144.979 179.666 144.923 179.806 cv
144.866 179.946 144.953 180.113 145.372 180.283 cv
145.519 180.343 145.684 180.389 145.844 180.425 cv
145.685 180.464 145.521 180.513 145.374 180.575 cv
144.958 180.751 144.874 180.92 144.933 181.059 cv
144.992 181.198 145.171 181.255 145.587 181.079 cv
145.734 181.017 145.883 180.933 146.022 180.845 cv
145.937 180.985 145.855 181.136 145.795 181.284 cv
145.626 181.703 145.685 181.881 145.826 181.938 cv
145.966 181.995 146.133 181.908 146.302 181.489 cv
146.362 181.342 146.408 181.176 146.445 181.017 cv
146.483 181.176 146.532 181.34 146.594 181.487 cv
146.771 181.903 146.939 181.987 147.078 181.928 cv
147.218 181.869 147.274 181.69 147.098 181.273 cv
147.036 181.127 146.952 180.977 146.865 180.839 cv
147.005 180.924 147.155 181.006 147.303 181.065 cv
147.722 181.235 147.901 181.175 147.957 181.035 cv
cp
1 1 1 rgb
f
146.841 180.583 mo
146.751 180.804 146.499 180.911 146.278 180.822 cv
146.056 180.732 145.95 180.48 146.039 180.258 cv
146.129 180.037 146.381 179.93 146.602 180.02 cv
146.824 180.11 146.93 180.362 146.841 180.583 cv
cp
.901961 0 .0156863 rgb
f
150.721 185.059 mo
150.517 185.059 li
150.517 180.642 li
150.721 180.642 li
150.721 185.059 li
cp
.027451 .447059 .0666667 rgb
f
150.587 183.236 mo
150.587 183.236 150.048 183.077 149.63 182.822 cv
149.253 182.591 149.297 182.268 149.439 182.122 cv
149.581 181.976 149.9 181.924 150.144 182.292 cv
150.403 182.683 150.587 183.236 150.587 183.236 cv
cp
f
150.619 183.618 mo
150.619 183.618 151.158 183.459 151.576 183.203 cv
151.953 182.973 151.909 182.65 151.767 182.504 cv
151.625 182.358 151.306 182.305 151.062 182.673 cv
150.802 183.065 150.619 183.618 150.619 183.618 cv
cp
f
152.136 181.035 mo
152.193 180.895 152.106 180.728 151.688 180.558 cv
151.54 180.499 151.375 180.452 151.215 180.416 cv
151.374 180.377 151.539 180.328 151.685 180.266 cv
152.101 180.09 152.185 179.921 152.126 179.782 cv
152.067 179.643 151.888 179.586 151.472 179.762 cv
151.325 179.825 151.176 179.909 151.037 179.996 cv
151.122 179.856 151.204 179.705 151.264 179.558 cv
151.433 179.139 151.374 178.96 151.234 178.903 cv
151.093 178.847 150.926 178.933 150.757 179.352 cv
150.697 179.5 150.651 179.665 150.615 179.825 cv
150.576 179.666 150.527 179.501 150.465 179.355 cv
150.288 178.938 150.12 178.854 149.981 178.913 cv
149.842 178.972 149.785 179.152 149.961 179.568 cv
150.023 179.714 150.107 179.864 150.194 180.003 cv
150.054 179.917 149.904 179.836 149.756 179.776 cv
149.337 179.606 149.158 179.666 149.102 179.806 cv
149.045 179.946 149.132 180.113 149.551 180.283 cv
149.698 180.343 149.863 180.389 150.023 180.425 cv
149.864 180.464 149.7 180.513 149.553 180.575 cv
149.137 180.751 149.053 180.92 149.112 181.059 cv
149.171 181.198 149.35 181.255 149.766 181.079 cv
149.913 181.017 150.063 180.933 150.201 180.845 cv
150.116 180.985 150.034 181.136 149.974 181.284 cv
149.805 181.703 149.865 181.881 150.005 181.938 cv
150.145 181.995 150.312 181.908 150.481 181.489 cv
150.541 181.342 150.587 181.176 150.624 181.017 cv
150.663 181.176 150.712 181.34 150.773 181.487 cv
150.95 181.903 151.118 181.987 151.257 181.928 cv
151.397 181.869 151.454 181.69 151.277 181.273 cv
151.215 181.127 151.131 180.977 151.044 180.839 cv
151.184 180.924 151.335 181.006 151.482 181.065 cv
151.901 181.235 152.08 181.175 152.136 181.035 cv
cp
1 1 1 rgb
f
151.02 180.583 mo
150.93 180.804 150.678 180.911 150.457 180.822 cv
150.235 180.732 150.129 180.48 150.218 180.258 cv
150.308 180.037 150.56 179.93 150.781 180.02 cv
151.003 180.11 151.109 180.362 151.02 180.583 cv
cp
.901961 0 .0156863 rgb
f
154.9 185.059 mo
154.696 185.059 li
154.696 180.642 li
154.9 180.642 li
154.9 185.059 li
cp
.027451 .447059 .0666667 rgb
f
154.766 183.236 mo
154.766 183.236 154.227 183.077 153.809 182.822 cv
153.432 182.591 153.476 182.268 153.618 182.122 cv
153.76 181.976 154.079 181.924 154.323 182.292 cv
154.582 182.683 154.766 183.236 154.766 183.236 cv
cp
f
154.798 183.618 mo
154.798 183.618 155.337 183.459 155.755 183.203 cv
156.132 182.973 156.088 182.65 155.946 182.504 cv
155.804 182.358 155.485 182.305 155.241 182.673 cv
154.982 183.065 154.798 183.618 154.798 183.618 cv
cp
f
156.315 181.035 mo
156.372 180.895 156.286 180.728 155.867 180.558 cv
155.719 180.499 155.554 180.452 155.394 180.416 cv
155.553 180.377 155.718 180.328 155.864 180.266 cv
156.281 180.09 156.365 179.921 156.306 179.782 cv
156.247 179.643 156.067 179.586 155.651 179.762 cv
155.504 179.825 155.355 179.909 155.216 179.996 cv
155.301 179.856 155.383 179.705 155.443 179.558 cv
155.613 179.139 155.553 178.96 155.413 178.903 cv
155.273 178.847 155.105 178.933 154.936 179.352 cv
154.876 179.5 154.83 179.665 154.794 179.825 cv
154.755 179.666 154.706 179.501 154.644 179.355 cv
154.467 178.938 154.299 178.854 154.16 178.913 cv
154.021 178.972 153.964 179.152 154.14 179.568 cv
154.202 179.714 154.286 179.864 154.373 180.003 cv
154.233 179.917 154.083 179.836 153.935 179.776 cv
153.516 179.606 153.338 179.666 153.281 179.806 cv
153.224 179.946 153.311 180.113 153.73 180.283 cv
153.877 180.343 154.043 180.389 154.202 180.425 cv
154.043 180.464 153.879 180.513 153.732 180.575 cv
153.316 180.751 153.232 180.92 153.291 181.059 cv
153.35 181.198 153.529 181.255 153.945 181.079 cv
154.092 181.017 154.242 180.933 154.38 180.845 cv
154.295 180.985 154.213 181.136 154.154 181.284 cv
153.984 181.703 154.044 181.881 154.184 181.938 cv
154.324 181.995 154.491 181.908 154.661 181.489 cv
154.72 181.342 154.767 181.176 154.803 181.017 cv
154.842 181.176 154.891 181.34 154.953 181.487 cv
155.129 181.903 155.297 181.987 155.437 181.928 cv
155.576 181.869 155.633 181.69 155.456 181.273 cv
155.394 181.127 155.31 180.977 155.223 180.839 cv
155.363 180.924 155.514 181.006 155.661 181.065 cv
156.08 181.235 156.259 181.175 156.315 181.035 cv
cp
1 1 1 rgb
f
155.199 180.583 mo
155.109 180.804 154.857 180.911 154.636 180.822 cv
154.414 180.732 154.308 180.48 154.397 180.258 cv
154.487 180.037 154.739 179.93 154.96 180.02 cv
155.182 180.11 155.289 180.362 155.199 180.583 cv
cp
.901961 0 .0156863 rgb
f
159.079 185.059 mo
158.875 185.059 li
158.875 180.642 li
159.079 180.642 li
159.079 185.059 li
cp
.027451 .447059 .0666667 rgb
f
158.945 183.236 mo
158.945 183.236 158.406 183.077 157.988 182.822 cv
157.611 182.591 157.655 182.268 157.797 182.122 cv
157.939 181.976 158.258 181.924 158.502 182.292 cv
158.761 182.683 158.945 183.236 158.945 183.236 cv
cp
f
158.977 183.618 mo
158.977 183.618 159.516 183.459 159.934 183.203 cv
160.311 182.973 160.267 182.65 160.125 182.504 cv
159.983 182.358 159.664 182.305 159.42 182.673 cv
159.161 183.065 158.977 183.618 158.977 183.618 cv
cp
f
160.495 181.035 mo
160.551 180.895 160.465 180.728 160.046 180.558 cv
159.898 180.499 159.733 180.452 159.573 180.416 cv
159.732 180.377 159.897 180.328 160.043 180.266 cv
160.46 180.09 160.544 179.921 160.485 179.782 cv
160.426 179.643 160.246 179.586 159.83 179.762 cv
159.684 179.825 159.534 179.909 159.395 179.996 cv
159.481 179.856 159.562 179.705 159.622 179.558 cv
159.792 179.139 159.732 178.96 159.592 178.903 cv
159.452 178.847 159.285 178.933 159.115 179.352 cv
159.055 179.5 159.009 179.665 158.973 179.825 cv
158.934 179.666 158.885 179.501 158.823 179.355 cv
158.647 178.938 158.478 178.854 158.339 178.913 cv
158.2 178.972 158.143 179.152 158.319 179.568 cv
158.381 179.714 158.465 179.864 158.553 180.003 cv
158.413 179.917 158.262 179.836 158.114 179.776 cv
157.695 179.606 157.517 179.666 157.46 179.806 cv
157.403 179.946 157.49 180.113 157.909 180.283 cv
158.057 180.343 158.222 180.389 158.381 180.425 cv
158.222 180.464 158.058 180.513 157.911 180.575 cv
157.495 180.751 157.411 180.92 157.47 181.059 cv
157.529 181.198 157.708 181.255 158.125 181.079 cv
158.271 181.017 158.421 180.933 158.559 180.845 cv
158.474 180.985 158.392 181.136 158.333 181.284 cv
158.163 181.703 158.223 181.881 158.363 181.938 cv
158.503 181.995 158.67 181.908 158.84 181.489 cv
158.9 181.342 158.946 181.176 158.982 181.017 cv
159.021 181.176 159.07 181.34 159.132 181.487 cv
159.308 181.903 159.477 181.987 159.616 181.928 cv
159.755 181.869 159.812 181.69 159.635 181.273 cv
159.573 181.127 159.489 180.977 159.402 180.839 cv
159.542 180.924 159.693 181.006 159.84 181.065 cv
160.259 181.235 160.438 181.175 160.495 181.035 cv
cp
1 1 1 rgb
f
159.378 180.583 mo
159.288 180.804 159.036 180.911 158.815 180.822 cv
158.594 180.732 158.487 180.48 158.576 180.258 cv
158.666 180.037 158.918 179.93 159.14 180.02 cv
159.361 180.11 159.468 180.362 159.378 180.583 cv
cp
.901961 0 .0156863 rgb
f
163.258 185.059 mo
163.055 185.059 li
163.055 180.642 li
163.258 180.642 li
163.258 185.059 li
cp
.027451 .447059 .0666667 rgb
f
163.124 183.236 mo
163.124 183.236 162.585 183.077 162.167 182.822 cv
161.79 182.591 161.834 182.268 161.976 182.122 cv
162.118 181.976 162.437 181.924 162.681 182.292 cv
162.941 182.683 163.124 183.236 163.124 183.236 cv
cp
f
163.156 183.618 mo
163.156 183.618 163.695 183.459 164.113 183.203 cv
164.49 182.973 164.446 182.65 164.304 182.504 cv
164.162 182.358 163.843 182.305 163.599 182.673 cv
163.34 183.065 163.156 183.618 163.156 183.618 cv
cp
f
164.674 181.035 mo
164.73 180.895 164.644 180.728 164.225 180.558 cv
164.077 180.499 163.912 180.452 163.753 180.416 cv
163.911 180.377 164.076 180.328 164.222 180.266 cv
164.639 180.09 164.723 179.921 164.664 179.782 cv
164.605 179.643 164.425 179.586 164.009 179.762 cv
163.863 179.825 163.713 179.909 163.575 179.996 cv
163.66 179.856 163.741 179.705 163.801 179.558 cv
163.971 179.139 163.911 178.96 163.771 178.903 cv
163.631 178.847 163.464 178.933 163.294 179.352 cv
163.234 179.5 163.188 179.665 163.152 179.825 cv
163.113 179.666 163.064 179.501 163.002 179.355 cv
162.826 178.938 162.657 178.854 162.518 178.913 cv
162.379 178.972 162.322 179.152 162.498 179.568 cv
162.56 179.714 162.644 179.864 162.732 180.003 cv
162.592 179.917 162.441 179.836 162.293 179.776 cv
161.874 179.606 161.696 179.666 161.639 179.806 cv
161.582 179.946 161.669 180.113 162.088 180.283 cv
162.236 180.343 162.401 180.389 162.56 180.425 cv
162.401 180.464 162.237 180.513 162.09 180.575 cv
161.674 180.751 161.59 180.92 161.649 181.059 cv
161.708 181.198 161.887 181.255 162.304 181.079 cv
162.45 181.017 162.6 180.933 162.738 180.845 cv
162.653 180.985 162.572 181.136 162.512 181.284 cv
162.342 181.703 162.402 181.881 162.542 181.938 cv
162.682 181.995 162.849 181.908 163.019 181.489 cv
163.079 181.342 163.125 181.176 163.161 181.017 cv
163.2 181.176 163.249 181.34 163.311 181.487 cv
163.487 181.903 163.656 181.987 163.795 181.928 cv
163.934 181.869 163.991 181.69 163.815 181.273 cv
163.753 181.127 163.669 180.977 163.581 180.839 cv
163.721 180.924 163.872 181.006 164.019 181.065 cv
164.438 181.235 164.617 181.175 164.674 181.035 cv
cp
1 1 1 rgb
f
163.557 180.583 mo
163.468 180.804 163.215 180.911 162.994 180.822 cv
162.773 180.732 162.666 180.48 162.756 180.258 cv
162.845 180.037 163.097 179.93 163.319 180.02 cv
163.54 180.11 163.647 180.362 163.557 180.583 cv
cp
.901961 0 .0156863 rgb
f
165.555 184.834 mo
165.574 184.742 li
165.574 184.302 165.217 183.946 164.778 183.946 cv
164.53 183.946 164.318 184.065 164.172 184.242 cv
164.047 184.161 163.906 184.101 163.745 184.101 cv
163.654 184.101 163.569 184.125 163.487 184.153 cv
163.362 183.667 162.924 183.305 162.398 183.305 cv
161.944 183.305 161.556 183.574 161.377 183.96 cv
161.158 183.987 160.961 184.076 160.799 184.21 cv
160.761 183.909 160.514 183.673 160.202 183.673 cv
160.023 183.673 159.865 183.753 159.753 183.876 cv
159.694 183.816 159.613 183.779 159.523 183.779 cv
159.343 183.84 li
159.356 183.779 li
159.356 183.6 159.211 183.456 159.033 183.456 cv
158.89 183.456 158.773 183.55 158.73 183.678 cv
158.561 183.623 li
158.433 183.623 158.325 183.699 158.273 183.806 cv
158.185 183.784 158.094 183.769 157.999 183.769 cv
157.866 183.769 157.74 183.796 157.622 183.838 cv
157.479 183.623 157.247 183.472 156.969 183.472 cv
156.824 183.472 156.695 183.522 156.578 183.59 cv
156.397 183.467 156.179 183.396 155.945 183.396 cv
155.478 183.396 155.078 183.679 154.906 184.083 cv
154.765 184.018 154.609 183.981 154.443 183.981 cv
154.308 183.981 154.179 184.009 154.058 184.053 cv
153.949 183.743 153.662 183.517 153.315 183.517 cv
153.037 183.517 152.805 183.668 152.662 183.883 cv
152.544 183.841 152.418 183.814 152.285 183.814 cv
152.19 183.814 152.099 183.829 152.011 183.851 cv
151.959 183.744 151.851 183.668 151.723 183.668 cv
151.554 183.723 li
151.511 183.595 151.394 183.501 151.251 183.501 cv
151.073 183.501 150.928 183.645 150.928 183.824 cv
150.941 183.885 li
150.761 183.824 li
150.671 183.824 150.59 183.861 150.531 183.921 cv
150.419 183.798 150.261 183.718 150.082 183.718 cv
149.77 183.718 149.523 183.954 149.485 184.255 cv
149.323 184.121 149.126 184.032 148.907 184.005 cv
148.728 183.619 148.34 183.35 147.886 183.35 cv
147.526 183.35 147.208 183.522 147.002 183.785 cv
146.869 183.53 146.61 183.35 146.302 183.35 cv
146.021 183.35 145.786 183.504 145.644 183.724 cv
145.563 183.697 145.48 183.673 145.389 183.673 cv
145.202 183.673 145.038 183.747 144.902 183.855 cv
144.758 183.656 144.534 183.517 144.269 183.517 cv
143.991 183.517 143.759 183.668 143.616 183.883 cv
143.498 183.841 143.372 183.814 143.239 183.814 cv
143.144 183.814 143.053 183.829 142.965 183.851 cv
142.913 183.744 142.805 183.668 142.677 183.668 cv
142.508 183.723 li
142.465 183.595 142.348 183.501 142.205 183.501 cv
142.027 183.501 141.882 183.645 141.882 183.824 cv
141.895 183.885 li
141.715 183.824 li
141.625 183.824 141.544 183.861 141.485 183.921 cv
141.373 183.798 141.215 183.718 141.036 183.718 cv
140.725 183.718 140.477 183.954 140.439 184.255 cv
140.277 184.121 140.08 184.032 139.862 184.005 cv
139.682 183.619 139.294 183.35 138.84 183.35 cv
138.314 183.35 137.876 183.712 137.751 184.199 cv
137.669 184.17 137.585 184.146 137.493 184.146 cv
137.332 184.146 137.191 184.206 137.066 184.288 cv
136.92 184.11 136.708 183.991 136.46 183.991 cv
136.021 183.991 135.664 184.347 135.664 184.787 cv
135.683 184.879 li
135.421 184.948 135.223 185.176 135.223 185.461 cv
135.223 185.745 135.421 185.974 135.684 186.042 cv
135.726 186.274 135.84 186.478 135.999 186.638 cv
136.447 188.431 li
164.786 188.431 li
165.248 186.584 li
165.402 186.426 165.513 186.225 165.554 185.997 cv
165.817 185.929 166.015 185.7 166.015 185.416 cv
166.015 185.132 165.818 184.903 165.555 184.834 cv
cp
.0980392 .564706 .160784 rgb
f
164.593 190.831 mo
136.645 190.831 li
135.831 186.383 li
165.407 186.383 li
164.593 190.831 li
cp
.4 .196078 .0196078 rgb
f
142.676 194.838 mo
141.383 194.838 li
137.997 190.831 li
139.29 190.831 li
142.676 194.838 li
cp
.329412 .145098 .00784314 rgb
f
137.997 194.838 mo
139.29 194.838 li
142.676 190.831 li
141.383 190.831 li
137.997 194.838 li
cp
f
163.241 194.838 mo
161.948 194.838 li
158.562 190.831 li
159.855 190.831 li
163.241 194.838 li
cp
f
158.562 194.838 mo
159.855 194.838 li
163.241 190.831 li
161.948 190.831 li
158.562 194.838 li
cp
f
170.161 185.059 mo
169.957 185.059 li
169.957 180.642 li
170.161 180.642 li
170.161 185.059 li
cp
.027451 .447059 .0666667 rgb
f
170.026 183.236 mo
170.026 183.236 169.488 183.077 169.069 182.822 cv
168.693 182.591 168.737 182.268 168.879 182.122 cv
169.021 181.976 169.339 181.924 169.584 182.292 cv
169.843 182.683 170.026 183.236 170.026 183.236 cv
cp
f
170.059 183.618 mo
170.059 183.618 170.597 183.459 171.016 183.203 cv
171.393 182.973 171.349 182.65 171.207 182.504 cv
171.065 182.358 170.746 182.305 170.502 182.673 cv
170.242 183.065 170.059 183.618 170.059 183.618 cv
cp
f
171.576 181.035 mo
171.633 180.895 171.546 180.728 171.127 180.558 cv
170.98 180.499 170.815 180.452 170.655 180.416 cv
170.814 180.377 170.979 180.328 171.125 180.266 cv
171.541 180.09 171.625 179.921 171.566 179.782 cv
171.507 179.643 171.328 179.586 170.912 179.762 cv
170.765 179.825 170.616 179.909 170.477 179.996 cv
170.562 179.856 170.644 179.705 170.704 179.558 cv
170.873 179.139 170.813 178.96 170.673 178.903 cv
170.533 178.847 170.366 178.933 170.197 179.352 cv
170.137 179.5 170.091 179.665 170.054 179.825 cv
170.016 179.666 169.967 179.501 169.905 179.355 cv
169.728 178.938 169.56 178.854 169.421 178.913 cv
169.281 178.972 169.225 179.152 169.401 179.568 cv
169.463 179.714 169.547 179.864 169.634 180.003 cv
169.494 179.917 169.343 179.836 169.196 179.776 cv
168.777 179.606 168.598 179.666 168.542 179.806 cv
168.485 179.946 168.572 180.113 168.991 180.283 cv
169.138 180.343 169.303 180.389 169.463 180.425 cv
169.304 180.464 169.14 180.513 168.993 180.575 cv
168.577 180.751 168.493 180.92 168.552 181.059 cv
168.61 181.198 168.79 181.255 169.206 181.079 cv
169.353 181.017 169.502 180.933 169.641 180.845 cv
169.556 180.985 169.474 181.136 169.414 181.284 cv
169.245 181.703 169.304 181.881 169.444 181.938 cv
169.585 181.995 169.752 181.908 169.921 181.489 cv
169.981 181.342 170.027 181.176 170.064 181.017 cv
170.103 181.176 170.151 181.34 170.213 181.487 cv
170.39 181.903 170.558 181.987 170.697 181.928 cv
170.837 181.869 170.893 181.69 170.717 181.273 cv
170.655 181.127 170.571 180.977 170.484 180.839 cv
170.624 180.924 170.774 181.006 170.922 181.065 cv
171.341 181.235 171.52 181.175 171.576 181.035 cv
cp
1 1 1 rgb
f
170.46 180.583 mo
170.37 180.804 170.118 180.911 169.897 180.822 cv
169.675 180.732 169.568 180.48 169.658 180.258 cv
169.748 180.037 170 179.93 170.221 180.02 cv
170.443 180.11 170.549 180.362 170.46 180.583 cv
cp
.901961 0 .0156863 rgb
f
174.34 185.059 mo
174.136 185.059 li
174.136 180.642 li
174.34 180.642 li
174.34 185.059 li
cp
.027451 .447059 .0666667 rgb
f
174.206 183.236 mo
174.206 183.236 173.667 183.077 173.248 182.822 cv
172.872 182.591 172.916 182.268 173.058 182.122 cv
173.2 181.976 173.518 181.924 173.763 182.292 cv
174.022 182.683 174.206 183.236 174.206 183.236 cv
cp
f
174.238 183.618 mo
174.238 183.618 174.777 183.459 175.195 183.203 cv
175.572 182.973 175.528 182.65 175.386 182.504 cv
175.244 182.358 174.925 182.305 174.681 182.673 cv
174.421 183.065 174.238 183.618 174.238 183.618 cv
cp
f
175.755 181.035 mo
175.812 180.895 175.725 180.728 175.306 180.558 cv
175.159 180.499 174.994 180.452 174.834 180.416 cv
174.993 180.377 175.158 180.328 175.304 180.266 cv
175.72 180.09 175.804 179.921 175.745 179.782 cv
175.686 179.643 175.507 179.586 175.091 179.762 cv
174.944 179.825 174.795 179.909 174.656 179.996 cv
174.741 179.856 174.823 179.705 174.883 179.558 cv
175.052 179.139 174.993 178.96 174.853 178.903 cv
174.712 178.847 174.545 178.933 174.376 179.352 cv
174.316 179.5 174.27 179.665 174.233 179.825 cv
174.195 179.666 174.146 179.501 174.084 179.355 cv
173.907 178.938 173.739 178.854 173.6 178.913 cv
173.461 178.972 173.404 179.152 173.58 179.568 cv
173.642 179.714 173.726 179.864 173.813 180.003 cv
173.673 179.917 173.523 179.836 173.375 179.776 cv
172.956 179.606 172.777 179.666 172.721 179.806 cv
172.664 179.946 172.751 180.113 173.17 180.283 cv
173.317 180.343 173.482 180.389 173.642 180.425 cv
173.483 180.464 173.319 180.513 173.172 180.575 cv
172.756 180.751 172.672 180.92 172.731 181.059 cv
172.79 181.198 172.969 181.255 173.385 181.079 cv
173.532 181.017 173.681 180.933 173.82 180.845 cv
173.735 180.985 173.653 181.136 173.593 181.284 cv
173.424 181.703 173.484 181.881 173.624 181.938 cv
173.764 181.995 173.931 181.908 174.101 181.489 cv
174.16 181.342 174.207 181.176 174.243 181.017 cv
174.282 181.176 174.33 181.34 174.393 181.487 cv
174.569 181.903 174.737 181.987 174.876 181.928 cv
175.016 181.869 175.072 181.69 174.896 181.273 cv
174.834 181.127 174.75 180.977 174.663 180.839 cv
174.803 180.924 174.954 181.006 175.101 181.065 cv
175.52 181.235 175.699 181.175 175.755 181.035 cv
cp
1 1 1 rgb
f
174.639 180.583 mo
174.549 180.804 174.297 180.911 174.076 180.822 cv
173.854 180.732 173.748 180.48 173.837 180.258 cv
173.927 180.037 174.179 179.93 174.4 180.02 cv
174.622 180.11 174.729 180.362 174.639 180.583 cv
cp
.901961 0 .0156863 rgb
f
178.519 185.059 mo
178.315 185.059 li
178.315 180.642 li
178.519 180.642 li
178.519 185.059 li
cp
.027451 .447059 .0666667 rgb
f
178.385 183.236 mo
178.385 183.236 177.846 183.077 177.428 182.822 cv
177.051 182.591 177.095 182.268 177.237 182.122 cv
177.379 181.976 177.698 181.924 177.942 182.292 cv
178.201 182.683 178.385 183.236 178.385 183.236 cv
cp
f
178.417 183.618 mo
178.417 183.618 178.956 183.459 179.374 183.203 cv
179.751 182.973 179.707 182.65 179.565 182.504 cv
179.423 182.358 179.104 182.305 178.86 182.673 cv
178.601 183.065 178.417 183.618 178.417 183.618 cv
cp
f
179.934 181.035 mo
179.991 180.895 179.904 180.728 179.486 180.558 cv
179.338 180.499 179.173 180.452 179.013 180.416 cv
179.172 180.377 179.337 180.328 179.483 180.266 cv
179.899 180.09 179.983 179.921 179.924 179.782 cv
179.866 179.643 179.686 179.586 179.27 179.762 cv
179.123 179.825 178.974 179.909 178.835 179.996 cv
178.92 179.856 179.002 179.705 179.062 179.558 cv
179.231 179.139 179.172 178.96 179.032 178.903 cv
178.892 178.847 178.724 178.933 178.555 179.352 cv
178.495 179.5 178.449 179.665 178.412 179.825 cv
178.374 179.666 178.325 179.501 178.263 179.355 cv
178.087 178.938 177.918 178.854 177.779 178.913 cv
177.64 178.972 177.583 179.152 177.759 179.568 cv
177.821 179.714 177.905 179.864 177.992 180.003 cv
177.852 179.917 177.702 179.836 177.554 179.776 cv
177.135 179.606 176.957 179.666 176.9 179.806 cv
176.843 179.946 176.93 180.113 177.349 180.283 cv
177.496 180.343 177.661 180.389 177.821 180.425 cv
177.662 180.464 177.498 180.513 177.351 180.575 cv
176.935 180.751 176.851 180.92 176.91 181.059 cv
176.969 181.198 177.148 181.255 177.564 181.079 cv
177.711 181.017 177.861 180.933 177.999 180.845 cv
177.914 180.985 177.832 181.136 177.773 181.284 cv
177.603 181.703 177.663 181.881 177.803 181.938 cv
177.943 181.995 178.11 181.908 178.28 181.489 cv
178.339 181.342 178.386 181.176 178.422 181.017 cv
178.461 181.176 178.509 181.34 178.572 181.487 cv
178.748 181.903 178.916 181.987 179.056 181.928 cv
179.195 181.869 179.252 181.69 179.075 181.273 cv
179.013 181.127 178.929 180.977 178.842 180.839 cv
178.982 180.924 179.133 181.006 179.28 181.065 cv
179.699 181.235 179.878 181.175 179.934 181.035 cv
cp
1 1 1 rgb
f
178.818 180.583 mo
178.728 180.804 178.476 180.911 178.255 180.822 cv
178.033 180.732 177.927 180.48 178.016 180.258 cv
178.106 180.037 178.358 179.93 178.579 180.02 cv
178.801 180.11 178.908 180.362 178.818 180.583 cv
cp
.901961 0 .0156863 rgb
f
182.698 185.059 mo
182.494 185.059 li
182.494 180.642 li
182.698 180.642 li
182.698 185.059 li
cp
.027451 .447059 .0666667 rgb
f
182.564 183.236 mo
182.564 183.236 182.025 183.077 181.607 182.822 cv
181.23 182.591 181.274 182.268 181.416 182.122 cv
181.558 181.976 181.877 181.924 182.121 182.292 cv
182.38 182.683 182.564 183.236 182.564 183.236 cv
cp
f
182.596 183.618 mo
182.596 183.618 183.135 183.459 183.553 183.203 cv
183.93 182.973 183.886 182.65 183.744 182.504 cv
183.602 182.358 183.283 182.305 183.039 182.673 cv
182.78 183.065 182.596 183.618 182.596 183.618 cv
cp
f
184.113 181.035 mo
184.17 180.895 184.084 180.728 183.665 180.558 cv
183.517 180.499 183.352 180.452 183.192 180.416 cv
183.351 180.377 183.516 180.328 183.662 180.266 cv
184.079 180.09 184.163 179.921 184.104 179.782 cv
184.045 179.643 183.865 179.586 183.449 179.762 cv
183.302 179.825 183.153 179.909 183.014 179.996 cv
183.1 179.856 183.181 179.705 183.241 179.558 cv
183.411 179.139 183.351 178.96 183.211 178.903 cv
183.071 178.847 182.903 178.933 182.734 179.352 cv
182.674 179.5 182.628 179.665 182.592 179.825 cv
182.553 179.666 182.504 179.501 182.442 179.355 cv
182.266 178.938 182.097 178.854 181.958 178.913 cv
181.819 178.972 181.762 179.152 181.938 179.568 cv
182 179.714 182.084 179.864 182.171 180.003 cv
182.031 179.917 181.881 179.836 181.733 179.776 cv
181.314 179.606 181.136 179.666 181.079 179.806 cv
181.022 179.946 181.109 180.113 181.528 180.283 cv
181.675 180.343 181.841 180.389 182 180.425 cv
181.841 180.464 181.677 180.513 181.53 180.575 cv
181.114 180.751 181.03 180.92 181.089 181.059 cv
181.148 181.198 181.327 181.255 181.744 181.079 cv
181.89 181.017 182.04 180.933 182.178 180.845 cv
182.093 180.985 182.011 181.136 181.952 181.284 cv
181.782 181.703 181.842 181.881 181.982 181.938 cv
182.122 181.995 182.289 181.908 182.459 181.489 cv
182.519 181.342 182.565 181.176 182.601 181.017 cv
182.64 181.176 182.689 181.34 182.751 181.487 cv
182.927 181.903 183.096 181.987 183.235 181.928 cv
183.374 181.869 183.431 181.69 183.254 181.273 cv
183.192 181.127 183.108 180.977 183.021 180.839 cv
183.161 180.924 183.312 181.006 183.459 181.065 cv
183.878 181.235 184.057 181.175 184.113 181.035 cv
cp
1 1 1 rgb
f
182.997 180.583 mo
182.908 180.804 182.655 180.911 182.434 180.822 cv
182.213 180.732 182.106 180.48 182.195 180.258 cv
182.285 180.037 182.537 179.93 182.759 180.02 cv
182.98 180.11 183.087 180.362 182.997 180.583 cv
cp
.901961 0 .0156863 rgb
f
186.877 185.059 mo
186.674 185.059 li
186.674 180.642 li
186.877 180.642 li
186.877 185.059 li
cp
.027451 .447059 .0666667 rgb
f
186.743 183.236 mo
186.743 183.236 186.204 183.077 185.786 182.822 cv
185.409 182.591 185.453 182.268 185.595 182.122 cv
185.737 181.976 186.056 181.924 186.3 182.292 cv
186.559 182.683 186.743 183.236 186.743 183.236 cv
cp
f
186.775 183.618 mo
186.775 183.618 187.314 183.459 187.732 183.203 cv
188.109 182.973 188.065 182.65 187.923 182.504 cv
187.781 182.358 187.462 182.305 187.218 182.673 cv
186.959 183.065 186.775 183.618 186.775 183.618 cv
cp
f
188.293 181.035 mo
188.349 180.895 188.263 180.728 187.844 180.558 cv
187.696 180.499 187.531 180.452 187.371 180.416 cv
187.531 180.377 187.695 180.328 187.841 180.266 cv
188.258 180.09 188.342 179.921 188.283 179.782 cv
188.224 179.643 188.044 179.586 187.628 179.762 cv
187.482 179.825 187.332 179.909 187.194 179.996 cv
187.279 179.856 187.36 179.705 187.42 179.558 cv
187.59 179.139 187.53 178.96 187.39 178.903 cv
187.25 178.847 187.083 178.933 186.913 179.352 cv
186.853 179.5 186.807 179.665 186.771 179.825 cv
186.732 179.666 186.683 179.501 186.621 179.355 cv
186.445 178.938 186.276 178.854 186.137 178.913 cv
185.998 178.972 185.941 179.152 186.117 179.568 cv
186.179 179.714 186.263 179.864 186.351 180.003 cv
186.211 179.917 186.06 179.836 185.912 179.776 cv
185.493 179.606 185.315 179.666 185.258 179.806 cv
185.201 179.946 185.288 180.113 185.707 180.283 cv
185.855 180.343 186.02 180.389 186.179 180.425 cv
186.02 180.464 185.856 180.513 185.709 180.575 cv
185.293 180.751 185.209 180.92 185.268 181.059 cv
185.327 181.198 185.506 181.255 185.923 181.079 cv
186.069 181.017 186.219 180.933 186.357 180.845 cv
186.272 180.985 186.19 181.136 186.131 181.284 cv
185.961 181.703 186.021 181.881 186.161 181.938 cv
186.301 181.995 186.468 181.908 186.638 181.489 cv
186.698 181.342 186.744 181.176 186.78 181.017 cv
186.819 181.176 186.868 181.34 186.93 181.487 cv
187.106 181.903 187.275 181.987 187.414 181.928 cv
187.553 181.869 187.61 181.69 187.434 181.273 cv
187.371 181.127 187.287 180.977 187.2 180.839 cv
187.34 180.924 187.491 181.006 187.638 181.065 cv
188.057 181.235 188.236 181.175 188.293 181.035 cv
cp
1 1 1 rgb
f
187.176 180.583 mo
187.087 180.804 186.834 180.911 186.613 180.822 cv
186.392 180.732 186.285 180.48 186.374 180.258 cv
186.464 180.037 186.716 179.93 186.938 180.02 cv
187.159 180.11 187.266 180.362 187.176 180.583 cv
cp
.901961 0 .0156863 rgb
f
191.056 185.059 mo
190.853 185.059 li
190.853 180.642 li
191.056 180.642 li
191.056 185.059 li
cp
.027451 .447059 .0666667 rgb
f
190.922 183.236 mo
190.922 183.236 190.383 183.077 189.965 182.822 cv
189.588 182.591 189.632 182.268 189.774 182.122 cv
189.916 181.976 190.235 181.924 190.479 182.292 cv
190.739 182.683 190.922 183.236 190.922 183.236 cv
cp
f
190.954 183.618 mo
190.954 183.618 191.493 183.459 191.912 183.203 cv
192.288 182.973 192.244 182.65 192.102 182.504 cv
191.96 182.358 191.642 182.305 191.397 182.673 cv
191.138 183.065 190.954 183.618 190.954 183.618 cv
cp
f
192.472 181.035 mo
192.528 180.895 192.442 180.728 192.023 180.558 cv
191.875 180.499 191.71 180.452 191.551 180.416 cv
191.71 180.377 191.874 180.328 192.02 180.266 cv
192.437 180.09 192.521 179.921 192.462 179.782 cv
192.403 179.643 192.223 179.586 191.807 179.762 cv
191.661 179.825 191.511 179.909 191.373 179.996 cv
191.458 179.856 191.539 179.705 191.599 179.558 cv
191.769 179.139 191.709 178.96 191.569 178.903 cv
191.429 178.847 191.262 178.933 191.092 179.352 cv
191.032 179.5 190.986 179.665 190.95 179.825 cv
190.911 179.666 190.862 179.501 190.8 179.355 cv
190.624 178.938 190.455 178.854 190.316 178.913 cv
190.177 178.972 190.12 179.152 190.296 179.568 cv
190.358 179.714 190.443 179.864 190.53 180.003 cv
190.39 179.917 190.239 179.836 190.091 179.776 cv
189.673 179.606 189.494 179.666 189.437 179.806 cv
189.38 179.946 189.467 180.113 189.886 180.283 cv
190.034 180.343 190.199 180.389 190.359 180.425 cv
190.199 180.464 190.035 180.513 189.888 180.575 cv
189.472 180.751 189.388 180.92 189.447 181.059 cv
189.506 181.198 189.686 181.255 190.102 181.079 cv
190.248 181.017 190.398 180.933 190.536 180.845 cv
190.451 180.985 190.37 181.136 190.31 181.284 cv
190.14 181.703 190.2 181.881 190.34 181.938 cv
190.48 181.995 190.647 181.908 190.817 181.489 cv
190.877 181.342 190.923 181.176 190.959 181.017 cv
190.998 181.176 191.047 181.34 191.109 181.487 cv
191.285 181.903 191.454 181.987 191.593 181.928 cv
191.732 181.869 191.789 181.69 191.613 181.273 cv
191.551 181.127 191.466 180.977 191.379 180.839 cv
191.519 180.924 191.67 181.006 191.817 181.065 cv
192.236 181.235 192.415 181.175 192.472 181.035 cv
cp
1 1 1 rgb
f
191.355 180.583 mo
191.266 180.804 191.013 180.911 190.792 180.822 cv
190.571 180.732 190.464 180.48 190.554 180.258 cv
190.643 180.037 190.895 179.93 191.117 180.02 cv
191.338 180.11 191.445 180.362 191.355 180.583 cv
cp
.901961 0 .0156863 rgb
f
195.235 185.059 mo
195.032 185.059 li
195.032 180.642 li
195.235 180.642 li
195.235 185.059 li
cp
.027451 .447059 .0666667 rgb
f
195.101 183.236 mo
195.101 183.236 194.563 183.077 194.144 182.822 cv
193.767 182.591 193.811 182.268 193.953 182.122 cv
194.095 181.976 194.414 181.924 194.658 182.292 cv
194.918 182.683 195.101 183.236 195.101 183.236 cv
cp
f
195.134 183.618 mo
195.134 183.618 195.672 183.459 196.091 183.203 cv
196.467 182.973 196.423 182.65 196.281 182.504 cv
196.139 182.358 195.821 182.305 195.577 182.673 cv
195.317 183.065 195.134 183.618 195.134 183.618 cv
cp
f
196.651 181.035 mo
196.708 180.895 196.621 180.728 196.202 180.558 cv
196.054 180.499 195.889 180.452 195.73 180.416 cv
195.889 180.377 196.053 180.328 196.2 180.266 cv
196.616 180.09 196.7 179.921 196.641 179.782 cv
196.582 179.643 196.403 179.586 195.986 179.762 cv
195.84 179.825 195.69 179.909 195.552 179.996 cv
195.637 179.856 195.718 179.705 195.778 179.558 cv
195.948 179.139 195.888 178.96 195.748 178.903 cv
195.608 178.847 195.441 178.933 195.271 179.352 cv
195.211 179.5 195.165 179.665 195.129 179.825 cv
195.09 179.666 195.041 179.501 194.979 179.355 cv
194.803 178.938 194.634 178.854 194.495 178.913 cv
194.356 178.972 194.299 179.152 194.475 179.568 cv
194.537 179.714 194.622 179.864 194.709 180.003 cv
194.569 179.917 194.418 179.836 194.271 179.776 cv
193.852 179.606 193.673 179.666 193.616 179.806 cv
193.56 179.946 193.646 180.113 194.065 180.283 cv
194.213 180.343 194.378 180.389 194.538 180.425 cv
194.379 180.464 194.214 180.513 194.067 180.575 cv
193.651 180.751 193.567 180.92 193.626 181.059 cv
193.685 181.198 193.865 181.255 194.281 181.079 cv
194.427 181.017 194.577 180.933 194.716 180.845 cv
194.631 180.985 194.549 181.136 194.489 181.284 cv
194.319 181.703 194.379 181.881 194.519 181.938 cv
194.659 181.995 194.826 181.908 194.996 181.489 cv
195.056 181.342 195.102 181.176 195.138 181.017 cv
195.177 181.176 195.226 181.34 195.288 181.487 cv
195.464 181.903 195.633 181.987 195.772 181.928 cv
195.911 181.869 195.968 181.69 195.792 181.273 cv
195.73 181.127 195.646 180.977 195.558 180.839 cv
195.698 180.924 195.849 181.006 195.997 181.065 cv
196.416 181.235 196.594 181.175 196.651 181.035 cv
cp
1 1 1 rgb
f
195.534 180.583 mo
195.445 180.804 195.193 180.911 194.971 180.822 cv
194.75 180.732 194.643 180.48 194.733 180.258 cv
194.822 180.037 195.074 179.93 195.296 180.02 cv
195.517 180.11 195.624 180.362 195.534 180.583 cv
cp
.901961 0 .0156863 rgb
f
197.533 184.834 mo
197.551 184.742 li
197.551 184.302 197.195 183.946 196.755 183.946 cv
196.507 183.946 196.295 184.065 196.149 184.242 cv
196.024 184.161 195.883 184.101 195.722 184.101 cv
195.631 184.101 195.546 184.125 195.464 184.153 cv
195.339 183.667 194.901 183.305 194.375 183.305 cv
193.922 183.305 193.533 183.574 193.354 183.96 cv
193.135 183.987 192.938 184.076 192.776 184.21 cv
192.738 183.909 192.491 183.673 192.179 183.673 cv
192 183.673 191.842 183.753 191.73 183.876 cv
191.672 183.816 191.59 183.779 191.5 183.779 cv
191.32 183.84 li
191.333 183.779 li
191.333 183.6 191.188 183.456 191.01 183.456 cv
190.868 183.456 190.75 183.55 190.708 183.678 cv
190.538 183.623 li
190.411 183.623 190.303 183.699 190.25 183.806 cv
190.162 183.784 190.072 183.769 189.977 183.769 cv
189.843 183.769 189.718 183.796 189.599 183.838 cv
189.456 183.623 189.224 183.472 188.946 183.472 cv
188.801 183.472 188.672 183.522 188.555 183.59 cv
188.374 183.467 188.157 183.396 187.922 183.396 cv
187.456 183.396 187.055 183.679 186.883 184.083 cv
186.742 184.018 186.586 183.981 186.421 183.981 cv
186.285 183.981 186.156 184.009 186.035 184.053 cv
185.927 183.743 185.639 183.517 185.292 183.517 cv
185.014 183.517 184.782 183.668 184.639 183.883 cv
184.521 183.841 184.395 183.814 184.262 183.814 cv
184.167 183.814 184.076 183.829 183.988 183.851 cv
183.936 183.744 183.828 183.668 183.7 183.668 cv
183.531 183.723 li
183.488 183.595 183.371 183.501 183.228 183.501 cv
183.05 183.501 182.906 183.645 182.906 183.824 cv
182.918 183.885 li
182.738 183.824 li
182.648 183.824 182.567 183.861 182.508 183.921 cv
182.396 183.798 182.238 183.718 182.059 183.718 cv
181.748 183.718 181.501 183.954 181.462 184.255 cv
181.301 184.121 181.103 184.032 180.884 184.005 cv
180.705 183.619 180.317 183.35 179.863 183.35 cv
179.503 183.35 179.186 183.522 178.979 183.785 cv
178.846 183.53 178.587 183.35 178.28 183.35 cv
177.998 183.35 177.763 183.504 177.622 183.724 cv
177.54 183.697 177.457 183.673 177.367 183.673 cv
177.18 183.673 177.015 183.747 176.88 183.855 cv
176.735 183.656 176.511 183.517 176.246 183.517 cv
175.968 183.517 175.736 183.668 175.594 183.883 cv
175.475 183.841 175.349 183.814 175.216 183.814 cv
175.121 183.814 175.03 183.829 174.942 183.851 cv
174.89 183.744 174.782 183.668 174.654 183.668 cv
174.485 183.723 li
174.442 183.595 174.325 183.501 174.182 183.501 cv
174.004 183.501 173.86 183.645 173.86 183.824 cv
173.872 183.885 li
173.692 183.824 li
173.602 183.824 173.521 183.861 173.462 183.921 cv
173.35 183.798 173.193 183.718 173.013 183.718 cv
172.702 183.718 172.455 183.954 172.416 184.255 cv
172.255 184.121 172.057 184.032 171.839 184.005 cv
171.659 183.619 171.271 183.35 170.817 183.35 cv
170.292 183.35 169.854 183.712 169.728 184.199 cv
169.646 184.17 169.562 184.146 169.47 184.146 cv
169.31 184.146 169.169 184.206 169.044 184.288 cv
168.897 184.11 168.685 183.991 168.438 183.991 cv
167.998 183.991 167.641 184.347 167.641 184.787 cv
167.66 184.879 li
167.398 184.948 167.2 185.176 167.2 185.461 cv
167.2 185.745 167.398 185.974 167.661 186.042 cv
167.703 186.274 167.817 186.478 167.976 186.638 cv
168.424 188.431 li
196.763 188.431 li
197.225 186.584 li
197.38 186.426 197.49 186.225 197.531 185.997 cv
197.794 185.929 197.992 185.7 197.992 185.416 cv
197.992 185.132 197.795 184.903 197.533 184.834 cv
cp
.0980392 .564706 .160784 rgb
f
196.57 190.831 mo
168.623 190.831 li
167.808 186.383 li
197.385 186.383 li
196.57 190.831 li
cp
.4 .196078 .0196078 rgb
f
174.653 194.838 mo
173.36 194.838 li
169.974 190.831 li
171.267 190.831 li
174.653 194.838 li
cp
.329412 .145098 .00784314 rgb
f
169.974 194.838 mo
171.267 194.838 li
174.653 190.831 li
173.36 190.831 li
169.974 194.838 li
cp
f
195.218 194.838 mo
193.925 194.838 li
190.539 190.831 li
191.832 190.831 li
195.218 194.838 li
cp
f
190.539 194.838 mo
191.832 194.838 li
195.218 190.831 li
193.925 190.831 li
190.539 194.838 li
cp
f
65.6454 142.076 mo
95.9771 142.076 li
98.5781 147.313 li
63.0446 147.313 li
65.6454 142.076 li
cp
1 1 1 rgb
f
65.7715 149.186 mo
65.7715 148.447 65.1611 147.847 64.4081 147.847 cv
63.655 147.847 63.0446 148.447 63.0446 149.186 cv
63.0446 149.925 63.655 150.524 64.4081 150.524 cv
65.1611 150.524 65.7715 149.925 65.7715 149.186 cv
cp
.776471 .0196078 .0588235 rgb
f
68.4985 149.186 mo
68.4985 148.447 67.8881 147.847 67.135 147.847 cv
66.382 147.847 65.7715 148.447 65.7715 149.186 cv
65.7715 149.925 66.382 150.524 67.135 150.524 cv
67.8881 150.524 68.4985 149.925 68.4985 149.186 cv
cp
.819608 .827451 .819608 rgb
f
71.2426 149.186 mo
71.2426 148.447 70.6321 147.847 69.8791 147.847 cv
69.126 147.847 68.5156 148.447 68.5156 149.186 cv
68.5156 149.925 69.126 150.524 69.8791 150.524 cv
70.6321 150.524 71.2426 149.925 71.2426 149.186 cv
cp
.776471 .0196078 .0588235 rgb
f
73.9696 149.186 mo
73.9696 148.447 73.3592 147.847 72.6061 147.847 cv
71.8531 147.847 71.2426 148.447 71.2426 149.186 cv
71.2426 149.925 71.8531 150.524 72.6061 150.524 cv
73.3592 150.524 73.9696 149.925 73.9696 149.186 cv
cp
.819608 .827451 .819608 rgb
f
76.7136 149.186 mo
76.7136 148.447 76.1032 147.847 75.3502 147.847 cv
74.5971 147.847 73.9867 148.447 73.9867 149.186 cv
73.9867 149.925 74.5971 150.524 75.3502 150.524 cv
76.1032 150.524 76.7136 149.925 76.7136 149.186 cv
cp
.776471 .0196078 .0588235 rgb
f
79.4406 149.186 mo
79.4406 148.447 78.8302 147.847 78.0771 147.847 cv
77.3241 147.847 76.7136 148.447 76.7136 149.186 cv
76.7136 149.925 77.3241 150.524 78.0771 150.524 cv
78.8302 150.524 79.4406 149.925 79.4406 149.186 cv
cp
.819608 .827451 .819608 rgb
f
82.1847 149.186 mo
82.1847 148.447 81.5743 147.847 80.8213 147.847 cv
80.0682 147.847 79.4577 148.447 79.4577 149.186 cv
79.4577 149.925 80.0682 150.524 80.8213 150.524 cv
81.5743 150.524 82.1847 149.925 82.1847 149.186 cv
cp
.776471 .0196078 .0588235 rgb
f
84.9117 149.186 mo
84.9117 148.447 84.3013 147.847 83.5482 147.847 cv
82.7952 147.847 82.1847 148.447 82.1847 149.186 cv
82.1847 149.925 82.7952 150.524 83.5482 150.524 cv
84.3013 150.524 84.9117 149.925 84.9117 149.186 cv
cp
.819608 .827451 .819608 rgb
f
87.6558 149.186 mo
87.6558 148.447 87.0453 147.847 86.2923 147.847 cv
85.5392 147.847 84.9288 148.447 84.9288 149.186 cv
84.9288 149.925 85.5392 150.524 86.2923 150.524 cv
87.0453 150.524 87.6558 149.925 87.6558 149.186 cv
cp
.776471 .0196078 .0588235 rgb
f
90.3828 149.186 mo
90.3828 148.447 89.7723 147.847 89.0192 147.847 cv
88.2662 147.847 87.6558 148.447 87.6558 149.186 cv
87.6558 149.925 88.2662 150.524 89.0192 150.524 cv
89.7723 150.524 90.3828 149.925 90.3828 149.186 cv
cp
.819608 .827451 .819608 rgb
f
93.1269 149.186 mo
93.1269 148.447 92.5164 147.847 91.7634 147.847 cv
91.0103 147.847 90.3999 148.447 90.3999 149.186 cv
90.3999 149.925 91.0103 150.524 91.7634 150.524 cv
92.5164 150.524 93.1269 149.925 93.1269 149.186 cv
cp
.776471 .0196078 .0588235 rgb
f
95.8538 149.186 mo
95.8538 148.447 95.2434 147.847 94.4903 147.847 cv
93.7373 147.847 93.1269 148.447 93.1269 149.186 cv
93.1269 149.925 93.7373 150.524 94.4903 150.524 cv
95.2434 150.524 95.8538 149.925 95.8538 149.186 cv
cp
.819608 .827451 .819608 rgb
f
98.5979 149.186 mo
98.5979 148.447 97.9874 147.847 97.2344 147.847 cv
96.4813 147.847 95.8709 148.447 95.8709 149.186 cv
95.8709 149.925 96.4813 150.524 97.2344 150.524 cv
97.9874 150.524 98.5979 149.925 98.5979 149.186 cv
cp
.776471 .0196078 .0588235 rgb
f
98.5979 149.186 mo
63.0446 149.186 li
63.0446 147.313 li
98.5979 147.313 li
98.5979 149.186 li
cp
.819608 .827451 .819608 rgb
f
67.982 142.076 mo
65.6555 142.076 li
63.0446 147.313 li
65.7715 147.313 li
67.982 142.076 li
cp
.901961 0 .0156863 rgb
f
72.6494 142.076 mo
70.323 142.076 li
68.5156 147.313 li
71.2425 147.313 li
72.6494 142.076 li
cp
f
77.3169 142.076 mo
74.9905 142.076 li
73.9867 147.313 li
76.7136 147.313 li
77.3169 142.076 li
cp
f
81.9845 142.076 mo
79.658 142.076 li
79.4577 147.313 li
82.1847 147.313 li
81.9845 142.076 li
cp
f
86.6519 142.076 mo
84.3255 142.076 li
84.9288 147.313 li
87.6558 147.313 li
86.6519 142.076 li
cp
f
91.3194 142.076 mo
88.9929 142.076 li
90.3998 147.313 li
93.1269 147.313 li
91.3194 142.076 li
cp
f
95.9869 142.076 mo
93.6604 142.076 li
95.8709 147.313 li
98.5979 147.313 li
95.9869 142.076 li
cp
f
65.7715 147.313 mo
63.0446 147.313 li
63.0446 149.186 li
65.7715 149.186 li
65.7715 147.313 li
cp
.776471 .0196078 .0588235 rgb
f
71.2425 147.313 mo
68.5156 147.313 li
68.5156 149.186 li
71.2425 149.186 li
71.2425 147.313 li
cp
f
76.7136 147.313 mo
73.9867 147.313 li
73.9867 149.186 li
76.7136 149.186 li
76.7136 147.313 li
cp
f
82.1847 147.313 mo
79.4577 147.313 li
79.4577 149.186 li
82.1847 149.186 li
82.1847 147.313 li
cp
f
87.6558 147.313 mo
84.9288 147.313 li
84.9288 149.186 li
87.6558 149.186 li
87.6558 147.313 li
cp
f
93.1269 147.313 mo
90.3998 147.313 li
90.3998 149.186 li
93.1269 149.186 li
93.1269 147.313 li
cp
f
98.5979 147.313 mo
95.8709 147.313 li
95.8709 149.186 li
98.5979 149.186 li
98.5979 147.313 li
cp
f
66.5025 187.706 mo
95.1851 187.706 li
95.1851 184.152 li
66.5025 184.152 li
66.5025 187.706 li
cp
.847059 .854902 .862745 rgb
f
63.7689 191.26 mo
97.9188 191.26 li
97.9188 187.706 li
63.7689 187.706 li
63.7689 191.26 li
cp
.764706 .772549 .784314 rgb
f
61.2177 194.838 mo
100.47 194.838 li
100.47 191.284 li
61.2177 191.284 li
61.2177 194.838 li
cp
.847059 .854902 .862745 rgb
f
511.047 146.051 mo
515.002 146.051 li
515.002 149.222 li
518.998 149.222 li
518.998 152.445 li
502.59 152.445 li
502.59 149.274 li
502.59 149.222 li
502.59 146.051 li
502.59 142.827 li
511.047 142.827 li
511.047 146.051 li
cp
.764706 .772549 .784314 rgb
f
519.186 149.222 mo
515.002 149.222 li
515.002 148.765 li
519.186 148.765 li
519.186 149.222 li
cp
.517647 .517647 .517647 rgb
f
515.231 146.042 mo
511.047 146.042 li
511.047 145.586 li
515.231 145.586 li
515.231 146.042 li
cp
f
511.266 142.827 mo
502.59 142.827 li
502.59 142.371 li
511.266 142.371 li
511.266 142.827 li
cp
f
352.633 122.758 mo
354.489 152.446 li
348.555 152.446 li
350.411 122.758 li
352.633 122.758 li
cp
.490196 .278431 .105882 rgb
f
336.769 116.399 mo
336.769 113.279 339.298 110.75 342.418 110.75 cv
342.643 110.761 li
342.504 110.387 342.418 109.986 342.418 109.563 cv
342.418 109.026 342.551 108.523 342.769 108.069 cv
341.537 107.308 340.709 105.957 340.709 104.403 cv
340.709 102.143 342.45 100.31 344.661 100.12 cv
345.352 97.0494 348.091 94.7538 351.371 94.7538 cv
355.172 94.7538 358.253 97.8353 358.253 101.636 cv
358.253 101.994 358.218 102.343 358.165 102.687 cv
359.826 102.943 361.101 104.366 361.101 106.098 cv
361.101 106.588 360.997 107.053 360.813 107.476 cv
362.521 108.347 363.724 110.058 363.88 112.066 cv
365.295 112.775 366.275 114.224 366.275 115.914 cv
366.275 117.754 365.12 119.314 363.5 119.937 cv
363.748 120.415 363.902 120.949 363.902 121.525 cv
363.902 122.189 363.706 122.804 363.382 123.331 cv
364.099 124.417 364.519 125.717 364.519 127.117 cv
364.519 130.918 361.438 133.999 357.636 133.999 cv
357.067 133.999 356.516 133.923 355.987 133.792 cv
354.845 134.634 353.438 135.138 351.911 135.138 cv
350.086 135.138 348.431 134.422 347.199 133.262 cv
346.604 133.745 345.855 134.047 345.028 134.047 cv
343.115 134.047 341.563 132.495 341.563 130.582 cv
341.563 130.069 341.682 129.586 341.882 129.148 cv
339.655 128.39 338.051 126.286 338.051 123.803 cv
338.051 122.707 338.368 121.687 338.909 120.82 cv
337.607 119.786 336.769 118.191 336.769 116.399 cv
cp
.0980392 .564706 .160784 rgb
f
498.309 101.827 mo
509.009 101.827 li
511.496 101.827 513.52 103.851 513.52 106.338 cv
513.52 108.365 511.871 110.013 509.846 110.013 cv
508.189 110.013 506.841 108.665 506.841 107.008 cv
506.841 105.647 507.949 104.539 509.31 104.539 cv
510.435 104.539 511.35 105.455 511.35 106.58 cv
511.35 107.516 510.589 108.277 509.652 108.277 cv
509.472 108.277 509.327 108.131 509.327 107.951 cv
509.327 107.771 509.472 107.625 509.652 107.625 cv
510.229 107.625 510.698 107.157 510.698 106.58 cv
510.698 105.814 510.076 105.191 509.31 105.191 cv
508.308 105.191 507.493 106.006 507.493 107.008 cv
507.493 108.306 508.548 109.361 509.846 109.361 cv
511.512 109.361 512.868 108.005 512.868 106.338 cv
512.868 104.21 511.137 102.479 509.009 102.479 cv
498.309 102.479 li
498.128 102.479 497.983 102.333 497.983 102.153 cv
497.983 101.973 498.128 101.827 498.309 101.827 cv
cp
0 0 0 rgb
f
510.316 110.788 mo
509.651 110.788 li
509.651 108.937 li
510.316 108.937 li
510.316 110.788 li
cp
f
510.322 110.723 mo
510.73 111.252 li
509.238 111.252 li
509.646 110.723 li
510.322 110.723 li
cp
f
509.973 111.104 mo
510.88 111.104 511.702 111.678 512.313 112.607 cv
507.632 112.607 li
508.243 111.678 509.066 111.104 509.973 111.104 cv
cp
f
511.099 117.617 mo
508.847 117.617 li
508.125 112.607 li
511.82 112.607 li
511.099 117.617 li
cp
f
510.939 117.617 mo
509.006 117.617 li
508.387 112.607 li
511.558 112.607 li
510.939 117.617 li
cp
1 .682353 .172549 rgb
f
509.973 118.311 mo
509.445 118.311 508.967 117.995 508.612 117.482 cv
511.334 117.482 li
510.978 117.995 510.5 118.311 509.973 118.311 cv
cp
0 0 0 rgb
f
510.075 117.616 mo
509.871 117.616 li
509.871 112.314 li
510.075 112.314 li
510.075 117.616 li
cp
f
502.59 152.905 mo
362.86 152.905 li
362.86 81.2515 li
502.59 81.2515 li
502.59 152.905 li
cp
.917647 .87451 .815686 rgb
f
362.413 143.028 mo
503.037 143.028 li
503.736 143.028 504.303 143.595 504.303 144.294 cv
504.303 152.905 li
361.147 152.905 li
361.147 144.294 li
361.147 143.595 361.714 143.028 362.413 143.028 cv
cp
.580392 .352941 .184314 rgb
f
497.682 47.1621 mo
505.558 77.6855 li
359.892 77.6855 li
367.769 47.1621 li
497.682 47.1621 li
cp
.596078 .752941 0 rgb
f
508.093 81.7829 mo
357.357 81.7829 li
357.357 77.4036 li
508.093 77.4036 li
508.093 81.7829 li
cp
.513726 .627451 .0196078 rgb
f
357.639 141.178 mo
357.639 83.0968 li
360.436 83.0968 li
360.436 141.336 li
360.406 141.621 li
360.308 142.092 359.357 146.243 356.14 147.248 cv
355.306 144.579 li
356.641 144.161 357.422 142.05 357.639 141.178 cv
cp
.694118 .694118 .698039 rgb
f
512.255 81.6765 mo
512.255 83.2452 510.984 84.517 509.415 84.517 cv
356.669 84.517 li
355.101 84.517 353.829 83.2452 353.829 81.6765 cv
353.829 81.0446 li
512.255 81.0446 li
512.255 81.6765 li
cp
.764706 .772549 .784314 rgb
f
480.833 93.7488 mo
481.034 93.7488 li
486.53 93.7488 490.986 98.2043 490.986 103.7 cv
490.986 139.911 li
470.882 139.911 li
470.882 103.7 li
470.882 98.2043 475.337 93.7488 480.833 93.7488 cv
cp
.4 .8 .8 rgb
f
471.705 103.701 mo
471.705 98.6674 475.8 94.5725 480.833 94.5725 cv
481.034 94.5725 li
486.067 94.5725 490.162 98.6674 490.162 103.701 cv
490.162 139.088 li
471.705 139.088 li
471.705 103.701 li
cp
470.058 103.701 mo
470.058 140.735 li
491.81 140.735 li
491.81 103.701 li
491.81 97.759 486.976 92.9251 481.034 92.9251 cv
480.833 92.9251 li
474.892 92.9251 470.058 97.759 470.058 103.701 cv
cp
.490196 .278431 .105882 rgb
f
481.369 139.909 mo
480.499 139.909 li
480.499 103.688 li
481.369 103.688 li
481.369 139.909 li
cp
f
490.977 104.408 mo
470.891 104.408 li
470.891 103.635 li
490.977 103.635 li
490.977 104.408 li
cp
f
490.977 116.208 mo
470.891 116.208 li
470.891 115.436 li
490.977 115.436 li
490.977 116.208 li
cp
f
490.977 128.009 mo
470.891 128.009 li
470.891 127.236 li
490.977 127.236 li
490.977 128.009 li
cp
f
346.245 152.445 mo
519.206 152.445 li
520.867 152.445 522.214 153.377 522.214 154.527 cv
522.214 154.548 li
343.236 154.548 li
343.236 154.527 li
343.236 153.377 344.583 152.445 346.245 152.445 cv
cp
.0980392 .564706 .160784 rgb
f
397.16 152.445 mo
375.67 152.445 li
375.67 110.473 li
397.16 110.473 li
397.16 152.445 li
cp
.580392 .352941 .184314 rgb
f
395.767 152.445 mo
377.063 152.445 li
377.063 111.701 li
395.767 111.701 li
395.767 152.445 li
cp
.317647 .219608 .145098 rgb
f
386.355 114.985 mo
386.475 114.985 li
389.781 114.985 392.461 117.664 392.461 120.97 cv
392.461 142.749 li
380.369 142.749 li
380.369 120.97 li
380.369 117.664 383.049 114.985 386.355 114.985 cv
cp
.4 .8 .8 rgb
f
394.557 121.481 mo
386.98 121.481 li
386.98 144.014 li
385.85 144.014 li
385.85 121.481 li
378.273 121.481 li
378.273 120.465 li
394.557 120.465 li
394.557 121.481 li
cp
.317647 .219608 .145098 rgb
f
394.479 133.363 mo
393.717 133.363 li
393.717 129.051 li
394.479 129.051 li
394.479 133.363 li
cp
.682353 .686275 .698039 rgb
f
449.221 93.7488 mo
449.422 93.7488 li
454.918 93.7488 459.373 98.2043 459.373 103.7 cv
459.373 139.911 li
439.269 139.911 li
439.269 103.7 li
439.269 98.2043 443.724 93.7488 449.221 93.7488 cv
cp
.4 .8 .8 rgb
f
440.093 103.701 mo
440.093 98.6674 444.187 94.5725 449.221 94.5725 cv
449.421 94.5725 li
454.455 94.5725 458.55 98.6674 458.55 103.701 cv
458.55 139.088 li
440.093 139.088 li
440.093 103.701 li
cp
438.445 103.701 mo
438.445 140.735 li
460.197 140.735 li
460.197 103.701 li
460.197 97.759 455.363 92.9251 449.421 92.9251 cv
449.221 92.9251 li
443.279 92.9251 438.445 97.759 438.445 103.701 cv
cp
.490196 .278431 .105882 rgb
f
449.756 139.909 mo
448.886 139.909 li
448.886 103.688 li
449.756 103.688 li
449.756 139.909 li
cp
f
459.364 104.408 mo
439.278 104.408 li
439.278 103.635 li
459.364 103.635 li
459.364 104.408 li
cp
f
459.364 116.208 mo
439.278 116.208 li
439.278 115.436 li
459.364 115.436 li
459.364 116.208 li
cp
f
459.364 128.009 mo
439.278 128.009 li
439.278 127.236 li
459.364 127.236 li
459.364 128.009 li
cp
f
417.608 93.7488 mo
417.809 93.7488 li
423.305 93.7488 427.761 98.2043 427.761 103.7 cv
427.761 139.911 li
407.657 139.911 li
407.657 103.7 li
407.657 98.2043 412.112 93.7488 417.608 93.7488 cv
cp
.4 .8 .8 rgb
f
408.48 103.701 mo
408.48 98.6674 412.575 94.5725 417.608 94.5725 cv
417.809 94.5725 li
422.842 94.5725 426.937 98.6674 426.937 103.701 cv
426.937 139.088 li
408.48 139.088 li
408.48 103.701 li
cp
406.833 103.701 mo
406.833 140.735 li
428.585 140.735 li
428.585 103.701 li
428.585 97.759 423.751 92.9251 417.809 92.9251 cv
417.608 92.9251 li
411.666 92.9251 406.833 97.759 406.833 103.701 cv
cp
.490196 .278431 .105882 rgb
f
418.143 139.909 mo
417.274 139.909 li
417.274 103.688 li
418.143 103.688 li
418.143 139.909 li
cp
f
427.752 104.408 mo
407.665 104.408 li
407.665 103.635 li
427.752 103.635 li
427.752 104.408 li
cp
f
427.752 116.208 mo
407.665 116.208 li
407.665 115.436 li
427.752 115.436 li
427.752 116.208 li
cp
f
427.752 128.009 mo
407.665 128.009 li
407.665 127.236 li
427.752 127.236 li
427.752 128.009 li
cp
f
480.934 91.0407 mo
488.402 91.0407 494.457 96.0087 494.457 102.137 cv
484.49 102.137 473.792 102.137 467.41 102.137 cv
467.41 96.0087 473.465 91.0407 480.934 91.0407 cv
cp
.513726 .627451 .0196078 rgb
f
480.934 91.0407 mo
485.492 91.0407 489.187 96.0087 489.187 102.137 cv
483.104 102.137 476.575 102.137 472.68 102.137 cv
472.68 96.0087 476.375 91.0407 480.934 91.0407 cv
cp
.596078 .752941 0 rgb
f
480.934 91.0407 mo
482.701 91.0407 484.134 96.0087 484.134 102.137 cv
481.775 102.137 479.244 102.137 477.734 102.137 cv
477.734 96.0087 479.166 91.0407 480.934 91.0407 cv
cp
.513726 .627451 .0196078 rgb
f
449.321 91.0407 mo
456.79 91.0407 462.844 96.0087 462.844 102.137 cv
452.878 102.137 442.179 102.137 435.798 102.137 cv
435.798 96.0087 441.852 91.0407 449.321 91.0407 cv
cp
f
449.321 91.0407 mo
453.879 91.0407 457.575 96.0087 457.575 102.137 cv
451.492 102.137 444.962 102.137 441.068 102.137 cv
441.068 96.0087 444.763 91.0407 449.321 91.0407 cv
cp
.596078 .752941 0 rgb
f
449.321 91.0407 mo
451.089 91.0407 452.521 96.0087 452.521 102.137 cv
450.163 102.137 447.631 102.137 446.121 102.137 cv
446.121 96.0087 447.554 91.0407 449.321 91.0407 cv
cp
.513726 .627451 .0196078 rgb
f
417.708 91.0407 mo
425.177 91.0407 431.232 96.0087 431.232 102.137 cv
421.265 102.137 410.566 102.137 404.185 102.137 cv
404.185 96.0087 410.24 91.0407 417.708 91.0407 cv
cp
f
417.708 91.0407 mo
422.267 91.0407 425.962 96.0087 425.962 102.137 cv
419.879 102.137 413.35 102.137 409.455 102.137 cv
409.455 96.0087 413.15 91.0407 417.708 91.0407 cv
cp
.596078 .752941 0 rgb
f
417.708 91.0407 mo
419.476 91.0407 420.909 96.0087 420.909 102.137 cv
418.55 102.137 416.018 102.137 414.509 102.137 cv
414.509 96.0087 415.941 91.0407 417.708 91.0407 cv
cp
.513726 .627451 .0196078 rgb
f
399.922 117.317 mo
399.353 117.317 li
399.353 115.732 li
399.922 115.732 li
399.922 117.317 li
cp
0 0 0 rgb
f
399.927 117.261 mo
400.276 117.714 li
398.999 117.714 li
399.348 117.261 li
399.927 117.261 li
cp
f
399.628 117.588 mo
400.404 117.588 401.108 118.078 401.631 118.874 cv
397.625 118.874 li
398.148 118.078 398.852 117.588 399.628 117.588 cv
cp
f
400.592 123.162 mo
398.664 123.162 li
398.047 118.874 li
401.209 118.874 li
400.592 123.162 li
cp
f
400.455 123.162 mo
398.801 123.162 li
398.271 118.874 li
400.985 118.874 li
400.455 123.162 li
cp
1 .682353 .172549 rgb
f
399.628 123.756 mo
399.176 123.756 398.767 123.485 398.463 123.047 cv
400.793 123.047 li
400.489 123.485 400.079 123.756 399.628 123.756 cv
cp
0 0 0 rgb
f
399.715 123.161 mo
399.541 123.161 li
399.541 118.623 li
399.715 118.623 li
399.715 123.161 li
cp
f
373.496 117.317 mo
372.927 117.317 li
372.927 115.732 li
373.496 115.732 li
373.496 117.317 li
cp
f
373.501 117.261 mo
373.85 117.714 li
372.573 117.714 li
372.922 117.261 li
373.501 117.261 li
cp
f
373.202 117.588 mo
373.979 117.588 374.682 118.078 375.206 118.874 cv
371.199 118.874 li
371.722 118.078 372.426 117.588 373.202 117.588 cv
cp
f
374.166 123.162 mo
372.238 123.162 li
371.621 118.874 li
374.783 118.874 li
374.166 123.162 li
cp
f
374.029 123.162 mo
372.375 123.162 li
371.845 118.874 li
374.559 118.874 li
374.029 123.162 li
cp
1 .682353 .172549 rgb
f
373.202 123.756 mo
372.751 123.756 372.341 123.485 372.037 123.047 cv
374.367 123.047 li
374.063 123.485 373.654 123.756 373.202 123.756 cv
cp
0 0 0 rgb
f
373.289 123.161 mo
373.115 123.161 li
373.115 118.623 li
373.289 118.623 li
373.289 123.161 li
cp
f
373.914 108.126 mo
375.352 106.957 li
397.478 106.957 li
398.916 108.126 li
398.916 108.126 400.408 109.549 400.724 111.701 cv
401.018 113.695 400.967 116.444 400.967 116.444 cv
371.863 116.444 li
371.863 116.444 371.812 113.695 372.106 111.701 cv
372.422 109.549 373.914 108.126 373.914 108.126 cv
cp
.596078 .752941 0 rgb
f
388.117 116.444 mo
384.672 116.444 li
384.672 106.957 li
388.117 106.957 li
388.117 116.444 li
cp
.513726 .627451 .0196078 rgb
f
398.916 108.126 mo
398.916 108.126 400.408 109.549 400.724 111.701 cv
401.018 113.695 400.967 116.444 400.967 116.444 cv
397.522 116.444 li
397.522 109.015 394.851 106.957 394.851 106.957 cv
397.478 106.957 li
398.916 108.126 li
cp
f
394.664 116.444 mo
393.77 116.444 392.538 116.444 391.219 116.444 cv
391.152 109.369 389.971 106.957 389.971 106.957 cv
392.876 106.957 li
392.876 106.957 394.72 108.306 394.664 116.444 cv
cp
f
373.914 108.126 mo
375.352 106.957 li
377.979 106.957 li
377.979 106.957 375.308 109.015 375.308 116.444 cv
371.863 116.444 li
371.863 116.444 371.812 113.695 372.106 111.701 cv
372.422 109.549 373.914 108.126 373.914 108.126 cv
cp
f
380.072 106.957 mo
382.977 106.957 li
382.977 106.957 381.795 109.369 381.728 116.444 cv
380.41 116.444 379.178 116.444 378.283 116.444 cv
378.228 108.306 380.072 106.957 380.072 106.957 cv
cp
f
373.639 97.9495 mo
377.37 97.9495 li
379.606 97.0224 382.83 96.4404 386.415 96.4404 cv
390 96.4404 393.224 97.0224 395.46 97.9495 cv
399.191 97.9495 li
399.802 97.9495 400.298 98.4453 400.298 99.0568 cv
400.298 103.039 li
400.298 103.65 399.802 104.146 399.191 104.146 cv
395.46 104.146 li
393.224 105.073 390 105.655 386.415 105.655 cv
382.83 105.655 379.606 105.073 377.37 104.146 cv
373.639 104.146 li
373.028 104.146 372.532 103.65 372.532 103.039 cv
372.532 99.0568 li
372.532 98.4453 373.028 97.9495 373.639 97.9495 cv
cp
1 .364706 .333333 rgb
f
373.639 98.6632 mo
377.37 98.6632 li
377.513 98.6632 li
377.644 98.6088 li
379.873 97.6843 383.07 97.1541 386.415 97.1541 cv
389.76 97.1541 392.957 97.6843 395.186 98.6088 cv
395.318 98.6632 li
395.46 98.6632 li
399.191 98.6632 li
399.408 98.6632 399.584 98.8397 399.584 99.0568 cv
399.584 103.039 li
399.584 103.256 399.408 103.432 399.191 103.432 cv
395.46 103.432 li
395.318 103.432 li
395.186 103.487 li
392.957 104.411 389.76 104.941 386.415 104.941 cv
383.07 104.941 379.873 104.411 377.644 103.487 cv
377.513 103.432 li
377.37 103.432 li
373.639 103.432 li
373.422 103.432 373.246 103.256 373.246 103.039 cv
373.246 99.0568 li
373.246 98.8397 373.422 98.6632 373.639 98.6632 cv
cp
1 1 1 rgb
f
378.104 101.317 mo
378.104 101.099 377.937 101.018 377.692 101.018 cv
377.445 101.018 li
377.445 101.603 li
377.651 101.603 li
377.916 101.603 378.104 101.553 378.104 101.317 cv
cp
377.445 100.178 mo
377.445 100.679 li
377.655 100.679 li
377.889 100.679 378.012 100.598 378.012 100.417 cv
378.012 100.237 377.882 100.178 377.61 100.178 cv
377.445 100.178 li
cp
378.685 101.345 mo
378.685 101.837 378.245 101.974 377.648 101.974 cv
376.883 101.974 li
376.883 99.8164 li
377.556 99.8164 li
378.193 99.8164 378.585 99.9629 378.585 100.367 cv
378.585 100.642 378.369 100.785 378.149 100.831 cv
378.413 100.878 378.685 100.996 378.685 101.345 cv
cp
.317647 .219608 .145098 rgb
f
379.907 101.519 mo
379.907 101.224 li
379.773 101.224 li
379.525 101.224 379.405 101.301 379.405 101.466 cv
379.405 101.597 379.484 101.675 379.618 101.675 cv
379.742 101.675 379.842 101.616 379.907 101.519 cv
cp
380.563 101.697 mo
380.449 102.017 li
380.236 102.001 380.096 101.942 380.01 101.781 cv
379.88 101.961 379.677 102.026 379.461 102.026 cv
379.097 102.026 378.866 101.812 378.866 101.51 cv
378.866 101.149 379.169 100.953 379.722 100.953 cv
379.907 100.953 li
379.907 100.881 li
379.907 100.685 379.821 100.626 379.598 100.626 cv
379.481 100.626 379.303 100.657 379.121 100.713 cv
378.997 100.389 li
379.228 100.312 379.478 100.268 379.684 100.268 cv
380.213 100.268 380.439 100.47 380.439 100.853 cv
380.439 101.494 li
380.439 101.622 380.477 101.668 380.563 101.697 cv
cp
f
382.042 100.296 mo
381.956 100.772 li
381.791 100.75 li
381.568 100.75 381.472 100.9 381.413 101.149 cv
381.413 101.974 li
380.871 101.974 li
380.871 100.321 li
381.345 100.321 li
381.39 100.638 li
381.472 100.411 381.65 100.274 381.859 100.274 cv
382.042 100.296 li
cp
f
383.394 101.149 mo
383.394 100.729 383.271 100.629 383.102 100.629 cv
382.972 100.629 382.868 100.701 382.789 100.822 cv
382.789 101.507 li
382.858 101.609 382.958 101.668 383.078 101.668 cv
383.264 101.668 383.394 101.535 383.394 101.149 cv
cp
383.957 101.149 mo
383.957 101.659 383.686 102.026 383.232 102.026 cv
383.03 102.026 382.865 101.949 382.755 101.815 cv
382.728 101.974 li
382.247 101.974 li
382.247 99.6641 li
382.789 99.6108 li
382.789 100.489 li
382.896 100.355 383.081 100.268 383.271 100.268 cv
383.72 100.268 383.957 100.595 383.957 101.149 cv
cp
f
385.354 100.975 mo
385.35 100.75 385.274 100.595 385.058 100.595 cv
384.876 100.595 384.773 100.697 384.746 100.996 cv
385.354 100.996 li
385.354 100.975 li
cp
385.875 101.292 mo
384.749 101.292 li
384.783 101.588 384.938 101.668 385.161 101.668 cv
385.309 101.668 385.439 101.622 385.597 101.522 cv
385.82 101.796 li
385.639 101.927 385.405 102.026 385.109 102.026 cv
384.502 102.026 384.193 101.672 384.193 101.155 cv
384.193 100.66 384.491 100.268 385.044 100.268 cv
385.566 100.268 385.886 100.579 385.886 101.114 cv
385.875 101.292 li
cp
f
387.368 100.296 mo
387.282 100.772 li
387.117 100.75 li
386.895 100.75 386.798 100.9 386.739 101.149 cv
386.739 101.974 li
386.197 101.974 li
386.197 100.321 li
386.671 100.321 li
386.716 100.638 li
386.798 100.411 386.977 100.274 387.186 100.274 cv
387.368 100.296 li
cp
f
389.987 100.041 mo
389.727 100.317 li
389.562 100.196 389.397 100.137 389.205 100.137 cv
389.009 100.137 388.886 100.212 388.886 100.349 cv
388.886 100.486 388.975 100.542 389.346 100.647 cv
389.795 100.778 390.053 100.946 390.053 101.345 cv
390.053 101.747 389.702 102.026 389.108 102.026 cv
388.696 102.026 388.401 101.89 388.206 101.718 cv
388.49 101.435 li
388.666 101.569 388.854 101.647 389.092 101.647 cv
389.325 101.647 389.469 101.547 389.469 101.382 cv
389.469 101.224 389.38 101.152 389.033 101.055 cv
388.501 100.906 388.306 100.707 388.306 100.386 cv
388.306 100.006 388.669 99.7637 389.164 99.7637 cv
389.527 99.7637 389.778 99.8599 389.987 100.041 cv
cp
f
391.923 100.766 mo
391.923 101.974 li
391.381 101.974 li
391.381 100.85 li
391.381 100.676 391.312 100.629 391.209 100.629 cv
391.089 100.629 390.989 100.707 390.893 100.841 cv
390.893 101.974 li
390.351 101.974 li
390.351 99.6641 li
390.893 99.6143 li
390.893 100.495 li
391.041 100.346 391.205 100.268 391.418 100.268 cv
391.734 100.268 391.923 100.452 391.923 100.766 cv
cp
f
392.791 101.146 mo
392.791 101.513 392.901 101.666 393.121 101.666 cv
393.341 101.666 393.45 101.507 393.45 101.149 cv
393.45 100.781 393.341 100.629 393.121 100.629 cv
392.901 100.629 392.791 100.788 392.791 101.146 cv
cp
394.014 101.149 mo
394.014 101.678 393.677 102.026 393.121 102.026 cv
392.568 102.026 392.229 101.703 392.229 101.146 cv
392.229 100.616 392.564 100.268 393.121 100.268 cv
393.677 100.268 394.014 100.592 394.014 101.149 cv
cp
f
395.482 101.149 mo
395.482 100.738 395.373 100.629 395.184 100.629 cv
395.067 100.629 394.957 100.701 394.878 100.822 cv
394.878 101.519 li
394.954 101.619 395.043 101.666 395.156 101.666 cv
395.359 101.666 395.482 101.519 395.482 101.149 cv
cp
396.046 101.143 mo
396.046 101.653 395.771 102.026 395.321 102.026 cv
395.143 102.026 394.991 101.971 394.878 101.852 cv
394.878 102.612 li
394.336 102.665 li
394.336 100.321 li
394.813 100.321 li
394.841 100.504 li
394.991 100.333 395.188 100.268 395.355 100.268 cv
395.836 100.268 396.046 100.607 396.046 101.143 cv
cp
f
291.624 415.478 mo
287.454 415.478 283.461 415.357 279.775 415.137 cv
289.768 405.086 li
289.438 404.772 li
290.161 404.764 290.89 404.76 291.624 404.76 cv
294.217 404.76 296.739 404.807 299.163 404.895 cv
295.211 408.925 li
301.671 415.235 li
298.497 415.393 295.124 415.478 291.624 415.478 cv
274.067 414.693 mo
270.736 414.369 267.787 413.955 265.351 413.473 cv
265.351 410.044 li
257.944 410.044 li
258.055 408.759 261.01 407.583 265.853 406.668 cv
274.067 414.693 li
313.826 414.149 mo
304.229 405.148 li
311.024 405.585 316.721 406.364 320.472 407.351 cv
321.894 408.599 323.323 409.842 324.761 411.087 cv
323.371 412.299 319.417 413.369 313.826 414.149 cv
.678431 .666667 .627451 rgb
f
324.761 411.087 mo
323.323 409.842 321.894 408.599 320.472 407.351 cv
323.542 408.159 325.309 409.106 325.309 410.119 cv
325.309 410.449 325.121 410.773 324.761 411.087 cv
.741176 .741176 .741176 rgb
f
265.351 413.473 mo
260.715 412.555 257.94 411.388 257.94 410.119 cv
257.94 410.094 257.941 410.069 257.944 410.044 cv
265.351 410.044 li
265.351 413.473 li
f
301.671 415.235 mo
295.211 408.925 li
299.163 404.895 li
300.907 404.959 302.6 405.044 304.229 405.148 cv
313.826 414.149 li
310.337 414.636 306.209 415.01 301.671 415.235 cv
.576471 .560784 .509804 rgb
f
279.775 415.137 mo
277.776 415.017 275.865 414.868 274.067 414.693 cv
265.853 406.668 li
271.593 405.585 279.985 404.868 289.438 404.772 cv
289.768 405.086 li
279.775 415.137 li
f
362.009 354.74 mo
221.24 354.74 li
212.137 354.74 203.731 351.755 196.949 346.71 cv
186.965 339.284 180.497 327.396 180.497 313.998 cv
180.497 209.699 li
180.497 196.792 186.499 185.287 195.864 177.822 cv
202.825 172.273 211.645 168.956 221.24 168.956 cv
362.009 168.956 li
373.26 168.956 383.446 173.517 390.819 180.89 cv
398.191 188.263 402.752 198.448 402.752 209.699 cv
402.752 313.998 li
402.752 327.278 396.398 339.074 386.564 346.512 cv
379.736 351.677 371.23 354.74 362.009 354.74 cv
cp
1 .0196078 .313726 rgb
f
319.815 352.021 mo
291.624 409.337 li
263.434 352.021 li
319.815 352.021 li
cp
f
233.179 300.809 mo
233.179 315.658 227.044 319.303 219.475 319.303 cv
211.906 319.303 205.77 315.658 205.77 300.809 cv
205.77 285.96 211.906 265.529 219.475 265.529 cv
227.044 265.529 233.179 285.96 233.179 300.809 cv
cp
.027451 .447059 .0666667 rgb
f
222.703 336.133 mo
216.246 336.133 li
218.618 297.719 li
220.331 297.719 li
222.703 336.133 li
cp
.4 .239216 .0784314 rgb
f
375.389 305.201 mo
375.389 318.204 370.016 321.396 363.388 321.396 cv
356.76 321.396 351.387 318.204 351.387 305.201 cv
351.387 292.198 356.76 274.308 363.388 274.308 cv
370.016 274.308 375.389 292.198 375.389 305.201 cv
cp
.0980392 .564706 .160784 rgb
f
366.215 336.133 mo
360.561 336.133 li
362.638 302.496 li
364.138 302.496 li
366.215 336.133 li
cp
.529412 .34902 .192157 rgb
f
361.671 247.064 mo
221.578 247.064 li
221.578 210.653 li
361.671 210.653 li
361.671 247.064 li
cp
.682353 .909804 .988235 rgb
f
228.692 214.556 mo
228.692 216.211 227.35 217.553 225.695 217.553 cv
224.04 217.553 222.698 216.211 222.698 214.556 cv
222.698 212.901 224.04 211.559 225.695 211.559 cv
227.35 211.559 228.692 212.901 228.692 214.556 cv
cp
.85098 .968627 1 rgb
f
227.624 221.417 mo
227.624 222.482 226.76 223.346 225.695 223.346 cv
224.63 223.346 223.766 222.482 223.766 221.417 cv
223.766 220.352 224.63 219.488 225.695 219.488 cv
226.76 219.488 227.624 220.352 227.624 221.417 cv
cp
f
228.692 228.278 mo
228.692 229.933 227.35 231.275 225.695 231.275 cv
224.04 231.275 222.698 229.933 222.698 228.278 cv
222.698 226.623 224.04 225.281 225.695 225.281 cv
227.35 225.281 228.692 226.623 228.692 228.278 cv
cp
f
227.624 235.139 mo
227.624 236.204 226.76 237.068 225.695 237.068 cv
224.63 237.068 223.766 236.204 223.766 235.139 cv
223.766 234.074 224.63 233.21 225.695 233.21 cv
226.76 233.21 227.624 234.074 227.624 235.139 cv
cp
f
228.692 242 mo
228.692 243.655 227.35 244.997 225.695 244.997 cv
224.04 244.997 222.698 243.655 222.698 242 cv
222.698 240.345 224.04 239.003 225.695 239.003 cv
227.35 239.003 228.692 240.345 228.692 242 cv
cp
f
234.685 221.377 mo
234.685 223.033 233.344 224.374 231.688 224.374 cv
230.033 224.374 228.692 223.033 228.692 221.377 cv
228.692 219.722 230.033 218.381 231.688 218.381 cv
233.344 218.381 234.685 219.722 234.685 221.377 cv
cp
f
233.617 228.238 mo
233.617 229.304 232.754 230.167 231.688 230.167 cv
230.623 230.167 229.76 229.304 229.76 228.238 cv
229.76 227.173 230.623 226.309 231.688 226.309 cv
232.754 226.309 233.617 227.173 233.617 228.238 cv
cp
f
233.617 214.595 mo
233.617 215.661 232.754 216.524 231.688 216.524 cv
230.623 216.524 229.76 215.661 229.76 214.595 cv
229.76 213.53 230.623 212.666 231.688 212.666 cv
232.754 212.666 233.617 213.53 233.617 214.595 cv
cp
f
234.685 235.1 mo
234.685 236.755 233.344 238.096 231.688 238.096 cv
230.033 238.096 228.692 236.755 228.692 235.1 cv
228.692 233.444 230.033 232.103 231.688 232.103 cv
233.344 232.103 234.685 233.444 234.685 235.1 cv
cp
f
233.617 241.961 mo
233.617 243.026 232.754 243.889 231.688 243.889 cv
230.623 243.889 229.76 243.026 229.76 241.961 cv
229.76 240.895 230.623 240.032 231.688 240.032 cv
232.754 240.032 233.617 240.895 233.617 241.961 cv
cp
f
240.679 214.556 mo
240.679 216.211 239.337 217.553 237.682 217.553 cv
236.027 217.553 234.685 216.211 234.685 214.556 cv
234.685 212.901 236.027 211.559 237.682 211.559 cv
239.337 211.559 240.679 212.901 240.679 214.556 cv
cp
f
239.611 221.417 mo
239.611 222.482 238.747 223.346 237.682 223.346 cv
236.617 223.346 235.753 222.482 235.753 221.417 cv
235.753 220.352 236.617 219.488 237.682 219.488 cv
238.747 219.488 239.611 220.352 239.611 221.417 cv
cp
f
240.679 228.278 mo
240.679 229.933 239.337 231.275 237.682 231.275 cv
236.027 231.275 234.685 229.933 234.685 228.278 cv
234.685 226.623 236.027 225.281 237.682 225.281 cv
239.337 225.281 240.679 226.623 240.679 228.278 cv
cp
f
239.611 235.139 mo
239.611 236.204 238.747 237.068 237.682 237.068 cv
236.617 237.068 235.753 236.204 235.753 235.139 cv
235.753 234.074 236.617 233.21 237.682 233.21 cv
238.747 233.21 239.611 234.074 239.611 235.139 cv
cp
f
240.679 242 mo
240.679 243.655 239.337 244.997 237.682 244.997 cv
236.027 244.997 234.685 243.655 234.685 242 cv
234.685 240.345 236.027 239.003 237.682 239.003 cv
239.337 239.003 240.679 240.345 240.679 242 cv
cp
f
246.672 221.377 mo
246.672 223.033 245.331 224.374 243.676 224.374 cv
242.021 224.374 240.679 223.033 240.679 221.377 cv
240.679 219.722 242.021 218.381 243.676 218.381 cv
245.331 218.381 246.672 219.722 246.672 221.377 cv
cp
f
245.605 228.238 mo
245.605 229.304 244.741 230.167 243.676 230.167 cv
242.61 230.167 241.747 229.304 241.747 228.238 cv
241.747 227.173 242.61 226.309 243.676 226.309 cv
244.741 226.309 245.605 227.173 245.605 228.238 cv
cp
f
245.605 214.595 mo
245.605 215.661 244.741 216.524 243.676 216.524 cv
242.61 216.524 241.747 215.661 241.747 214.595 cv
241.747 213.53 242.61 212.666 243.676 212.666 cv
244.741 212.666 245.605 213.53 245.605 214.595 cv
cp
f
246.672 235.1 mo
246.672 236.755 245.331 238.096 243.676 238.096 cv
242.021 238.096 240.679 236.755 240.679 235.1 cv
240.679 233.444 242.021 232.103 243.676 232.103 cv
245.331 232.103 246.672 233.444 246.672 235.1 cv
cp
f
245.605 241.961 mo
245.605 243.026 244.741 243.889 243.676 243.889 cv
242.61 243.889 241.747 243.026 241.747 241.961 cv
241.747 240.895 242.61 240.032 243.676 240.032 cv
244.741 240.032 245.605 240.895 245.605 241.961 cv
cp
f
252.666 214.556 mo
252.666 216.211 251.324 217.553 249.669 217.553 cv
248.014 217.553 246.672 216.211 246.672 214.556 cv
246.672 212.901 248.014 211.559 249.669 211.559 cv
251.324 211.559 252.666 212.901 252.666 214.556 cv
cp
f
251.598 221.417 mo
251.598 222.482 250.735 223.346 249.669 223.346 cv
248.604 223.346 247.74 222.482 247.74 221.417 cv
247.74 220.352 248.604 219.488 249.669 219.488 cv
250.735 219.488 251.598 220.352 251.598 221.417 cv
cp
f
252.666 228.278 mo
252.666 229.933 251.324 231.275 249.669 231.275 cv
248.014 231.275 246.672 229.933 246.672 228.278 cv
246.672 226.623 248.014 225.281 249.669 225.281 cv
251.324 225.281 252.666 226.623 252.666 228.278 cv
cp
f
251.598 235.139 mo
251.598 236.204 250.735 237.068 249.669 237.068 cv
248.604 237.068 247.74 236.204 247.74 235.139 cv
247.74 234.074 248.604 233.21 249.669 233.21 cv
250.735 233.21 251.598 234.074 251.598 235.139 cv
cp
f
252.666 242 mo
252.666 243.655 251.324 244.997 249.669 244.997 cv
248.014 244.997 246.672 243.655 246.672 242 cv
246.672 240.345 248.014 239.003 249.669 239.003 cv
251.324 239.003 252.666 240.345 252.666 242 cv
cp
f
258.66 221.377 mo
258.66 223.033 257.318 224.374 255.663 224.374 cv
254.008 224.374 252.666 223.033 252.666 221.377 cv
252.666 219.722 254.008 218.381 255.663 218.381 cv
257.318 218.381 258.66 219.722 258.66 221.377 cv
cp
f
257.592 228.238 mo
257.592 229.304 256.728 230.167 255.663 230.167 cv
254.597 230.167 253.734 229.304 253.734 228.238 cv
253.734 227.173 254.597 226.309 255.663 226.309 cv
256.728 226.309 257.592 227.173 257.592 228.238 cv
cp
f
257.592 214.595 mo
257.592 215.661 256.728 216.524 255.663 216.524 cv
254.597 216.524 253.734 215.661 253.734 214.595 cv
253.734 213.53 254.597 212.666 255.663 212.666 cv
256.728 212.666 257.592 213.53 257.592 214.595 cv
cp
f
258.66 235.1 mo
258.66 236.755 257.318 238.096 255.663 238.096 cv
254.008 238.096 252.666 236.755 252.666 235.1 cv
252.666 233.444 254.008 232.103 255.663 232.103 cv
257.318 232.103 258.66 233.444 258.66 235.1 cv
cp
f
257.592 241.961 mo
257.592 243.026 256.728 243.889 255.663 243.889 cv
254.597 243.889 253.734 243.026 253.734 241.961 cv
253.734 240.895 254.597 240.032 255.663 240.032 cv
256.728 240.032 257.592 240.895 257.592 241.961 cv
cp
f
264.653 214.556 mo
264.653 216.211 263.311 217.553 261.656 217.553 cv
260.001 217.553 258.66 216.211 258.66 214.556 cv
258.66 212.901 260.001 211.559 261.656 211.559 cv
263.311 211.559 264.653 212.901 264.653 214.556 cv
cp
f
263.585 221.417 mo
263.585 222.482 262.722 223.346 261.656 223.346 cv
260.591 223.346 259.728 222.482 259.728 221.417 cv
259.728 220.352 260.591 219.488 261.656 219.488 cv
262.722 219.488 263.585 220.352 263.585 221.417 cv
cp
f
264.653 228.278 mo
264.653 229.933 263.311 231.275 261.656 231.275 cv
260.001 231.275 258.66 229.933 258.66 228.278 cv
258.66 226.623 260.001 225.281 261.656 225.281 cv
263.311 225.281 264.653 226.623 264.653 228.278 cv
cp
f
263.585 235.139 mo
263.585 236.204 262.722 237.068 261.656 237.068 cv
260.591 237.068 259.728 236.204 259.728 235.139 cv
259.728 234.074 260.591 233.21 261.656 233.21 cv
262.722 233.21 263.585 234.074 263.585 235.139 cv
cp
f
264.653 242 mo
264.653 243.655 263.311 244.997 261.656 244.997 cv
260.001 244.997 258.66 243.655 258.66 242 cv
258.66 240.345 260.001 239.003 261.656 239.003 cv
263.311 239.003 264.653 240.345 264.653 242 cv
cp
f
270.647 221.377 mo
270.647 223.033 269.305 224.374 267.65 224.374 cv
265.995 224.374 264.653 223.033 264.653 221.377 cv
264.653 219.722 265.995 218.381 267.65 218.381 cv
269.305 218.381 270.647 219.722 270.647 221.377 cv
cp
f
269.579 228.238 mo
269.579 229.304 268.715 230.167 267.65 230.167 cv
266.585 230.167 265.721 229.304 265.721 228.238 cv
265.721 227.173 266.585 226.309 267.65 226.309 cv
268.715 226.309 269.579 227.173 269.579 228.238 cv
cp
f
269.579 214.595 mo
269.579 215.661 268.715 216.524 267.65 216.524 cv
266.585 216.524 265.721 215.661 265.721 214.595 cv
265.721 213.53 266.585 212.666 267.65 212.666 cv
268.715 212.666 269.579 213.53 269.579 214.595 cv
cp
f
270.647 235.1 mo
270.647 236.755 269.305 238.096 267.65 238.096 cv
265.995 238.096 264.653 236.755 264.653 235.1 cv
264.653 233.444 265.995 232.103 267.65 232.103 cv
269.305 232.103 270.647 233.444 270.647 235.1 cv
cp
f
269.579 241.961 mo
269.579 243.026 268.715 243.889 267.65 243.889 cv
266.585 243.889 265.721 243.026 265.721 241.961 cv
265.721 240.895 266.585 240.032 267.65 240.032 cv
268.715 240.032 269.579 240.895 269.579 241.961 cv
cp
f
276.64 214.556 mo
276.64 216.211 275.299 217.553 273.644 217.553 cv
271.989 217.553 270.647 216.211 270.647 214.556 cv
270.647 212.901 271.989 211.559 273.644 211.559 cv
275.299 211.559 276.64 212.901 276.64 214.556 cv
cp
f
275.573 221.417 mo
275.573 222.482 274.709 223.346 273.644 223.346 cv
272.578 223.346 271.715 222.482 271.715 221.417 cv
271.715 220.352 272.578 219.488 273.644 219.488 cv
274.709 219.488 275.573 220.352 275.573 221.417 cv
cp
f
276.64 228.278 mo
276.64 229.933 275.299 231.275 273.644 231.275 cv
271.989 231.275 270.647 229.933 270.647 228.278 cv
270.647 226.623 271.989 225.281 273.644 225.281 cv
275.299 225.281 276.64 226.623 276.64 228.278 cv
cp
f
275.573 235.139 mo
275.573 236.204 274.709 237.068 273.644 237.068 cv
272.578 237.068 271.715 236.204 271.715 235.139 cv
271.715 234.074 272.578 233.21 273.644 233.21 cv
274.709 233.21 275.573 234.074 275.573 235.139 cv
cp
f
276.64 242 mo
276.64 243.655 275.299 244.997 273.644 244.997 cv
271.989 244.997 270.647 243.655 270.647 242 cv
270.647 240.345 271.989 239.003 273.644 239.003 cv
275.299 239.003 276.64 240.345 276.64 242 cv
cp
f
282.634 221.377 mo
282.634 223.033 281.292 224.374 279.637 224.374 cv
277.982 224.374 276.64 223.033 276.64 221.377 cv
276.64 219.722 277.982 218.381 279.637 218.381 cv
281.292 218.381 282.634 219.722 282.634 221.377 cv
cp
f
281.566 228.238 mo
281.566 229.304 280.703 230.167 279.637 230.167 cv
278.572 230.167 277.708 229.304 277.708 228.238 cv
277.708 227.173 278.572 226.309 279.637 226.309 cv
280.703 226.309 281.566 227.173 281.566 228.238 cv
cp
f
281.566 214.595 mo
281.566 215.661 280.703 216.524 279.637 216.524 cv
278.572 216.524 277.708 215.661 277.708 214.595 cv
277.708 213.53 278.572 212.666 279.637 212.666 cv
280.703 212.666 281.566 213.53 281.566 214.595 cv
cp
f
282.634 235.1 mo
282.634 236.755 281.292 238.096 279.637 238.096 cv
277.982 238.096 276.64 236.755 276.64 235.1 cv
276.64 233.444 277.982 232.103 279.637 232.103 cv
281.292 232.103 282.634 233.444 282.634 235.1 cv
cp
f
281.566 241.961 mo
281.566 243.026 280.703 243.889 279.637 243.889 cv
278.572 243.889 277.708 243.026 277.708 241.961 cv
277.708 240.895 278.572 240.032 279.637 240.032 cv
280.703 240.032 281.566 240.895 281.566 241.961 cv
cp
f
288.628 214.556 mo
288.628 216.211 287.286 217.553 285.631 217.553 cv
283.976 217.553 282.634 216.211 282.634 214.556 cv
282.634 212.901 283.976 211.559 285.631 211.559 cv
287.286 211.559 288.628 212.901 288.628 214.556 cv
cp
f
287.56 221.417 mo
287.56 222.482 286.696 223.346 285.631 223.346 cv
284.565 223.346 283.702 222.482 283.702 221.417 cv
283.702 220.352 284.565 219.488 285.631 219.488 cv
286.696 219.488 287.56 220.352 287.56 221.417 cv
cp
f
288.628 228.278 mo
288.628 229.933 287.286 231.275 285.631 231.275 cv
283.976 231.275 282.634 229.933 282.634 228.278 cv
282.634 226.623 283.976 225.281 285.631 225.281 cv
287.286 225.281 288.628 226.623 288.628 228.278 cv
cp
f
287.56 235.139 mo
287.56 236.204 286.696 237.068 285.631 237.068 cv
284.565 237.068 283.702 236.204 283.702 235.139 cv
283.702 234.074 284.565 233.21 285.631 233.21 cv
286.696 233.21 287.56 234.074 287.56 235.139 cv
cp
f
288.628 242 mo
288.628 243.655 287.286 244.997 285.631 244.997 cv
283.976 244.997 282.634 243.655 282.634 242 cv
282.634 240.345 283.976 239.003 285.631 239.003 cv
287.286 239.003 288.628 240.345 288.628 242 cv
cp
f
294.621 221.377 mo
294.621 223.033 293.279 224.374 291.624 224.374 cv
289.969 224.374 288.628 223.033 288.628 221.377 cv
288.628 219.722 289.969 218.381 291.624 218.381 cv
293.279 218.381 294.621 219.722 294.621 221.377 cv
cp
f
293.553 228.238 mo
293.553 229.304 292.69 230.167 291.624 230.167 cv
290.559 230.167 289.696 229.304 289.696 228.238 cv
289.696 227.173 290.559 226.309 291.624 226.309 cv
292.69 226.309 293.553 227.173 293.553 228.238 cv
cp
f
293.553 214.595 mo
293.553 215.661 292.69 216.524 291.624 216.524 cv
290.559 216.524 289.696 215.661 289.696 214.595 cv
289.696 213.53 290.559 212.666 291.624 212.666 cv
292.69 212.666 293.553 213.53 293.553 214.595 cv
cp
f
294.621 235.1 mo
294.621 236.755 293.279 238.096 291.624 238.096 cv
289.969 238.096 288.628 236.755 288.628 235.1 cv
288.628 233.444 289.969 232.103 291.624 232.103 cv
293.279 232.103 294.621 233.444 294.621 235.1 cv
cp
f
293.553 241.961 mo
293.553 243.026 292.69 243.889 291.624 243.889 cv
290.559 243.889 289.696 243.026 289.696 241.961 cv
289.696 240.895 290.559 240.032 291.624 240.032 cv
292.69 240.032 293.553 240.895 293.553 241.961 cv
cp
f
300.615 214.556 mo
300.615 216.211 299.273 217.553 297.618 217.553 cv
295.963 217.553 294.621 216.211 294.621 214.556 cv
294.621 212.901 295.963 211.559 297.618 211.559 cv
299.273 211.559 300.615 212.901 300.615 214.556 cv
cp
f
299.547 221.417 mo
299.547 222.482 298.683 223.346 297.618 223.346 cv
296.553 223.346 295.689 222.482 295.689 221.417 cv
295.689 220.352 296.553 219.488 297.618 219.488 cv
298.683 219.488 299.547 220.352 299.547 221.417 cv
cp
f
300.615 228.278 mo
300.615 229.933 299.273 231.275 297.618 231.275 cv
295.963 231.275 294.621 229.933 294.621 228.278 cv
294.621 226.623 295.963 225.281 297.618 225.281 cv
299.273 225.281 300.615 226.623 300.615 228.278 cv
cp
f
299.547 235.139 mo
299.547 236.204 298.683 237.068 297.618 237.068 cv
296.553 237.068 295.689 236.204 295.689 235.139 cv
295.689 234.074 296.553 233.21 297.618 233.21 cv
298.683 233.21 299.547 234.074 299.547 235.139 cv
cp
f
300.615 242 mo
300.615 243.655 299.273 244.997 297.618 244.997 cv
295.963 244.997 294.621 243.655 294.621 242 cv
294.621 240.345 295.963 239.003 297.618 239.003 cv
299.273 239.003 300.615 240.345 300.615 242 cv
cp
f
306.608 221.377 mo
306.608 223.033 305.267 224.374 303.612 224.374 cv
301.957 224.374 300.615 223.033 300.615 221.377 cv
300.615 219.722 301.957 218.381 303.612 218.381 cv
305.267 218.381 306.608 219.722 306.608 221.377 cv
cp
f
305.54 228.238 mo
305.54 229.304 304.677 230.167 303.612 230.167 cv
302.546 230.167 301.683 229.304 301.683 228.238 cv
301.683 227.173 302.546 226.309 303.612 226.309 cv
304.677 226.309 305.54 227.173 305.54 228.238 cv
cp
f
305.54 214.595 mo
305.54 215.661 304.677 216.524 303.612 216.524 cv
302.546 216.524 301.683 215.661 301.683 214.595 cv
301.683 213.53 302.546 212.666 303.612 212.666 cv
304.677 212.666 305.54 213.53 305.54 214.595 cv
cp
f
306.608 235.1 mo
306.608 236.755 305.267 238.096 303.612 238.096 cv
301.957 238.096 300.615 236.755 300.615 235.1 cv
300.615 233.444 301.957 232.103 303.612 232.103 cv
305.267 232.103 306.608 233.444 306.608 235.1 cv
cp
f
305.54 241.961 mo
305.54 243.026 304.677 243.889 303.612 243.889 cv
302.546 243.889 301.683 243.026 301.683 241.961 cv
301.683 240.895 302.546 240.032 303.612 240.032 cv
304.677 240.032 305.54 240.895 305.54 241.961 cv
cp
f
312.602 214.556 mo
312.602 216.211 311.26 217.553 309.605 217.553 cv
307.95 217.553 306.608 216.211 306.608 214.556 cv
306.608 212.901 307.95 211.559 309.605 211.559 cv
311.26 211.559 312.602 212.901 312.602 214.556 cv
cp
f
311.534 221.417 mo
311.534 222.482 310.671 223.346 309.605 223.346 cv
308.54 223.346 307.676 222.482 307.676 221.417 cv
307.676 220.352 308.54 219.488 309.605 219.488 cv
310.671 219.488 311.534 220.352 311.534 221.417 cv
cp
f
312.602 228.278 mo
312.602 229.933 311.26 231.275 309.605 231.275 cv
307.95 231.275 306.608 229.933 306.608 228.278 cv
306.608 226.623 307.95 225.281 309.605 225.281 cv
311.26 225.281 312.602 226.623 312.602 228.278 cv
cp
f
311.534 235.139 mo
311.534 236.204 310.671 237.068 309.605 237.068 cv
308.54 237.068 307.676 236.204 307.676 235.139 cv
307.676 234.074 308.54 233.21 309.605 233.21 cv
310.671 233.21 311.534 234.074 311.534 235.139 cv
cp
f
312.602 242 mo
312.602 243.655 311.26 244.997 309.605 244.997 cv
307.95 244.997 306.608 243.655 306.608 242 cv
306.608 240.345 307.95 239.003 309.605 239.003 cv
311.26 239.003 312.602 240.345 312.602 242 cv
cp
f
318.596 221.377 mo
318.596 223.033 317.254 224.374 315.599 224.374 cv
313.944 224.374 312.602 223.033 312.602 221.377 cv
312.602 219.722 313.944 218.381 315.599 218.381 cv
317.254 218.381 318.596 219.722 318.596 221.377 cv
cp
f
317.528 228.238 mo
317.528 229.304 316.664 230.167 315.599 230.167 cv
314.533 230.167 313.67 229.304 313.67 228.238 cv
313.67 227.173 314.533 226.309 315.599 226.309 cv
316.664 226.309 317.528 227.173 317.528 228.238 cv
cp
f
317.528 214.595 mo
317.528 215.661 316.664 216.524 315.599 216.524 cv
314.533 216.524 313.67 215.661 313.67 214.595 cv
313.67 213.53 314.533 212.666 315.599 212.666 cv
316.664 212.666 317.528 213.53 317.528 214.595 cv
cp
f
318.596 235.1 mo
318.596 236.755 317.254 238.096 315.599 238.096 cv
313.944 238.096 312.602 236.755 312.602 235.1 cv
312.602 233.444 313.944 232.103 315.599 232.103 cv
317.254 232.103 318.596 233.444 318.596 235.1 cv
cp
f
317.528 241.961 mo
317.528 243.026 316.664 243.889 315.599 243.889 cv
314.533 243.889 313.67 243.026 313.67 241.961 cv
313.67 240.895 314.533 240.032 315.599 240.032 cv
316.664 240.032 317.528 240.895 317.528 241.961 cv
cp
f
324.589 214.556 mo
324.589 216.211 323.247 217.553 321.592 217.553 cv
319.937 217.553 318.596 216.211 318.596 214.556 cv
318.596 212.901 319.937 211.559 321.592 211.559 cv
323.247 211.559 324.589 212.901 324.589 214.556 cv
cp
f
323.521 221.417 mo
323.521 222.482 322.658 223.346 321.592 223.346 cv
320.527 223.346 319.663 222.482 319.663 221.417 cv
319.663 220.352 320.527 219.488 321.592 219.488 cv
322.658 219.488 323.521 220.352 323.521 221.417 cv
cp
f
324.589 228.278 mo
324.589 229.933 323.247 231.275 321.592 231.275 cv
319.937 231.275 318.596 229.933 318.596 228.278 cv
318.596 226.623 319.937 225.281 321.592 225.281 cv
323.247 225.281 324.589 226.623 324.589 228.278 cv
cp
f
323.521 235.139 mo
323.521 236.204 322.658 237.068 321.592 237.068 cv
320.527 237.068 319.663 236.204 319.663 235.139 cv
319.663 234.074 320.527 233.21 321.592 233.21 cv
322.658 233.21 323.521 234.074 323.521 235.139 cv
cp
f
324.589 242 mo
324.589 243.655 323.247 244.997 321.592 244.997 cv
319.937 244.997 318.596 243.655 318.596 242 cv
318.596 240.345 319.937 239.003 321.592 239.003 cv
323.247 239.003 324.589 240.345 324.589 242 cv
cp
f
330.583 221.377 mo
330.583 223.033 329.241 224.374 327.586 224.374 cv
325.931 224.374 324.589 223.033 324.589 221.377 cv
324.589 219.722 325.931 218.381 327.586 218.381 cv
329.241 218.381 330.583 219.722 330.583 221.377 cv
cp
f
329.515 228.238 mo
329.515 229.304 328.651 230.167 327.586 230.167 cv
326.521 230.167 325.657 229.304 325.657 228.238 cv
325.657 227.173 326.521 226.309 327.586 226.309 cv
328.651 226.309 329.515 227.173 329.515 228.238 cv
cp
f
329.515 214.595 mo
329.515 215.661 328.651 216.524 327.586 216.524 cv
326.521 216.524 325.657 215.661 325.657 214.595 cv
325.657 213.53 326.521 212.666 327.586 212.666 cv
328.651 212.666 329.515 213.53 329.515 214.595 cv
cp
f
330.583 235.1 mo
330.583 236.755 329.241 238.096 327.586 238.096 cv
325.931 238.096 324.589 236.755 324.589 235.1 cv
324.589 233.444 325.931 232.103 327.586 232.103 cv
329.241 232.103 330.583 233.444 330.583 235.1 cv
cp
f
329.515 241.961 mo
329.515 243.026 328.651 243.889 327.586 243.889 cv
326.521 243.889 325.657 243.026 325.657 241.961 cv
325.657 240.895 326.521 240.032 327.586 240.032 cv
328.651 240.032 329.515 240.895 329.515 241.961 cv
cp
f
336.576 214.556 mo
336.576 216.211 335.235 217.553 333.58 217.553 cv
331.924 217.553 330.583 216.211 330.583 214.556 cv
330.583 212.901 331.924 211.559 333.58 211.559 cv
335.235 211.559 336.576 212.901 336.576 214.556 cv
cp
f
335.508 221.417 mo
335.508 222.482 334.645 223.346 333.58 223.346 cv
332.514 223.346 331.651 222.482 331.651 221.417 cv
331.651 220.352 332.514 219.488 333.58 219.488 cv
334.645 219.488 335.508 220.352 335.508 221.417 cv
cp
f
336.576 228.278 mo
336.576 229.933 335.235 231.275 333.58 231.275 cv
331.924 231.275 330.583 229.933 330.583 228.278 cv
330.583 226.623 331.924 225.281 333.58 225.281 cv
335.235 225.281 336.576 226.623 336.576 228.278 cv
cp
f
335.508 235.139 mo
335.508 236.204 334.645 237.068 333.58 237.068 cv
332.514 237.068 331.651 236.204 331.651 235.139 cv
331.651 234.074 332.514 233.21 333.58 233.21 cv
334.645 233.21 335.508 234.074 335.508 235.139 cv
cp
f
336.576 242 mo
336.576 243.655 335.235 244.997 333.58 244.997 cv
331.924 244.997 330.583 243.655 330.583 242 cv
330.583 240.345 331.924 239.003 333.58 239.003 cv
335.235 239.003 336.576 240.345 336.576 242 cv
cp
f
342.57 221.377 mo
342.57 223.033 341.228 224.374 339.573 224.374 cv
337.918 224.374 336.576 223.033 336.576 221.377 cv
336.576 219.722 337.918 218.381 339.573 218.381 cv
341.228 218.381 342.57 219.722 342.57 221.377 cv
cp
f
341.502 228.238 mo
341.502 229.304 340.638 230.167 339.573 230.167 cv
338.508 230.167 337.644 229.304 337.644 228.238 cv
337.644 227.173 338.508 226.309 339.573 226.309 cv
340.638 226.309 341.502 227.173 341.502 228.238 cv
cp
f
341.502 214.595 mo
341.502 215.661 340.638 216.524 339.573 216.524 cv
338.508 216.524 337.644 215.661 337.644 214.595 cv
337.644 213.53 338.508 212.666 339.573 212.666 cv
340.638 212.666 341.502 213.53 341.502 214.595 cv
cp
f
342.57 235.1 mo
342.57 236.755 341.228 238.096 339.573 238.096 cv
337.918 238.096 336.576 236.755 336.576 235.1 cv
336.576 233.444 337.918 232.103 339.573 232.103 cv
341.228 232.103 342.57 233.444 342.57 235.1 cv
cp
f
341.502 241.961 mo
341.502 243.026 340.638 243.889 339.573 243.889 cv
338.508 243.889 337.644 243.026 337.644 241.961 cv
337.644 240.895 338.508 240.032 339.573 240.032 cv
340.638 240.032 341.502 240.895 341.502 241.961 cv
cp
f
348.563 214.556 mo
348.563 216.211 347.222 217.553 345.567 217.553 cv
343.912 217.553 342.57 216.211 342.57 214.556 cv
342.57 212.901 343.912 211.559 345.567 211.559 cv
347.222 211.559 348.563 212.901 348.563 214.556 cv
cp
f
347.496 221.417 mo
347.496 222.482 346.632 223.346 345.567 223.346 cv
344.501 223.346 343.638 222.482 343.638 221.417 cv
343.638 220.352 344.501 219.488 345.567 219.488 cv
346.632 219.488 347.496 220.352 347.496 221.417 cv
cp
f
348.563 228.278 mo
348.563 229.933 347.222 231.275 345.567 231.275 cv
343.912 231.275 342.57 229.933 342.57 228.278 cv
342.57 226.623 343.912 225.281 345.567 225.281 cv
347.222 225.281 348.563 226.623 348.563 228.278 cv
cp
f
347.496 235.139 mo
347.496 236.204 346.632 237.068 345.567 237.068 cv
344.501 237.068 343.638 236.204 343.638 235.139 cv
343.638 234.074 344.501 233.21 345.567 233.21 cv
346.632 233.21 347.496 234.074 347.496 235.139 cv
cp
f
348.563 242 mo
348.563 243.655 347.222 244.997 345.567 244.997 cv
343.912 244.997 342.57 243.655 342.57 242 cv
342.57 240.345 343.912 239.003 345.567 239.003 cv
347.222 239.003 348.563 240.345 348.563 242 cv
cp
f
354.557 221.377 mo
354.557 223.033 353.215 224.374 351.56 224.374 cv
349.905 224.374 348.563 223.033 348.563 221.377 cv
348.563 219.722 349.905 218.381 351.56 218.381 cv
353.215 218.381 354.557 219.722 354.557 221.377 cv
cp
f
353.489 228.238 mo
353.489 229.304 352.626 230.167 351.56 230.167 cv
350.495 230.167 349.631 229.304 349.631 228.238 cv
349.631 227.173 350.495 226.309 351.56 226.309 cv
352.626 226.309 353.489 227.173 353.489 228.238 cv
cp
f
353.489 214.595 mo
353.489 215.661 352.626 216.524 351.56 216.524 cv
350.495 216.524 349.631 215.661 349.631 214.595 cv
349.631 213.53 350.495 212.666 351.56 212.666 cv
352.626 212.666 353.489 213.53 353.489 214.595 cv
cp
f
354.557 235.1 mo
354.557 236.755 353.215 238.096 351.56 238.096 cv
349.905 238.096 348.563 236.755 348.563 235.1 cv
348.563 233.444 349.905 232.103 351.56 232.103 cv
353.215 232.103 354.557 233.444 354.557 235.1 cv
cp
f
353.489 241.961 mo
353.489 243.026 352.626 243.889 351.56 243.889 cv
350.495 243.889 349.631 243.026 349.631 241.961 cv
349.631 240.895 350.495 240.032 351.56 240.032 cv
352.626 240.032 353.489 240.895 353.489 241.961 cv
cp
f
360.551 214.556 mo
360.551 216.211 359.209 217.553 357.554 217.553 cv
355.899 217.553 354.557 216.211 354.557 214.556 cv
354.557 212.901 355.899 211.559 357.554 211.559 cv
359.209 211.559 360.551 212.901 360.551 214.556 cv
cp
f
359.483 221.417 mo
359.483 222.482 358.619 223.346 357.554 223.346 cv
356.489 223.346 355.625 222.482 355.625 221.417 cv
355.625 220.352 356.489 219.488 357.554 219.488 cv
358.619 219.488 359.483 220.352 359.483 221.417 cv
cp
f
360.551 228.278 mo
360.551 229.933 359.209 231.275 357.554 231.275 cv
355.899 231.275 354.557 229.933 354.557 228.278 cv
354.557 226.623 355.899 225.281 357.554 225.281 cv
359.209 225.281 360.551 226.623 360.551 228.278 cv
cp
f
359.483 235.139 mo
359.483 236.204 358.619 237.068 357.554 237.068 cv
356.489 237.068 355.625 236.204 355.625 235.139 cv
355.625 234.074 356.489 233.21 357.554 233.21 cv
358.619 233.21 359.483 234.074 359.483 235.139 cv
cp
f
360.551 242 mo
360.551 243.655 359.209 244.997 357.554 244.997 cv
355.899 244.997 354.557 243.655 354.557 242 cv
354.557 240.345 355.899 239.003 357.554 239.003 cv
359.209 239.003 360.551 240.345 360.551 242 cv
cp
f
361.671 336.594 mo
221.578 336.594 li
221.578 264.754 li
361.671 264.754 li
361.671 336.594 li
cp
.407843 .764706 .917647 rgb
f
368.206 245.916 mo
215.043 245.916 li
215.043 265.287 li
368.206 265.287 li
368.206 245.916 li
cp
.2 .431373 .713726 rgb
f
362.283 191.282 mo
220.965 191.282 li
215.043 210.652 li
368.206 210.652 li
362.283 191.282 li
cp
.0666667 .329412 .588235 rgb
f
363.388 336.594 mo
219.861 336.594 li
219.861 327.96 li
219.861 327.259 220.429 326.691 221.13 326.691 cv
362.119 326.691 li
362.82 326.691 363.388 327.259 363.388 327.96 cv
363.388 336.594 li
cp
.141176 .372549 .607843 rgb
f
355.276 253.727 mo
347.506 253.727 339.591 248.428 339.512 248.374 cv
339.213 248.172 li
338.914 248.374 li
338.835 248.428 330.93 253.727 323.153 253.727 cv
315.383 253.727 307.469 248.428 307.39 248.374 cv
307.091 248.172 li
306.792 248.374 li
306.714 248.428 298.808 253.727 291.031 253.727 cv
283.262 253.727 275.349 248.428 275.27 248.374 cv
274.971 248.172 li
274.672 248.374 li
274.593 248.428 266.68 253.727 258.913 253.727 cv
251.145 253.727 243.233 248.428 243.154 248.374 cv
242.855 248.172 li
242.556 248.374 li
242.477 248.428 234.565 253.727 226.799 253.727 cv
222.463 253.727 218.082 252.076 215.043 250.607 cv
215.043 251.804 li
218.144 253.258 222.445 254.792 226.799 254.792 cv
234.12 254.792 241.299 250.452 242.855 249.453 cv
244.411 250.452 251.591 254.792 258.913 254.792 cv
266.235 254.792 273.415 250.452 274.971 249.453 cv
276.528 250.452 283.708 254.792 291.031 254.792 cv
298.355 254.792 305.535 250.452 307.091 249.453 cv
308.648 250.452 315.828 254.792 323.153 254.792 cv
330.476 254.792 337.657 250.452 339.213 249.453 cv
340.769 250.452 347.951 254.792 355.276 254.792 cv
360.21 254.792 365.077 252.823 368.206 251.232 cv
368.206 250.018 li
365.198 251.592 360.209 253.727 355.276 253.727 cv
cp
.407843 .764706 .917647 rgb
f
368.206 258.146 mo
365.198 259.72 360.209 261.855 355.276 261.855 cv
347.506 261.855 339.591 256.556 339.512 256.502 cv
339.213 256.3 li
338.914 256.502 li
338.835 256.556 330.93 261.855 323.153 261.855 cv
315.383 261.855 307.469 256.556 307.39 256.502 cv
307.091 256.3 li
306.792 256.502 li
306.714 256.556 298.808 261.855 291.031 261.855 cv
283.262 261.855 275.349 256.556 275.27 256.502 cv
274.971 256.3 li
274.672 256.502 li
274.593 256.556 266.68 261.855 258.913 261.855 cv
251.145 261.855 243.233 256.556 243.154 256.502 cv
242.855 256.3 li
242.556 256.502 li
242.477 256.556 234.565 261.855 226.799 261.855 cv
222.463 261.855 218.082 260.204 215.043 258.735 cv
215.043 259.932 li
218.144 261.386 222.445 262.92 226.799 262.92 cv
234.12 262.92 241.299 258.58 242.855 257.581 cv
244.411 258.58 251.591 262.92 258.913 262.92 cv
266.235 262.92 273.415 258.58 274.971 257.581 cv
276.528 258.58 283.708 262.92 291.031 262.92 cv
298.355 262.92 305.535 258.58 307.091 257.581 cv
308.648 258.58 315.828 262.92 323.153 262.92 cv
330.476 262.92 337.657 258.58 339.213 257.581 cv
340.769 258.58 347.951 262.92 355.276 262.92 cv
360.21 262.92 365.077 260.951 368.206 259.36 cv
368.206 258.146 li
cp
f
355.276 257.791 mo
347.506 257.791 339.591 252.492 339.512 252.438 cv
339.213 252.236 li
338.914 252.438 li
338.835 252.492 330.93 257.791 323.153 257.791 cv
315.383 257.791 307.469 252.492 307.39 252.438 cv
307.091 252.236 li
306.792 252.438 li
306.714 252.492 298.808 257.791 291.031 257.791 cv
283.262 257.791 275.349 252.492 275.27 252.438 cv
274.971 252.236 li
274.672 252.438 li
274.593 252.492 266.689 257.791 258.913 257.791 cv
251.145 257.791 243.233 252.492 243.154 252.438 cv
242.855 252.236 li
242.556 252.438 li
242.477 252.492 234.565 257.791 226.799 257.791 cv
222.463 257.791 218.082 256.14 215.043 254.671 cv
215.043 255.868 li
218.144 257.322 222.445 258.856 226.799 258.856 cv
234.12 258.856 241.299 254.517 242.855 253.517 cv
244.411 254.517 251.591 258.856 258.913 258.856 cv
266.235 258.856 273.415 254.517 274.971 253.517 cv
276.527 254.517 283.708 258.856 291.031 258.856 cv
298.355 258.856 305.535 254.516 307.091 253.517 cv
308.648 254.516 315.828 258.856 323.153 258.856 cv
330.476 258.856 337.657 254.516 339.213 253.517 cv
340.769 254.516 347.951 258.856 355.276 258.856 cv
360.21 258.856 365.077 256.887 368.206 255.296 cv
368.206 254.082 li
365.198 255.656 360.209 257.791 355.276 257.791 cv
cp
f
381.224 312.029 mo
381.224 322.161 377.037 324.649 371.872 324.649 cv
366.707 324.649 362.52 322.161 362.52 312.029 cv
362.52 301.896 366.707 287.954 371.872 287.954 cv
377.037 287.954 381.224 301.896 381.224 312.029 cv
cp
.027451 .447059 .0666667 rgb
f
374.075 336.133 mo
369.669 336.133 li
371.288 309.92 li
372.457 309.92 li
374.075 336.133 li
cp
.4 .239216 .0784314 rgb
f
228.648 305.201 mo
228.648 318.204 223.276 321.396 216.648 321.396 cv
210.02 321.396 204.647 318.204 204.647 305.201 cv
204.647 292.198 210.02 274.308 216.648 274.308 cv
223.276 274.308 228.648 292.198 228.648 305.201 cv
cp
.0980392 .564706 .160784 rgb
f
219.475 336.133 mo
213.821 336.133 li
215.897 302.496 li
217.398 302.496 li
219.475 336.133 li
cp
.529412 .34902 .192157 rgb
f
381.346 338.241 mo
201.903 338.241 li
201.903 338.22 li
201.903 337.067 203.253 336.132 204.919 336.132 cv
378.33 336.132 li
379.995 336.132 381.346 337.067 381.346 338.22 cv
381.346 338.241 li
cp
.0980392 .564706 .160784 rgb
f
310.484 334.548 mo
307.269 334.548 li
306.074 324.962 li
311.678 324.962 li
310.484 334.548 li
cp
.105882 .109804 .12549 rgb
f
310.484 334.548 mo
307.269 334.548 li
306.074 336.132 li
311.678 336.132 li
310.484 334.548 li
cp
.313726 .309804 .32549 rgb
f
303.149 336.132 mo
280.1 336.132 li
280.1 285.923 li
303.149 285.923 li
303.149 336.132 li
cp
.270588 .666667 .882353 rgb
f
283.382 314.28 mo
282.442 314.28 li
282.442 305.642 li
283.382 305.642 li
283.382 314.28 li
cp
.682353 .686275 .698039 rgb
f
298.813 299.244 mo
298.813 303.403 295.443 306.773 291.284 306.773 cv
287.126 306.773 283.755 303.403 283.755 299.244 cv
283.755 295.086 287.126 291.715 291.284 291.715 cv
295.443 291.715 298.813 295.086 298.813 299.244 cv
cp
.717647 .835294 .886275 rgb
f
270.856 297.719 mo
270.856 308.251 262.318 316.788 251.787 316.788 cv
241.255 316.788 232.718 308.251 232.718 297.719 cv
232.718 287.188 241.255 278.651 251.787 278.651 cv
262.318 278.651 270.856 287.188 270.856 297.719 cv
cp
1 1 1 rgb
f
268.223 297.719 mo
268.223 306.797 260.864 314.156 251.787 314.156 cv
242.709 314.156 235.35 306.797 235.35 297.719 cv
235.35 288.642 242.709 281.283 251.787 281.283 cv
260.864 281.283 268.223 288.642 268.223 297.719 cv
cp
.682353 .909804 .988235 rgb
f
350.531 297.719 mo
350.531 308.251 341.993 316.788 331.462 316.788 cv
320.93 316.788 312.393 308.251 312.393 297.719 cv
312.393 287.188 320.93 278.651 331.462 278.651 cv
341.993 278.651 350.531 287.188 350.531 297.719 cv
cp
1 1 1 rgb
f
347.898 297.719 mo
347.898 306.797 340.539 314.156 331.462 314.156 cv
322.384 314.156 315.025 306.797 315.025 297.719 cv
315.025 288.642 322.384 281.283 331.462 281.283 cv
340.539 281.283 347.898 288.642 347.898 297.719 cv
cp
.682353 .909804 .988235 rgb
f
291.624 281.022 mo
288.979 281.022 286.834 278.878 286.834 276.232 cv
286.834 273.586 288.979 271.442 291.624 271.442 cv
294.27 271.442 296.415 273.586 296.415 276.232 cv
296.415 278.878 294.27 281.022 291.624 281.022 cv
cp
291.624 268.678 mo
287.452 268.678 284.07 272.06 284.07 276.232 cv
284.07 280.404 287.452 283.786 291.624 283.786 cv
295.796 283.786 299.178 280.404 299.178 276.232 cv
299.178 272.06 295.796 268.678 291.624 268.678 cv
cp
.968627 .968627 .972549 rgb
f
291.624 268.678 mo
287.452 268.678 284.07 272.06 284.07 276.232 cv
286.834 276.232 li
286.834 273.586 288.979 271.442 291.624 271.442 cv
294.27 271.442 296.415 273.586 296.415 276.232 cv
299.178 276.232 li
299.178 272.06 295.796 268.678 291.624 268.678 cv
cp
.905882 .2 .141176 rgb
f
292.429 281.057 mo
292.429 281.502 292.068 281.863 291.622 281.863 cv
291.176 281.863 290.815 281.502 290.815 281.057 cv
290.815 280.611 291.176 280.25 291.622 280.25 cv
292.068 280.25 292.429 280.611 292.429 281.057 cv
cp
.968627 .686275 .172549 rgb
f
294.598 281.107 mo
293.503 281.107 289.717 281.107 288.603 281.107 cv
288.603 280.545 289.945 280.089 291.601 280.089 cv
293.256 280.089 294.598 280.545 294.598 281.107 cv
cp
.976471 .792157 .27451 rgb
f
291.87 274.769 mo
291.331 274.769 li
291.331 272.455 li
291.87 272.455 li
291.87 274.769 li
cp
.968627 .686275 .172549 rgb
f
293.95 280.598 mo
289.251 280.598 li
289.461 277.438 li
289.461 276.403 290.413 275.564 291.587 275.564 cv
291.63 275.564 li
292.804 275.564 293.756 276.403 293.756 277.438 cv
293.95 280.598 li
cp
f
292.214 275.831 mo
290.987 275.831 li
290.987 274.692 li
290.987 274.357 291.259 274.085 291.595 274.085 cv
291.607 274.085 li
291.942 274.085 292.214 274.357 292.214 274.692 cv
292.214 275.831 li
cp
.976471 .792157 .27451 rgb
f
352.901 282.66 mo
353.531 282.03 li
360.757 289.257 li
360.775 289.257 li
360.775 328.323 li
359.884 328.323 li
359.884 289.643 li
352.901 282.66 li
cp
.847059 .854902 .862745 rgb
f
361.053 336.132 mo
361.053 324.876 li
361.053 324.48 360.733 324.159 360.337 324.159 cv
360.322 324.159 li
359.927 324.159 359.606 324.48 359.606 324.876 cv
359.606 336.132 li
361.053 336.132 li
cp
f
349.054 281.301 mo
356.138 287.801 li
356.155 287.782 li
357.124 286.726 357.053 285.085 355.998 284.117 cv
352.736 281.124 li
351.681 280.155 350.04 280.226 349.072 281.281 cv
349.054 281.301 li
cp
f
230.348 282.66 mo
229.718 282.03 li
222.492 289.257 li
222.474 289.257 li
222.474 328.323 li
223.365 328.323 li
223.365 289.643 li
230.348 282.66 li
cp
f
222.195 336.132 mo
222.195 324.876 li
222.195 324.48 222.516 324.159 222.912 324.159 cv
222.926 324.159 li
223.322 324.159 223.643 324.48 223.643 324.876 cv
223.643 336.132 li
222.195 336.132 li
cp
f
234.195 281.301 mo
227.111 287.801 li
227.093 287.782 li
226.125 286.726 226.195 285.085 227.251 284.117 cv
230.512 281.124 li
231.568 280.155 233.209 280.226 234.177 281.281 cv
234.195 281.301 li
cp
f
301.408 230.881 mo
302.914 229.816 302.161 225.031 301.348 223.865 cv
300.295 224.658 299.259 226.799 299.32 228.54 cv
298.473 228.158 295.966 227.997 294.408 228.444 cv
296.393 230.475 299.595 232.163 301.408 230.881 cv
cp
.0666667 .329412 .588235 rgb
f
289.173 234.792 mo
289.173 234.792 291.406 233.32 291.801 233.131 cv
292.195 232.942 292.554 233.482 293.159 234.013 cv
293.764 234.544 295.504 236.626 296.987 236.683 cv
298.471 236.74 299.441 237.993 299.441 237.993 cv
295.544 238.675 li
289.544 236.595 li
289.173 234.792 li
cp
f
290.864 242.429 mo
290.304 242.089 288.372 241.433 287.646 242.226 cv
286.814 243.136 284.771 244.809 281.886 245.286 cv
279 245.763 279.448 245.939 281.922 246.268 cv
284.395 246.596 287.594 246.041 289.168 245.146 cv
290.496 244.39 292.252 243.269 290.864 242.429 cv
cp
f
279.363 233.937 mo
279.409 233.375 280.293 233.213 281.302 233.494 cv
282.5 232.894 284.462 232.512 287.374 233.441 cv
289.923 234.254 291.304 236.601 295.023 237.379 cv
297.581 237.915 299.837 237.171 300.937 236.16 cv
302.526 234.7 302.374 232.814 301.193 231.143 cv
300.177 229.705 299.33 228.815 301.065 229.691 cv
302.857 230.596 306.439 234.173 303.485 239.898 cv
300.464 245.749 291.453 246.412 284.967 243.618 cv
281.214 242.002 277.861 237.421 278.692 236.981 cv
279.115 236.757 279.84 236.962 280.369 237.286 cv
280.898 237.611 279.25 235.301 279.363 233.937 cv
cp
.270588 .666667 .882353 rgb
f
286.04 242.335 mo
286.577 242.017 288.466 241.434 289.248 242.257 cv
290.146 243.2 292.308 244.955 295.23 245.545 cv
298.153 246.135 297.717 246.294 295.263 246.527 cv
292.809 246.76 289.567 246.079 287.928 245.122 cv
286.545 244.314 284.709 243.123 286.04 242.335 cv
cp
.0666667 .329412 .588235 rgb
f
286.975 234.033 mo
287.218 235.382 287.111 237.191 285.706 238.506 cv
284.204 239.92 281.909 239.988 280.099 239.845 cv
282.203 239.908 284.931 239.596 285.984 237.634 cv
286.531 236.615 286.537 235.531 286.353 234.583 cv
286.282 234.221 286.425 233.578 286.975 234.033 cv
cp
f
284.106 235.085 mo
283.964 235.091 283.895 234.972 283.953 234.818 cv
284.007 234.674 284.154 234.555 284.29 234.536 cv
284.108 234.48 li
283.869 234.49 283.598 234.706 283.501 234.963 cv
283.405 235.219 283.52 235.419 283.758 235.409 cv
283.978 235.4 284.221 235.212 284.334 234.982 cv
284.106 235.085 li
cp
f
319.811 263.892 mo
301.02 262.723 282.229 262.723 263.438 263.892 cv
259.492 258.328 259.492 252.764 263.438 247.2 cv
282.229 248.369 301.02 248.369 319.811 247.2 cv
323.757 252.764 323.757 258.328 319.811 263.892 cv
cp
.976471 .85098 .541176 rgb
f
273.903 252.638 mo
272.973 253.625 li
272.385 253.192 271.798 252.981 271.113 252.981 cv
270.415 252.981 269.975 253.248 269.975 253.735 cv
269.975 254.224 270.293 254.424 271.614 254.801 cv
273.218 255.267 274.135 255.865 274.135 257.285 cv
274.135 258.717 272.887 259.715 270.77 259.715 cv
269.302 259.715 268.249 259.227 267.552 258.617 cv
268.567 257.607 li
269.191 258.084 269.864 258.361 270.709 258.361 cv
271.541 258.361 272.055 258.007 272.055 257.419 cv
272.055 256.853 271.737 256.598 270.501 256.254 cv
268.604 255.722 267.906 255.012 267.906 253.869 cv
267.906 252.516 269.204 251.65 270.966 251.65 cv
272.263 251.65 273.156 251.994 273.903 252.638 cv
cp
.905882 .2 .141176 rgb
f
280.234 253.137 mo
277.248 253.137 li
277.248 254.979 li
279.854 254.979 li
279.854 256.254 li
277.248 256.254 li
277.248 258.218 li
280.442 258.218 li
280.442 259.526 li
275.241 259.526 li
275.241 251.839 li
280.442 251.839 li
280.234 253.137 li
cp
f
285.364 256.554 mo
284.471 253.159 li
283.578 256.554 li
285.364 256.554 li
cp
285.719 257.873 mo
283.235 257.873 li
282.807 259.526 li
280.726 259.526 li
283.284 251.839 li
285.719 251.839 li
288.277 259.526 li
286.147 259.526 li
285.719 257.873 li
cp
f
293.751 253.137 mo
290.912 253.137 li
290.912 255.178 li
293.384 255.178 li
293.384 256.476 li
290.912 256.476 li
290.912 259.526 li
288.905 259.526 li
288.905 251.839 li
293.959 251.839 li
293.751 253.137 li
cp
f
296.581 255.677 mo
296.581 257.63 297.192 258.384 298.294 258.384 cv
299.444 258.384 300.02 257.63 300.02 255.677 cv
300.02 253.735 299.433 252.981 298.294 252.981 cv
297.168 252.981 296.581 253.735 296.581 255.677 cv
cp
302.125 255.677 mo
302.125 258.195 300.692 259.715 298.294 259.715 cv
295.908 259.715 294.477 258.239 294.477 255.677 cv
294.477 253.17 295.908 251.65 298.294 251.65 cv
300.692 251.65 302.125 253.114 302.125 255.677 cv
cp
f
305.042 255.677 mo
305.042 257.63 305.653 258.384 306.755 258.384 cv
307.905 258.384 308.48 257.63 308.48 255.677 cv
308.48 253.735 307.894 252.981 306.755 252.981 cv
305.629 252.981 305.042 253.735 305.042 255.677 cv
cp
310.586 255.677 mo
310.586 258.195 309.153 259.715 306.755 259.715 cv
304.369 259.715 302.938 258.239 302.938 255.677 cv
302.938 253.17 304.369 251.65 306.755 251.65 cv
309.153 251.65 310.586 253.114 310.586 255.677 cv
cp
f
313.797 253.159 mo
313.797 258.206 li
314.457 258.206 li
315.669 258.206 316.477 257.685 316.477 255.644 cv
316.477 253.58 315.607 253.159 314.433 253.159 cv
313.797 253.159 li
cp
318.557 255.644 mo
318.557 258.738 316.501 259.526 314.335 259.526 cv
311.79 259.526 li
311.79 251.839 li
314.151 251.839 li
316.415 251.839 318.557 252.471 318.557 255.644 cv
cp
f
559.542 286.535 mo
559.542 325.933 527.603 357.872 488.205 357.872 cv
448.807 357.872 416.868 325.933 416.868 286.535 cv
416.868 247.137 448.807 215.198 488.205 215.198 cv
527.603 215.198 559.542 247.137 559.542 286.535 cv
cp
.113725 .286275 .388235 rgb
f
484.277 405.594 mo
479.607 405.503 475.251 405.25 471.436 404.872 cv
480.858 395.662 li
483.216 395.573 485.676 395.526 488.205 395.526 cv
488.519 395.526 488.832 395.527 489.143 395.529 cv
487.863 396.844 li
485.488 399.282 484.296 402.437 484.277 405.594 cv
466.839 402.731 mo
461.763 397.779 li
464.746 397.067 468.833 396.483 473.634 396.088 cv
466.839 402.731 li
.678431 .666667 .627451 rgb
f
488.205 405.633 mo
486.875 405.633 485.564 405.62 484.277 405.594 cv
484.296 402.437 485.488 399.282 487.863 396.844 cv
489.143 395.529 li
506.252 395.607 519.969 397.839 519.969 400.579 cv
519.969 403.37 505.748 405.633 488.205 405.633 cv
.498039 .643137 .219608 rgb
f
471.436 404.872 mo
470.499 404.779 469.594 404.678 468.725 404.571 cv
466.839 402.731 li
473.634 396.088 li
475.897 395.902 478.319 395.758 480.858 395.662 cv
471.436 404.872 li
.741176 .741176 .741176 rgb
f
468.725 404.571 mo
461.25 403.647 456.442 402.202 456.442 400.579 cv
456.442 399.544 458.401 398.58 461.763 397.779 cv
466.839 402.731 li
468.725 404.571 li
.741176 .513725 0 rgb
f
519.065 322.888 mo
488.205 400.579 li
457.345 322.888 li
519.065 322.888 li
cp
.113725 .286275 .388235 rgb
f
546.936 263.192 mo
546.936 264.359 545.99 265.306 544.822 265.306 cv
543.655 265.306 542.709 264.359 542.709 263.192 cv
542.709 262.024 543.655 261.078 544.822 261.078 cv
545.99 261.078 546.936 262.024 546.936 263.192 cv
cp
.968627 .686275 .172549 rgb
f
546.517 267.196 mo
529.688 267.196 li
529.688 266.155 li
546.517 266.155 li
546.517 267.196 li
cp
.4 .196078 .0196078 rgb
f
533.136 268.486 mo
533.136 268.669 532.987 268.818 532.803 268.818 cv
532.62 268.818 532.471 268.669 532.471 268.486 cv
532.471 266.924 li
532.471 266.741 532.62 266.592 532.803 266.592 cv
532.987 266.592 533.136 266.741 533.136 266.924 cv
533.136 268.486 li
cp
f
544.068 268.486 mo
544.068 268.669 543.919 268.818 543.735 268.818 cv
543.552 268.818 543.403 268.669 543.403 268.486 cv
543.403 266.924 li
543.403 266.741 543.552 266.592 543.735 266.592 cv
543.919 266.592 544.068 266.741 544.068 266.924 cv
544.068 268.486 li
cp
f
545.947 276.139 mo
545.947 277.059 545.202 277.804 544.283 277.804 cv
532.256 277.804 li
531.337 277.804 530.591 277.059 530.591 276.139 cv
530.591 269.818 li
530.591 268.898 531.337 268.153 532.256 268.153 cv
544.283 268.153 li
545.202 268.153 545.947 268.898 545.947 269.818 cv
545.947 276.139 li
cp
1 1 1 rgb
f
547.628 266.676 mo
547.628 267.178 547.221 267.586 546.718 267.586 cv
546.216 267.586 545.808 267.178 545.808 266.676 cv
545.808 266.173 546.216 265.765 546.718 265.765 cv
547.221 265.765 547.628 266.173 547.628 266.676 cv
cp
.4 .196078 .0196078 rgb
f
545.158 266.155 mo
544.487 266.155 li
544.264 265.203 li
545.381 265.203 li
545.158 266.155 li
cp
f
444.597 321.517 mo
441.619 321.517 li
442.551 272.873 li
443.666 272.873 li
444.597 321.517 li
cp
.529412 .34902 .192157 rgb
f
428.65 280.087 mo
428.65 282.9 431.21 285.18 434.366 285.18 cv
434.595 285.17 li
434.454 285.508 434.366 285.869 434.366 286.25 cv
434.366 286.735 434.501 287.188 434.722 287.598 cv
433.475 288.284 432.637 289.502 432.637 290.904 cv
432.637 292.941 434.399 294.594 436.636 294.765 cv
437.336 297.533 440.108 299.603 443.426 299.603 cv
447.273 299.603 450.391 296.825 450.391 293.397 cv
450.391 293.075 450.355 292.76 450.302 292.451 cv
451.982 292.22 453.273 290.937 453.273 289.375 cv
453.273 288.933 453.167 288.514 452.982 288.133 cv
454.71 287.347 455.927 285.805 456.085 283.994 cv
457.516 283.354 458.509 282.048 458.509 280.524 cv
458.509 278.865 457.34 277.458 455.7 276.897 cv
455.951 276.466 456.107 275.984 456.107 275.465 cv
456.107 274.866 455.908 274.313 455.58 273.837 cv
456.306 272.858 456.731 271.685 456.731 270.424 cv
456.731 266.997 453.613 264.218 449.767 264.218 cv
449.19 264.218 448.633 264.287 448.097 264.405 cv
446.942 263.646 445.519 263.192 443.973 263.192 cv
442.126 263.192 440.451 263.837 439.205 264.883 cv
438.602 264.447 437.845 264.175 437.008 264.175 cv
435.072 264.175 433.502 265.574 433.502 267.3 cv
433.502 267.762 433.622 268.198 433.824 268.593 cv
431.571 269.276 429.947 271.172 429.947 273.411 cv
429.947 274.4 430.269 275.319 430.816 276.101 cv
429.498 277.034 428.65 278.471 428.65 280.087 cv
cp
.0980392 .564706 .160784 rgb
f
446.871 305.824 mo
446.871 310.587 li
441.027 310.587 li
441.027 315.273 li
435.122 315.273 li
435.122 320.036 li
459.365 320.036 li
459.365 315.35 li
459.365 315.273 li
459.365 310.587 li
459.365 305.824 li
446.871 305.824 li
cp
.788235 .603922 .368627 rgb
f
441.027 315.273 mo
434.843 315.273 li
434.843 314.598 li
441.027 314.598 li
441.027 315.273 li
cp
.4 .196078 .0196078 rgb
f
446.871 310.575 mo
440.687 310.575 li
440.687 309.9 li
446.871 309.9 li
446.871 310.575 li
cp
f
459.365 305.824 mo
446.546 305.824 li
446.546 305.15 li
459.365 305.15 li
459.365 305.824 li
cp
f
533.523 320.595 mo
446.087 320.595 li
446.087 258.048 li
533.523 258.048 li
533.523 320.595 li
cp
.709804 .768627 .360784 rgb
f
534.595 320.595 mo
445.015 320.595 li
445.015 310.138 li
445.015 309.289 445.37 308.601 445.807 308.601 cv
533.803 308.601 li
534.24 308.601 534.595 309.289 534.595 310.138 cv
534.595 320.595 li
cp
.4 .196078 .0196078 rgb
f
533.524 251.416 mo
446.087 251.416 li
442.008 259.301 li
537.602 259.301 li
533.524 251.416 li
cp
.0392157 .439216 .0784314 rgb
f
485.433 304.147 mo
453.148 304.147 li
453.148 263.975 li
485.433 263.975 li
485.433 304.147 li
cp
.521569 .835294 .886275 rgb
f
453.793 303.502 mo
484.788 303.502 li
484.788 264.62 li
453.793 264.62 li
453.793 303.502 li
cp
486.078 304.792 mo
452.503 304.792 li
452.503 263.329 li
486.078 263.329 li
486.078 304.792 li
cp
1 1 1 rgb
f
526.462 304.147 mo
494.177 304.147 li
494.177 263.975 li
526.462 263.975 li
526.462 304.147 li
cp
.521569 .835294 .886275 rgb
f
494.822 303.502 mo
525.817 303.502 li
525.817 264.62 li
494.822 264.62 li
494.822 303.502 li
cp
527.107 304.792 mo
493.532 304.792 li
493.532 263.329 li
527.107 263.329 li
527.107 304.792 li
cp
1 1 1 rgb
f
541.464 301.572 mo
541.593 301.318 541.674 301.034 541.674 300.729 cv
541.674 299.699 540.839 298.864 539.809 298.864 cv
539.654 298.879 li
539.16 298.084 538.33 297.532 537.359 297.406 cv
537.29 296.836 536.823 296.389 536.235 296.389 cv
535.802 296.389 535.438 296.638 535.242 296.993 cv
534.901 296.544 534.367 296.249 533.76 296.249 cv
533.136 296.249 532.587 296.558 532.249 297.029 cv
532.044 296.841 531.776 296.72 531.477 296.72 cv
530.841 296.72 530.326 297.235 530.326 297.87 cv
530.344 297.958 li
529.52 298.42 528.923 299.229 528.759 300.195 cv
528.16 300.505 527.746 301.123 527.746 301.844 cv
527.746 302.875 528.582 303.71 529.612 303.71 cv
529.685 303.702 li
532.057 319.478 li
538.462 319.478 li
540.831 303.719 li
540.959 303.744 li
541.594 303.744 542.109 303.229 542.109 302.594 cv
542.109 302.142 541.843 301.76 541.464 301.572 cv
cp
.0980392 .564706 .160784 rgb
f
538.462 320.907 mo
532.057 320.907 li
529.472 303.712 li
541.047 303.712 li
538.462 320.907 li
cp
.329412 .290196 .231373 rgb
f
534.153 300.024 mo
534.153 299.945 534.078 299.88 533.842 299.88 cv
533.584 299.904 li
533.783 299.739 li
533.951 299.572 533.958 299.473 533.902 299.418 cv
533.846 299.362 533.748 299.369 533.581 299.536 cv
533.416 299.735 li
533.439 299.478 li
533.439 299.241 533.375 299.166 533.296 299.166 cv
533.217 299.166 533.153 299.241 533.153 299.478 cv
533.177 299.735 li
533.011 299.536 li
532.844 299.369 532.746 299.362 532.69 299.418 cv
532.634 299.473 532.642 299.572 532.809 299.739 cv
533.008 299.904 li
532.75 299.88 li
532.514 299.88 532.439 299.945 532.439 300.024 cv
532.439 300.103 532.514 300.167 532.75 300.167 cv
533.008 300.143 li
532.809 300.308 li
532.642 300.476 532.634 300.574 532.69 300.63 cv
532.746 300.686 532.844 300.678 533.011 300.511 cv
533.177 300.312 li
533.153 300.569 li
533.153 300.806 533.217 300.881 533.296 300.881 cv
533.375 300.881 533.439 300.806 533.439 300.569 cv
533.415 300.312 li
533.581 300.511 li
533.748 300.678 533.846 300.686 533.902 300.63 cv
533.958 300.574 533.951 300.476 533.783 300.308 cv
533.584 300.143 li
533.842 300.167 li
534.078 300.167 534.153 300.103 534.153 300.024 cv
cp
1 1 1 rgb
f
533.522 300.024 mo
533.522 300.149 533.421 300.25 533.296 300.25 cv
533.171 300.25 533.07 300.149 533.07 300.024 cv
533.07 299.899 533.171 299.797 533.296 299.797 cv
533.421 299.797 533.522 299.899 533.522 300.024 cv
cp
.901961 0 .0156863 rgb
f
537.127 302.635 mo
537.127 302.556 537.052 302.492 536.816 302.492 cv
536.558 302.516 li
536.757 302.351 li
536.924 302.183 536.932 302.085 536.876 302.029 cv
536.82 301.973 536.722 301.98 536.555 302.148 cv
536.389 302.347 li
536.413 302.089 li
536.413 301.853 536.349 301.778 536.27 301.778 cv
536.191 301.778 536.127 301.853 536.127 302.089 cv
536.151 302.347 li
535.985 302.148 li
535.818 301.98 535.72 301.973 535.664 302.029 cv
535.608 302.085 535.615 302.183 535.783 302.351 cv
535.982 302.516 li
535.724 302.492 li
535.488 302.492 535.413 302.556 535.413 302.635 cv
535.413 302.714 535.488 302.778 535.724 302.778 cv
535.982 302.754 li
535.783 302.92 li
535.615 303.087 535.608 303.185 535.664 303.241 cv
535.72 303.297 535.818 303.29 535.985 303.122 cv
536.151 302.923 li
536.127 303.181 li
536.127 303.418 536.191 303.492 536.27 303.492 cv
536.349 303.492 536.413 303.418 536.413 303.181 cv
536.389 302.923 li
536.555 303.122 li
536.722 303.29 536.82 303.297 536.876 303.241 cv
536.932 303.185 536.924 303.087 536.757 302.92 cv
536.558 302.754 li
536.816 302.778 li
537.052 302.778 537.127 302.714 537.127 302.635 cv
cp
1 1 1 rgb
f
536.496 302.635 mo
536.496 302.76 536.395 302.862 536.27 302.862 cv
536.145 302.862 536.044 302.76 536.044 302.635 cv
536.044 302.51 536.145 302.409 536.27 302.409 cv
536.395 302.409 536.496 302.51 536.496 302.635 cv
cp
.901961 0 .0156863 rgb
f
536.643 298.197 mo
536.643 298.118 536.568 298.054 536.331 298.054 cv
536.074 298.078 li
536.272 297.913 li
536.44 297.745 536.448 297.647 536.391 297.591 cv
536.336 297.535 536.237 297.543 536.07 297.71 cv
535.905 297.909 li
535.928 297.652 li
535.928 297.415 535.865 297.34 535.785 297.34 cv
535.706 297.34 535.642 297.415 535.642 297.652 cv
535.666 297.909 li
535.501 297.71 li
535.333 297.543 535.235 297.535 535.179 297.591 cv
535.123 297.647 535.131 297.745 535.298 297.913 cv
535.497 298.078 li
535.24 298.054 li
535.003 298.054 534.928 298.118 534.928 298.197 cv
534.928 298.277 535.003 298.341 535.24 298.341 cv
535.497 298.317 li
535.298 298.482 li
535.131 298.649 535.123 298.748 535.179 298.804 cv
535.235 298.86 535.333 298.852 535.501 298.685 cv
535.666 298.486 li
535.642 298.743 li
535.642 298.98 535.706 299.055 535.785 299.055 cv
535.865 299.055 535.928 298.98 535.928 298.743 cv
535.905 298.486 li
536.07 298.685 li
536.237 298.852 536.336 298.86 536.391 298.804 cv
536.448 298.748 536.44 298.649 536.272 298.482 cv
536.074 298.317 li
536.331 298.341 li
536.568 298.341 536.643 298.277 536.643 298.197 cv
cp
1 1 1 rgb
f
536.012 298.197 mo
536.012 298.323 535.91 298.424 535.785 298.424 cv
535.66 298.424 535.559 298.323 535.559 298.197 cv
535.559 298.072 535.66 297.971 535.785 297.971 cv
535.91 297.971 536.012 298.072 536.012 298.197 cv
cp
.901961 0 .0156863 rgb
f
532.348 297.763 mo
532.348 297.703 532.292 297.654 532.112 297.654 cv
531.917 297.672 li
532.068 297.547 li
532.195 297.421 532.2 297.346 532.158 297.304 cv
532.116 297.261 532.041 297.267 531.914 297.394 cv
531.79 297.544 li
531.808 297.35 li
531.808 297.17 531.759 297.114 531.699 297.114 cv
531.639 297.114 531.591 297.17 531.591 297.35 cv
531.609 297.544 li
531.484 297.394 li
531.357 297.267 531.283 297.261 531.24 297.304 cv
531.198 297.346 531.204 297.421 531.331 297.547 cv
531.481 297.672 li
531.286 297.654 li
531.107 297.654 531.05 297.703 531.05 297.763 cv
531.05 297.822 531.107 297.871 531.286 297.871 cv
531.481 297.853 li
531.331 297.978 li
531.204 298.105 531.198 298.179 531.24 298.221 cv
531.283 298.264 531.357 298.258 531.484 298.131 cv
531.609 297.981 li
531.591 298.176 li
531.591 298.355 531.639 298.412 531.699 298.412 cv
531.759 298.412 531.808 298.355 531.808 298.176 cv
531.79 297.981 li
531.914 298.131 li
532.041 298.258 532.116 298.264 532.158 298.221 cv
532.2 298.179 532.195 298.105 532.068 297.978 cv
531.917 297.853 li
532.112 297.871 li
532.292 297.871 532.348 297.822 532.348 297.763 cv
cp
1 1 1 rgb
f
531.871 297.763 mo
531.871 297.857 531.794 297.934 531.699 297.934 cv
531.604 297.934 531.528 297.857 531.528 297.763 cv
531.528 297.668 531.604 297.591 531.699 297.591 cv
531.794 297.591 531.871 297.668 531.871 297.763 cv
cp
.901961 0 .0156863 rgb
f
540.142 300.53 mo
540.185 300.443 540.137 300.331 539.877 300.202 cv
539.785 300.156 539.681 300.118 539.58 300.087 cv
539.684 300.07 539.792 300.047 539.889 300.014 cv
540.165 299.921 540.227 299.817 540.196 299.725 cv
540.165 299.633 540.053 299.587 539.777 299.68 cv
539.68 299.713 539.58 299.759 539.487 299.809 cv
539.548 299.723 539.608 299.63 539.653 299.538 cv
539.783 299.278 539.753 299.16 539.666 299.117 cv
539.579 299.074 539.467 299.121 539.338 299.382 cv
539.292 299.474 539.255 299.577 539.223 299.678 cv
539.206 299.574 539.183 299.466 539.15 299.369 cv
539.057 299.093 538.953 299.031 538.861 299.062 cv
538.769 299.093 538.723 299.206 538.816 299.482 cv
538.849 299.579 538.896 299.679 538.945 299.772 cv
538.859 299.71 538.766 299.651 538.675 299.605 cv
538.414 299.476 538.296 299.505 538.253 299.592 cv
538.21 299.68 538.257 299.791 538.518 299.921 cv
538.61 299.966 538.714 300.004 538.815 300.035 cv
538.71 300.052 538.602 300.076 538.505 300.108 cv
538.229 300.201 538.167 300.305 538.198 300.397 cv
538.229 300.49 538.342 300.535 538.618 300.442 cv
538.715 300.409 538.815 300.363 538.908 300.313 cv
538.847 300.399 538.787 300.492 538.741 300.584 cv
538.612 300.845 538.641 300.962 538.729 301.005 cv
538.816 301.049 538.928 301.001 539.057 300.74 cv
539.102 300.649 539.14 300.545 539.171 300.444 cv
539.188 300.548 539.212 300.656 539.244 300.753 cv
539.337 301.029 539.441 301.091 539.534 301.06 cv
539.626 301.029 539.671 300.917 539.578 300.641 cv
539.546 300.544 539.499 300.444 539.45 300.35 cv
539.535 300.412 539.628 300.472 539.72 300.517 cv
539.981 300.647 540.098 300.617 540.142 300.53 cv
cp
1 1 1 rgb
f
539.447 300.185 mo
539.378 300.323 539.211 300.379 539.073 300.31 cv
538.936 300.242 538.88 300.075 538.948 299.937 cv
539.016 299.8 539.183 299.743 539.321 299.812 cv
539.459 299.88 539.515 300.047 539.447 300.185 cv
cp
.901961 0 .0156863 rgb
f
530.988 302.246 mo
531.031 302.159 530.984 302.047 530.723 301.918 cv
530.631 301.873 530.528 301.835 530.427 301.804 cv
530.531 301.787 530.639 301.763 530.736 301.731 cv
531.012 301.638 531.074 301.534 531.043 301.441 cv
531.012 301.349 530.899 301.304 530.624 301.397 cv
530.526 301.429 530.426 301.476 530.333 301.525 cv
530.395 301.44 530.454 301.347 530.5 301.255 cv
530.629 300.994 530.6 300.877 530.513 300.833 cv
530.425 300.79 530.314 300.838 530.184 301.098 cv
530.139 301.19 530.101 301.294 530.07 301.395 cv
530.053 301.291 530.029 301.183 529.997 301.086 cv
529.904 300.81 529.8 300.748 529.708 300.779 cv
529.615 300.81 529.57 300.922 529.663 301.198 cv
529.696 301.295 529.742 301.395 529.792 301.488 cv
529.706 301.427 529.613 301.367 529.521 301.322 cv
529.261 301.192 529.143 301.222 529.1 301.309 cv
529.056 301.396 529.104 301.508 529.365 301.637 cv
529.456 301.683 529.56 301.721 529.661 301.752 cv
529.557 301.769 529.449 301.792 529.352 301.825 cv
529.076 301.918 529.014 302.022 529.045 302.114 cv
529.076 302.206 529.188 302.252 529.464 302.159 cv
529.561 302.126 529.662 302.079 529.755 302.03 cv
529.693 302.116 529.633 302.209 529.588 302.3 cv
529.458 302.561 529.488 302.679 529.575 302.722 cv
529.662 302.765 529.774 302.718 529.904 302.457 cv
529.949 302.365 529.987 302.261 530.018 302.161 cv
530.035 302.265 530.058 302.373 530.091 302.47 cv
530.184 302.746 530.288 302.808 530.38 302.777 cv
530.472 302.746 530.518 302.633 530.425 302.357 cv
530.392 302.26 530.345 302.16 530.296 302.067 cv
530.382 302.128 530.475 302.188 530.567 302.234 cv
530.827 302.363 530.945 302.333 530.988 302.246 cv
cp
1 1 1 rgb
f
530.293 301.901 mo
530.225 302.039 530.058 302.095 529.92 302.027 cv
529.782 301.959 529.726 301.792 529.795 301.654 cv
529.863 301.516 530.03 301.46 530.168 301.528 cv
530.305 301.597 530.362 301.764 530.293 301.901 cv
cp
.901961 0 .0156863 rgb
f
482.235 321.74 mo
482.235 308.661 li
481.309 308.661 li
481.309 321.74 li
482.235 321.74 li
cp
.847059 .854902 .862745 rgb
f
472.448 321.74 mo
472.448 308.661 li
471.522 308.661 li
471.522 321.74 li
472.448 321.74 li
cp
f
472.448 308.675 mo
470.633 302.303 li
469.707 302.303 li
471.522 308.675 li
472.448 308.675 li
cp
f
471.059 309.533 mo
483.621 309.533 li
483.621 308.053 li
471.059 308.053 li
471.059 309.533 li
cp
.929412 .933333 .937255 rgb
f
469.707 302.594 mo
470.744 302.594 li
470.929 302.594 471.078 302.445 471.078 302.261 cv
471.078 297.857 li
471.078 297.673 470.929 297.524 470.744 297.524 cv
469.707 297.524 li
469.707 302.594 li
cp
f
499.335 321.74 mo
499.335 308.661 li
500.262 308.661 li
500.262 321.74 li
499.335 321.74 li
cp
.847059 .854902 .862745 rgb
f
509.122 321.74 mo
509.122 308.661 li
510.048 308.661 li
510.048 321.74 li
509.122 321.74 li
cp
f
509.122 308.675 mo
510.937 302.303 li
511.863 302.303 li
510.048 308.675 li
509.122 308.675 li
cp
f
510.511 309.533 mo
497.949 309.533 li
497.949 308.053 li
510.511 308.053 li
510.511 309.533 li
cp
.929412 .933333 .937255 rgb
f
511.863 302.594 mo
510.826 302.594 li
510.642 302.594 510.492 302.445 510.492 302.261 cv
510.492 297.857 li
510.492 297.673 510.642 297.524 510.826 297.524 cv
511.863 297.524 li
511.863 302.594 li
cp
f
478.518 321.74 mo
478.518 299.319 li
480.122 299.319 li
480.122 321.74 li
478.518 321.74 li
cp
.847059 .854902 .862745 rgb
f
501.448 321.74 mo
501.448 299.319 li
503.052 299.319 li
503.052 321.74 li
501.448 321.74 li
cp
f
504.734 300.6 mo
476.837 300.6 li
476.837 298.038 li
504.734 298.038 li
504.734 300.6 li
cp
.929412 .933333 .937255 rgb
f
491.377 298.038 mo
490.193 298.038 li
490.193 272.153 li
491.377 272.153 li
491.377 298.038 li
cp
.764706 .772549 .784314 rgb
f
512.551 279.192 mo
501.307 279.192 479.367 279.192 469.019 279.192 cv
469.019 274.526 478.764 270.744 490.785 270.744 cv
502.806 270.744 512.551 274.526 512.551 279.192 cv
cp
.901961 0 .0156863 rgb
f
507.236 279.192 mo
498.737 279.192 482.155 279.192 474.335 279.192 cv
474.335 274.526 481.7 270.744 490.785 270.744 cv
499.871 270.744 507.236 274.526 507.236 279.192 cv
cp
1 1 1 rgb
f
500.843 279.192 mo
495.647 279.192 485.509 279.192 480.727 279.192 cv
480.727 274.526 485.23 270.744 490.785 270.744 cv
496.34 270.744 500.843 274.526 500.843 279.192 cv
cp
.901961 0 .0156863 rgb
f
494.334 279.192 mo
492.501 279.192 488.923 279.192 487.236 279.192 cv
487.236 274.526 488.825 270.744 490.785 270.744 cv
492.745 270.744 494.334 274.526 494.334 279.192 cv
cp
1 1 1 rgb
f
542.109 322.589 mo
434 322.589 li
434 322.564 li
434 321.168 434.814 320.036 435.817 320.036 cv
540.292 320.036 li
541.296 320.036 542.109 321.168 542.109 322.564 cv
542.109 322.589 li
cp
.0980392 .564706 .160784 rgb
f
505.649 256.099 mo
473.961 256.099 li
473.961 244.874 li
505.649 244.874 li
505.649 256.099 li
cp
1 1 1 rgb
f
537.602 258.24 mo
442.008 258.24 li
442.008 260.361 li
537.602 260.361 li
537.602 258.24 li
cp
.0980392 .564706 .160784 rgb
f
484.732 247.819 mo
483.968 248.645 li
483.613 248.366 483.24 248.21 482.781 248.21 cv
481.939 248.21 481.346 248.827 481.346 250.303 cv
481.346 251.753 481.93 252.369 482.81 252.369 cv
483.336 252.369 483.719 252.135 484.102 251.865 cv
484.81 252.699 li
484.379 253.099 483.651 253.472 482.733 253.472 cv
480.916 253.472 479.7 252.36 479.7 250.303 cv
479.7 248.288 480.982 247.16 482.686 247.16 cv
483.585 247.16 484.188 247.403 484.732 247.819 cv
cp
.901961 0 .0156863 rgb
f
488.39 250.997 mo
487.69 248.341 li
486.992 250.997 li
488.39 250.997 li
cp
488.667 252.03 mo
486.725 252.03 li
486.39 253.324 li
484.764 253.324 li
486.763 247.308 li
488.667 247.308 li
490.666 253.324 li
489.002 253.324 li
488.667 252.03 li
cp
f
494.943 248.323 mo
492.724 248.323 li
492.724 249.921 li
494.656 249.921 li
494.656 250.937 li
492.724 250.937 li
492.724 253.324 li
491.155 253.324 li
491.155 247.308 li
495.106 247.308 li
494.943 248.323 li
cp
f
499.719 248.323 mo
497.384 248.323 li
497.384 249.765 li
499.422 249.765 li
499.422 250.763 li
497.384 250.763 li
497.384 252.3 li
499.881 252.3 li
499.881 253.324 li
495.815 253.324 li
495.815 247.308 li
499.881 247.308 li
499.719 248.323 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 20.1.0%%For: (\637\755\740) ()%%Title: (Map_Shop.eps)%%CreationDate: 19.12.16 20:16%%Canvassize: 16383%AI9_DataStream%Gb",KksFB#fC3tdh?0^TLg]pF>hBc[6,@sY&0MSk#3^>YI_=;3SPoh+O<m'=XlqH%.T@ltBA]^enbHW`[oq:NeX5mA*=q6<E]iIB%--AS,q0Y]dL"`-L+^pVH%COm2R79bb\)W3\R-bnir28!8S17OKU3LQU>rVcR`,qhT?h-Y7r,YKZeWaK#P`A6>;:rlPP?T]pE"C`a%T<VOH:,eglYBDr,!"=g-?6$tTdihE[Dr^g_@-@iX(EPu)J\N3&jW?mQ[f5jm6fI2u5E$4L$eChn[AB6_7l-Sfc&RR6IiE@SP>Ec%%=798,GQtk>A&n%h&H\P?$QIg\-36B)aZmrIB76POIRER2ON.;*h;3Xuc]!YPE+GDB/qHqTeocQ7E'.B:m/HX1nM_"MUhi>6Zui.>%')jU@(#hABL>h*Po8DE@3(*PijGH4m*aXre,:uMgNrd;O+.E&XNorr5b,T/12JRF+g>B\3PRiihX7`3fX6*tllN!aaCm$BmT,M9@%LT1.EVK@MGfmst8D076TAl\5K5T4qbl+Z2?./VFq[ujO:W[N2#2*n[I2@IM>JM8J[+Vt(KaF]1:>W>R^"?Ep2*0([qXQX&\4Y.(p%6hJA6JK6b4a/l7?[H:3qQlZBuZR#4jeB.kZ'cE'Cr?<)3,fbu$qlrBiX?.H1BnK/:cgaqh^f-rU4A;5\QK(F:$/^JU0brgU-.%XO%Ffk\3>_1YA/IMaQrV=ZfhHCT5>WO*2V!"9)KhI2ud;>_L'k:r&=uM8<k=R=K$ko"1p10)bnAXkLG[MBNJJG*gQ@g91[XNJDC'00"%6/bq;_<W0.![l\<keW5uIcmDq\,*<QN8:*ZUhD@[<7$.lVWtE=_O]b'n*fVT6(c!S$uUQ&.)piB@1oO?>We!:E&Ide=('uCr.pl`%)CsM=U$>)TB=EVd4ag(,RYp>QmJh5#A[iW!.^Crc*4u;$[V1_/n0Z#15'*#uActNhgphkOAA/6&d=1_DhM6Pl#KN[o'4nQ5])`ri%\q^<\0"a\S&:.5B#3\F>f(Epm"1Ho;6V;.6eG6]0.FnFJjOOnBD#0[MWI\PYS)s@YQO-j&DBppq?bY,6fq&4F=>S3686jPbX_K>f%RTB!tb\k&T.2[g=)aIpRP1c$oej3?^2CgpikapkhU5`N)C;:@Bi9#]ZJ;_e"7PeC<_eY9A8DC#ba`I#Y['3!4Z`n#B$Nt8B-GDul%"O8og4C_4g7^o;nDF!@*%F&_<''S4$0ap/5,skB_-k#2U;?6fP"jh`2Oo@MY=+>(J/i'j_B.Q$aJ.!XB/+CkSdEo:EA)LJa@D*sP%EeE#C-PAhF/Zc%IH5c-i`)O)q;?RlM5^N^o)&]hp!*J"L&fZ`m=tr*B8QYLJgE"g="Cp\N-X#$9\P3>9VY8.3V1>VjBZ6r7#jGR@%RZLKnnm/Am=oi:I:O58JNZ$J1$[9nT;J`fdZ@0>C(c^EFT7;UZfbkk:K@9p8R^+R-Y7;_8"_<t.q]@s_9A;D'R5;p"n7+d8@@j3\%5GqcmHT(lTd$nu'#fJO,@^i+!1pFBp*ApQ&UdqD]l"*e1icW8ISSiTTfC2l)-O-DO9,f]Vq>?iO4:KlD%eodmkZt7<?Wt!=S'\48%1e9!]h!VU.QT3JoX]k&77\\N'_m(md(?Hs=bXAEsKS^tuZget!r8G^ce'DE]WLf6[<03lHl'Y(Wjk7.PT+=H6L!9Lc%JnEHKRAsP%3?\?/n*b>ukJbej\n82TGtgl$M7duW/Gsi>IkVqf9^nP-7^gfDI]+m#K!Xp$UXD!i*KB-u1GER-DHLt%J^RBX&'#!qCaM?Cg@"5Y%Hr7*)a'4?2`QuJsW3k*>WP3L@WE`Q:Om[+'`rscR.A5#ZR;-/r+W/!WL$nO\<a'R-EH(bHm.B6<PrH9d8NjFQ0.mfUK?#@40bLVj%lpaVo7D7@k%!mAk0#W`=b@m*pBr3BX#lmLi3cj`VKNdo!(\uN(Ip1o/,P`"^aIhT-o'_o0<D3Q/"oZZlg0ZspR]SB($u1njrTal,%G%k`S5g>]r/J>!N!qg??YXkGdX[M(o;9EIKIc8:n3P$h`OPc[_N3#$\]le)Pfj8fum$2VF?E!:/hs'N<Y]iM*^N]52lNGY5g+\!"%%\\I*\grWa5=#ttr@d9q,_6tndQ39M/kiT4IR41nSBVG<<9cBQ\2S^l.aGaM?chib@>=@"4T)'=n.UQ&n2H;qQ"Qg_5.N@7]m_&`%SuK/?`PhnM;D)apV:5[XqE7%d'Ip-uXZ8CbE9^:n<B>u>MjVT5otrMQjeNn*l:lRo+J6cPiU3=7+J"KifaW/JT>Hq<9@mEN\WW\R%n55+sBFK39HsSt*'1K=o-NC?_I8]@'1pr&WIkj5+[-47*<)0AV2"L:&RjsW.pP0,S;4jek?_DZ3$Mq:dP$(55W8=O'^TjU)8Ypr)%V;#m'8i&An2=mct^KOa.gBq)_=,P+C-cu9&;@Rj4Bi4#^^G=]Z./*#%>(+gkR"P1dkMtUifq>r26hSd068#3##s0NuoR'Q-FTFNb%pOU8LE+-)`1&!luQTXioqD-%>3jj^rE=j5ipO(]H.D,VKDU!U<EN5I-(!62A$]c&'McJ*BWomjAo@I#+B0X2<=S5q#H7i5]J'jYC%\gKk!h&4e_9'=5qK,,u.Mj;SK!$BfQQ.^</`Cf<&V/roiq%$u\H%^Y794<aDcHfSXfi=ZM<iL2qC><Jh@,>uK:[`2rpt0f!Xm2>i%#UT*#b$6p=iSGZ:c;/Hbn4]?oI)Zl'#>9;*ltiamqp46TMIi5]EbVKDLEg;%rR^]kD@r7_\+6#4#qX4jMfR7?S7MGgE7Iq<Af*?u%%;X4o<].`Y1db>+@8eb5%9$t9>lIjTR20qBhc8!A&a+Pt@M?L)2D'e\mf<<)'q9m0WthWE?egp8**kd8SYb#<."?#lY+)bZqAhf&%b)t%A:7lNKm*Qp/A<F)/Q&P)7^5uIGZXj/EquAICl+YsDrf0eD=g%9eriZKFnZUk.\77/]qFZGe#h$Ip'r`Q.M^KJ[[>RK@@Ssa^%O,[GEY\Ftt+bQ"5(:B&hm:&r)=O\r=[>RK@@Ssa^YKhWrG4?G.pI"\AJ(rCEhTiOC@.!'F4:V+gZJAkRAo8]E>WgU;q9&Yi+7"+O%qRf#Cn)E$qH$udO"kDf/Z$t:Dc0!W7kuoI4BG20_^5rTs-7;VC*p6o*ZGdD5?dtEji?N)d/HM5cJ+a>3VfD*m(V]5dqQd<2+REF4%k5Nc4`N_6UkFUjHBk[Jb]Zne4%Z@e6cGc24]O2hH,?W"Li0cX=nGL(BS9<HoSu'=ZemCODLURfN&LW9X?f:1T+T6FiIHV%3n+ZCj%frkfhS-UfUd*I.6nYaNDT+q'Kd5(f8.sBU"2(S^q'*QA[kUrArq(o[>;5pqQhmlPA;rC/C2q>4GFnWAT7j#Gcqi@,<lnlhQ7fu`<%%AR`VOk_DN8uWm*=A;7X.;>?F4&j9qnF=uX,8jOk%i6gA)aNRegYIG\lO*V_.[!-gqEc+k%uflqf?`2/V/6&Es4SC]*W;U',;lYt%!K4'_T5U\E#E62"69b.Sd(a=5*jPN]:PLLI(RlfP\2[j^T-f9`@`jDno4/4jgOap?-X/e.eHp^NY*k&8>JBU+,-uoa06sLPqnl=G%e=e(Ef^UK1No0+^X$st4Lfidf@T`gbMe@#Gcf36<O'"N&].!IRf:QDR4H$gr(AF.\?Ta6.7ilL:/FLBA/UZ72=kq?qAW(2@(]J7@%..4s;IB,kXs3YGr3StMK/'m;%$Qo@u621N2s)S0f+kB^gV:8B71IH5GD-D/.&qJiko=(gUlo)/"m12,\D*.WD3%doMhpFK]8LlF=%B+_@P6.=Y_1t;?=E@Q(T@TQX#0$Y$#qZnZ>c!E4W.W%%SWc)0.fu9^p,MbS`aRMupn4ZuS7oS2>@&Va+&'VKpp/(ItEM*(Z1Qe4)%f-)-NXmIS7BYKQ_qZXl"pPM`fof8S?8FreUhsA.2n+EX-[rRF7o\b8X(Hsi%3'1*0gS4kVhsf%2mo=9%Ef]/Y"-K&470+sl+ta^"%I=9Xb+4SU'b.qJ]f&s(n*HLZu_H.(XSQ\5SWMm@/o3X7VF70.EBLn%T\>cE=8i+4J%H1*-Nj#dLfhmVZ0V@[J*TNR$HpZ2mE`neL%lMPqJmrY%qM_ATU^4@P`6kADTY-N/ZOJNJQ-2RM-V:]Et;'7:k5,2@:Q"IYfiXkeYOm-6/METRF!t1Oc&HMf.34l+1/?/pgGsHOL%7<SP>keu)p."9Q+b^GZRAbP6aM93O3RnCEpq_;d3IP1n<^]";lNA3Ngr1+'"bR:`n>=']FZ.K]cRrKqVc6L?k&,*OEg*mgG2.(/=%C[#>9lS^CSgJf-3O4i)&*:9Q3HIs8(T>3KVs%E/Ja^tur<C\e"WKl$('5Vf42D::mWS?Y%MMpP3W:,LOA#_+dENqN'.@7H&2GjgP%kk'4N6AAiJ.pCEHd;jcHWcSk+<Y_0259(n,#26nhhSa%0qO*ilmf)1dn[%UKfaWSVT>DLPCT>PD"7f'A?90rKjMm4OT+EN/Z]bF-%74M]hBqSBZNJ7hu8:#\^*CX[W%6+:G&(OLjjARqnj@D6hWR@N@5(?T*76PX"ac4+qcJjmuQ/+k%JJB$fXg9".n#U*&%K^FZNY[+(%l?W*0!8k%2pSXVqqBTAC`SGkKFo(Lj1cqf9Np8G?l\.AOe;:K<7&2@klFeF5]K"_FX%A(aI;eNK-7:"'[414HIiFo,0J9[8d8\7l%f>X1TYM\M[(,3s5c-VI8m.H*e$2aHD9N[[dKaF4R'/j&+(FJL`A&;o>o$%l)^U1;9pQF1b5(3Tk)]WUmX1*NLqgH`o.0c:JcWH[4%7&L^W/LSGncW7d5]-).?0%T%FFaHW?EPXXOq]S.5%tlIc>o]4$^TZbH^Y(%sY269<pKNRlVrrF2`L,DtF'O5ZY@m#,%QFC`>5[@J%q>2E%qrQ,G=hK:X9>,jupt_Z+mTs;Tmeh2"101I1a)Ab^NPJVAW@UZ`[s4t1J+h-f6(3E*^2.Q(])gc*DYEUGV&SXuSdkYUT,7am%$uPNdec5D^\o6U5g`eM_lPKT_]n,dLe;K[@/RCp@];[u.4+\,fG-2;:gcDY-o-1baZ3J'g)r87Qq7O5R?RXRPIAq;X(:p\9rBCP&%@ctit2$Dh9ZlA/RmF1hkp3u]KFc62"Mu<^8r;pJ*>O31$PMt^!H.U>Nhn[i<K"fPmP.kB\oVY;+?[r<<N+hW7U2R:QTD]7Hnc*[@%kncN-1._#C-#R$JWjmWYq`R;#q[p2(9jgg3p^bpYUp!u9Duog0-89'jC$sMr;%r`Yr*.YR^(^qj21bS(#uKNP-K#)`787/BC'*JK%3]qY;[Qa<LTM?U8enI%Dpfe9iqWJrn?aa/-T0.%b1[@#2a2-EhSltj_7\76iB^q7U:OG`/a3@iBk<A4,6I_WWf?>TGZAWeOX^'jA%2T*/TNk*t+ra1-NBouCIZDp>oogQ0dftMfq<@tMVhgtFoH2Hgl]r6k%C6;Trlb$u@Qn?adO5n8)XVq@mO]F'^W_Z\hRf3M*e[IM3%qEL'Bn^]/BQqH=ENjC[NiqKX(,dnZfS't=dpn-?dl66A!=(1t1)r:M;[abmXi]Fh\KFZ7UR,E>*@:W[QP)Gi>?4G=AW"gl-d)$2C%bRfVA^[<<I`@m`I\:B"qNTfg^Mg^c6I_#1qI%N9ig$>Sp25*fN'.SIiVi=ut553'^EY05ggXWD$o6GEG0YZU?gr8W3?bE6mS#W&]%Fg^9[CNt?La-W0+QXG:\XnR%`U\1)9jjN-)Id4iTluVVSI]JV0@+]+U^[:UB9"fEuI?KpfB^M+gPgkHAm$oQ-0B=T$$4Je=+`a_A%$d-rqkBZfa*r7i0:\)UrXPW:;n`i<MIP\b$FuJ^YDf/jj]6THOj7nYKdqO\(O-[r-)^2uGq*\S7?b$Qsk?j?W(t.<?aRc,p'iS-4%Sm=phBY*VHa-$?-XAec+Pb4/0oT0?%'[rT]=rfi$OP$)J$`-hf2S)g&!?J*uqgLL_VFlHufa*kd>"AJK#+^4h%nFWn1N?gPS+hlW%4qk'WmN5enT<14e(Iti8SN\$>?#-I_luTNV,qPT*/rnS(o_eL6AMtonC=S:gZFeB?Z;/GZOZ=>P!;c&<Z=4^](N,?,qP8(:Bke)9%Y2Km3,kXUPF:<WWP7^GpGT2;Df]PJ?q"b_U`AWNJ.ot*)Mi`jF&>-HCU@a066+DGnm]Gf1S<c!]?>o7;`aU/\O8,?^A)NhoKQ(FI%kBA.=kmME_Duojk4-&35AEWA#b/Hi+`C>[:Z.&@$&)V+H7-P(tKQ$thr0uH[7Yo#QLu0CI?[*fK$eXWLO[""6`*BK4I%>[*DR=$4%\b6bF7,qn6eq3>)TC2`apFcD)!'Y,fYCDQN3T,eVXYYUOiE"q[H1T21nNhZiV-G+$L2'K7aY.hOL5RhD[ldr+@Bk:3@a0AVn%rNc%/CpF`A[WR2/CkoJ=MAI;VOj!rEo1nG'9=`kB1=Z^6Zc_#@*iYKiV$14Kr)*k?BM<>3P>g8ZfHX80K`pAW-Vob[pATq.SZ`HAhe(e%!P%CG4P%K]U?c"5;Gt,>_(bLupt[OP`a%BoHU8K%!<!HW^DWjSO9+R/5_D_:LM"X-'LdHjs*cKRZ?7I.G4M2r]%UKE5%tpb29?Yr%q2K(:BR2WRC]Cp5SEN<HGLuS8Cm2c&]?PBRPAS6RMUqE%*E'=n+lqC$Q`Y6djZ?)6ri7ugQmno>[?>SLe#9<GDdg_"4_rc"[t\`<%&AmX9W$MQ,YDa:"DDjZE72,TCo5fcZ*5dP5B_i+HkW/=k5>n(.1uDOhOY5`A9=$`RSdi_"4f*dF60gYf3Q:?D5piJ0c15uKVa=/H%*sS7'%JTq__>P#IScX8oBU686B*-l6)h/+IOeMf,:jDlPB5i>7U_ZWF""W<_\884f+)3T9/q66kIk2KjR.<m`/8Zd7Vj=n""1_fp%mGf`C-S?t2_Eok+Ud_14nh)2.Z607k6G+SbXCT^3`!W#*$2B)LkIFHUIR,1AKh;6hQrM19;Y+(eV>!\6Og#D;aZRY,5g(@,+%-lJ%=DVDk;%QUCBG%$L4ts>p:`t<4Rc>i"qF<l="-r/q!a:rl1k6^j]YM_c6'=[2(0!i%GY)?U:]_jNE;qp8-$nON(;=PBX.6mrQ?f(^%LkDEMRR4CbV$*hbp`H5D?BG/S8hPMAJ&#,Wnk?Cik9OkudD(/BB^nCL"j_fLYjd4]0CT(9"h;?Fn<o%RpaZ]4ZOlY/]0Ys/!>aUD%8<;kXoX!Im,p%K%^rS'f-qZ;uLne%H=cjU$?oboiW-acn#q2!0<jGjLe?NU$_fCX;Fuh*=.9?WtAFR/eZ:C.0'9!Z/n19$=!/$J'%)akr"6X)D.(lOt*cqgI>^HGb@r1fmGlK7Q3?b'eu='Ebcq?Z`Or09$D7Vd3sSal0I8;?pf<CN@^0'.R@MM@//r'*^=Gdqb1i&4%2%UX[82i<c?U/GYmHHf%+1nXFU%!PT)1+l6Rr=Q"t;]b:@;+6#5<5@G;BpH3<;`:ppLendSN:s=*-f'3S6`V*HX-[eP>6f5U+Fc'?9%?a)G0T.G'f,3IF9Mc3gc1sXr^T8TJ6PCoNtDNsGOXG'm\7Bblm@fO3]IbHiMn(AF_25N;0EFT,[-7;#\d7`;=a(YB"<W>ZlD!-Rh%jKP\3;>tWW\C4J4n3W`PVSfMqrc,WmcTM0b,=2,8>2$.W294SKPLZ>.CSe4PMg5Uag'^p.-_oqg/\5Klrd/`O'-WC.M3+c>l4O($%0@g"pP_(N,R^G549`FXi0q!m<X=)T#R6MW"\lTi?KLXAQ5]Doa/"Nc@bs(?O!:p,\3Ul[Z`*)sFaW$h$Mm`H1Go/F$Wfpm4`N6'[%E;s#hBVuM]=TAAl:QAkEF32=a@5a?A<mlhE7FTedSVM0,pAXVSq+Q-9e@T>"!Li&+2U:0ODQ'I;342U_bNX76B,\ig2qYgUjcbZ`%2+s4l\r*Y5>^=nLf/\%K7]W:A[(kE3:E5oifcI8kaF>h$&_NA/o`VoH%%Y)p>iAk`;)QmIHhIcp"GWW<F"W\Oj7J\J2V`clU844F%o#&T\_i_lM6Xq&HEX'Fo^soObp":HEe;dF-3g1WaFUa-(0B$"^gM9f,Pg7Yo>6LO1H$fO(>4s@VVe@Jjfi(5>o['1=Iib3?(hn"l%`ae^)bfiB/pB9O>@$bGSU1p(ijM37Fjq$!@;#f/;,g0@].;AtB9ae&@p':";k/EVJ&#GiKrpH2]!Br2JJ&r43]\E!fP\.>(<)l`>%BQ[N;Xm]'9ZIWl;0%@>'P83sb#M$j(PL@k"2-&*,\`4R/d*RDk!$Zom[VMHBV;5!C>M1"F=Eh"!clLeWVq(1Y\;-YHh[u3/*El&C%+DkoT2%BL-B!U:0->J?24_aM$!0ko/6(V&]r\a%^E6sWE1tsV$`+(K05ckH&oGBINkW&H'R"#eX#iOD]!n2$)SWR4fV-S;,PRLT1%Bd()_kY\mePR#B,dBk:Tm217t]2af@%S\'@]kN_r#&pk_)Egr=LjM=.m>:.4b>U)W;1%eVj'ekHs&t01_/AdjIQZ_(IG_7M_B]Y%%i^9-@omeBE5PUe)G/!^Dk)edO!9j\;9YO`4(j[&&aW]ufOC#BGdE^e2*P%6t(r<=[9#l#+eG_Cm%*hW">-i&CeXkI_<%0j&4E=GC%R[0(%d`ms3Km;tH1cM"G7dHs"VNgAegLb^nQ42B3+1ru)r'7!R+MA\D@5Lh\$K)a`]WF?@0ARo`]:2q^[65!eq+DAuUWVud-H<da%f-hfpn@;!1\r6MWF,@?OqPBZ@HRe<Im\33^E=/&P$e37>=T4dPgK;*8h;T-,;$'Lbk(08Zna)]iT1oiOR<<`2"JM90+9)l?j$ri&%Oc&2k.a`*!J+SnV4(;q6Gje1bXKJ@O/JWo"I#N>3.\(,I4j`Qh4i8sk_u9-XV50RI/(Ntd5e?8#NXTlb7^LRUKpcrh1&n.D.q=g.%ERDr+3spg[>ad]oXQE@.?m6Q^S4-%r)Js:X%P2?'(c6A_$g2&qebL(aFkt"g4e)oK$O5Y&*uZ"fr-LUu=%@pOW:L/d.>X_>d/86X%"tn"2*ubX^HObFG[/J:6NT&LQaM8)YQ!_gQB)E+h4?97I!#_BXE>\(l2eVXI\F.Q]6jPeV/M*oHY%nq(>P<he[W#$8*R5+[;KKY1%Q:`3'3.uhS)-:sDs6HU9\mD%g3r<rX#gpp(O:LGS`R0lHJ#N3j?n"mJT0GSkLi8XN[)n>X)m^!.$IL$[OfA"e3n;dR*[O(,gR,Ho%hK*r.kT.aB-A7CH-()?F+"84t"gCnLFJ;L4N[r]QH_RD'B[rW$SK/'IjT9)^K5(uWVQ4Gl7MaRXPd/'3i4q`pFu0_+<I(L(2"R5m%>eiC'djVsA9nt,p_N;B?i!u1T6-<@7;V34O"+;*!_^(()n-:tKgf%0oKq([uD3@pQO#;5]3'iaZ:Am>UE+Rd]ooWY02PcW*'D:NJ%WY%62-CWt0_.Yj3n\&^n\cKTRW3*5ZmT\i44&H_4[taE^J(+<$oV6cuB3t!DQ0gjPE;S06L'W2A?12?,m89YLmKPei!V6#J7DI5f%mCLju!jh0@=49qe%'i(1Dso#q1-sa@[VD3.`+Lh<4_u-pK_na\gn&t2'[t<ai>H=S%/N_NWi1%Y$;0AU!MRhaBD5H7;%FC=&r]F/%A1`-%j2_P_)i@d:O*2U8m,>dmD&"=g8=e"EM5&$cdP=0.3fr#.5gQ`>;=$YEa*29BoNio^H.AG/do%F?dq#4Plh)5VWhX4+n[%(&%B3lRt4R$B]TOgCp1*PiSi-0B,f%n@?!a05mXIYb8].)"%0nfle@Dce.hc$))dPGS(p1,(E*P9SEE,7Kh)\TaNM^K"02UV)\HW@T]%L?TF&Gkg7!+pIedHQ3b/ER7:QL8u3Q.>kB@qHka0.%uZR)EP7mOQ%pP.#c_6WhW\Lnh_2,*24jW:+"8Ld8kPT[&l)=;]j6,bPWV[%Ebkj<7<,oQR=g<Co'@,EI4ut-R5Cj`^D>C6VbO:G,BDDBA$cI26B_Heap&4q331cP_e29BA>LXierr^9FV,%q9$HXiPE5/u.#m4C%\X.s4;hd'o2l'0T7bEXK;eOD=*,;![p\eFGhD[h.#kUK)M8MAEe;8=H'ri.7QhFN%H@!YbZ>toSZ$6*bcV5N<JiOCpa_l.11A10V%(sf2[Pd]Z_Vfs_nD6;MkL7I@PG3Gg@Led6_%fdac.Fk=Nc7F_ZZPr*XkIC&T9?V!a1Rr].U`WMXK.[lEKPQ><\#j8l`3IAk5'h1m%lo/G*G,_=)IST?AQl<o\MAnC']"6>T"#k5J;R8MTZUeU^jEr;*f$X-h1<3(eVN?DR=>HfO'WVnPYHq[?dM50ZUNQEZ&7WY+!UL0M%"nTT>__`ZKS'e.iHP1Ko+3_,8ado,*UalZE)T9@rk_C$_;),!%_r78pmjofbCWU5ko/aCie92l-%\/fBc@$7/oJL8@QXSt!pB<Bd%k=W&o.dJ[m@_=3j^@*s6D!X.H[fPZ@A]"[b!t($!-A8c<6BE3BUD:\/IRO^PT;b18eZ.'^n#VpFM0??feKQ,,i)Z:0.Z?<5d&gSP%+PThm7*+"Pm9hJ.Lnr((3`a0^kTu8\!YC\.f-'j.P<uJ<BZ`89'HQFPNqOG_IHZHoPGrflFGZ5>-[3F)/0,[oUaG^i>350oE,9)3%Q*[GW@I]0'Nh"+9r1'T4<ekd1O3Q7N]j@;(8lrbg`".`m3UM<rSl<mk>&qQk^U.KZBTE2=GbSou+Wa+1G:CeB^$/qY2?W9B%+YWX%VKER*F7F.?_9bl_-^i0Xnl41GZfbe3DGX+4!!a4EP%2NNeTOXPPsM/?GWIGH$+5F*khr2elV2Qagi;]6Hb7&=-FU6NE]Bojbe7,m%Ek7EB_e3;ZGtiS9\>+u':,^O_[FFHYhbs0V>>)(=Am0]arO:DEIn=muS*S7(n&FngP#('nam@o;s'QTq'/@h^1jiC_nS99t5#uh$%i&c^$bL0fMU)jqlenTH#O'Fi^q;K6f3r,4l.A`*qCRBL/Yu:>s^LjUnKtGbCIP$\c;<aTf_2""]*.'Uoj^'J,ahNU<$VS4Ooh]`<%5&Xo.jblK5rJZG+>A&2)19S"mg\@$6asTLl_)?ZHdc>-mY*s;(ob,"DP:ufO)u)^M?SW^5C.4>6-+M"rRD:`cf2M4^j5/\1S^=A_%MZmiU[@?AL6YtmmPDsDaF4%j/gQtOP2Ar1\`ac<a\oXLBX<76N-XHG&OGja7?1JTe#GNa*)O!^uVbCRmIYW6[U+cNFH`a\j7Kh[P%WsXR=m2_D_#%QDq`dXT$O!PnI-7hXK>uke(D:\0W7`X%Z'1fI8N-#OlP=E&$RZ@Kooogb:Y%t_bb<*e9ln_m<?OWSBM6t4Ho*5p*%E#,/YA%-Xud>RS3=tI4t_BD#\U$CB2+L,;29<K-kRtn6Ri?_O^.;qZ3DRGj!PQmmp6-aFS#Q!PiqHL=8<4f-c<&uN8-`*lR[Wf(l%8=jGWaP0!P$m[X.1P&j!QN$l1]7,.e%IA:4dABb3GUJs;MDX?s[G4pUM2d;h:dT"@Lrm8$.Mg\tH`_4Y<!&TB\>LuMTK*IZgIKq-%OkT(i:Ms5`^rb1n/1@.J-dq,KqN<M/7s$Ydo=gqIDRV-4e1@H\5[Ah,oiOCBL7'he1uIuW!jO"L3K2Bu0G')E(Sak^[%+&t+4s!J%oQ5SIV%t`a-8PM.GK!>_]dqj6L3L1Uo]l)rXuVSH1[aoW*-Vt>AXcd#c,XD!s6Smm]=B/)&fE'EKc[\BDEQpfQ.1O3;1Au*5s5cn%ql:?9$DM?`f=]:BO#u3`Xi-WOPmJ/<4qUb<D(j(bm'#kSLYe!mrSHj9jpgeA8N>c?S1hpq>?=U%hV^cleJftBrSHqA[caJ*\T9F[%(0*$"dTQ7Kh+PT-YO*BXKrpUfY=LmI?7Bp;HK>ibjP@B=5'b$l4GDD![rs?Lp\0`ThLhlBW]/A%"5_\UB#5M%?[;>lf?@65.ea_K%*r/tMhK636i]RTkUY^shHhO$O"T7-3RZR67(SdEXT0DALQdj9VpT",%m(G-^P2<h6]c,,cE-!IST?d*7mn85hneSD]o%rq3CXlW<%mq99j6g8j]CXeKUZ#fg)26roCmp#&Qc.go\Ng@@mV7XCgMOcB'`E(QU2ek:<bCTEh[2a#[?C%Qh-+qIMVi<"[1B4q,]I]VUD_-Zf%RLdU=lcSX9`4UM&Nn5oSbGhBQDE7Z_esA0'8(m!?q35*td*J3)Q^t1ongt%*4@Jl(jla;NH+DRXR4I5QZ`IHL!0*8pj)QXtV.#\8%qPCF%S2XMNf!p@dMI.l?Y6=I6d0e.T8h9fX)d&4@8pb.D-!XT0>eJpq,gMFV.n=k7[?A)'n#bXlcFK4WlX"PlG/_51ngLu5=-T4a%Y,KluA*&t9H!U!C1b[jrQ1eCg]"4CpW3!.?`N-%jVo.4<'g?nKjh7"?<VbVLD0>lSj^!inkk3IN2B#g`%:&M*(L-:?ea(T-iTe>S%<Gkgi=h.nAS=\52lS%YnC9)Cmnp/./]d9:hmH,t[$ZsuBI.WiToEh(%^pe[![dT,OQ+ZRiG$ad2T'Z9$Gqg$'h(EnhHr#(ebu]AE%"Q/P:9?u.hPT">oZGN`Gf?<>mTs[@*N>%YrCHFQQIP%9_2jSi,LVhT`g?D>F\Q2heg0;0N5:irdPfBh*<W7HLRCEa/FbB\ZosOL9%E':.;hlLm#O.l79H2(f2G%,FVl"n)HSpT*S=MNEF>3eu?g?EoP\.,Mu1?mup:-EUtp2>A/casdha>Y&i/F73>]h4iTA1Du5E=,`d%UX75gD*0p/V2b%c/$kqi-t/ka4'D9\a4-9%4!)K=`Csn$J+1qtq%)?qD1=0;0Df[Jj4F8H_gCCpp'WR4s%SjT9jcm3YSgWV?eH,7%'5s?F7pLK6Lg=">cdrS:o@?a12N,0;YZ]R!ml*>Jo6nFCY<E.-a`n;KO-Y]T`!]QOS8BSE_"HrO),QXR^;0'6'FJrJ0>o0of#I;R%Cl:l]caJ"L`r/rDS^OsPV=r'_m:214._W(.X[]RE*F*ItlG9-357eNQK$duum-QiYU0!<3(&u&R?QQ@GKD!S[/_I2^;5$8Ar\Pn%%(%kD!eq.$k-W_8=TrZE*C.L@q4::>n9mqBaR,-R.?<e2RV=Fu.*Ub%4D.e&Rm.T8sn^BB%,/=)BHR_o4)pqrK]j.O8#J?4oN]Xcd%lDg;_VMaOf:GlQeg6^[;/GWuUbeHm@jo%%tX\bqfV'.U9OcCB&o-eh%ptiA+_sFK1R!g3Y1FM^j>NTNRFNB]s]Z@`s<n:E',2Zo7%cMtc$q3O`4-cV2"7sQu/^1OAX[sXaCQ@.J2-Q_4>G/Z?,pboA#h/'6;3;%I&c*c6T2BSl9G'Ngd>ilRWE?B\@Sb;TN@$Ta/[PgQ_%F#.t^8G()fOG[o<Ku-:X=X`PS]'q'(Y)/VYS05uREXM`tiR>o.GdYlI`Nj2oMX<1qQIG3.[!QoEP"t!k::f0jT1Ra.jAfO.7MqOj%:NCJlmA_J)-Yp?bMn08l0(!QDChgHB4$0EQ0A*@Y_jt#>f%SLYH\j%UGkFH`_Hd!m'i$%*gYkKY0bZ0H+0UG]$?a$TD636=Onbuc%S#_h&]8H7=hgMQ\^$Gn5DW?*@Rq;WVR8PR&4^Y=_m'Vk!G(8iI`8'6C'Hd(q:,^SucZc;&rV`&5=uuuoj7S''1\:,ZgWJRePgian%^hbH?A35.J*Jo[?H6g8ao1$l^H7S9/HE9V>j^*ilbI?$cFnN<YI9fohZ1ZrLCJ6q\2I\$cb)AL&%Td*kZP6O4`C":-CcojNp>bsD%k;Zcs*aU-nDn>%`Qp#44NjGEUipjSq9se5%o?$C-I4Z>#2Z:b@#B)GuD)Q91ldr?-<-Z#%Vp<fgAZD-bZk'i3rk1Z_-p8TJrF[h-%iM3SuHMA9FRn&]j&jK"Lbkf^]/\-A\f[QtdXhr2/3pQISVD%C2narl0BHI&_bh;O#\e7!J(M]#O[4?D"A0ZHY52!Pp\iPCQ63_e9%FYXo!H(3K6An"EI9R].9RAjKJ^Rk:9n($[:(5ne#/iDe`2&>nW"iP0C/1Mq6c`[)/Za7[>6R!I19nfp1-]6%&06an2Doqj%Ni=HX%\b*^*2tu*QlC<2C/)>7qALsHdjUL+1n%98Er"g=,3U5USI2+E<V!Wem`nBHnITp*ibTC_0'_>+'J#hL5IL$X`_SL+5\$M2K<'-B)%j_!aljYD"/Z?(;XO.9RGKlI!JJ(g[$:2Ba)=-^2Sla8sCkE^MId;%e6qG-T5?^m>ZjGe-Npj/,5CkQ`,p!_?+i+5p$9fu_tD]eEc%l-?>CQ+NSjk2<DH[:@uLP5`Zg?"n66T<QkDqsm[*s1uHOnik!?g>0Y6Z*jVqI1350q&[Fd42o7`o6f]J.-TY(V[+eK=moYX8J=$9%T0ns3ali:#/O#M=C4R0cQgVT+RrnVjl+U(o<n#"mjWJSdXkZ?cH)7"USJT0[\Qn[)I$H4NS&L;KFOn!+ns/c_qS$L1Um86i<IHHk%QRK2q\@VF8gbHdK\\5VBWlN!n(&$jn<68J(F=[#VKWVNgS$$ApCX:OWg[NeHo4GLugMU9HoX\aOgk.hmSR:g?CX'0o7%^YLY*=C[%56Mn.X_N0c0!FO$qGe^hf%[A[7Ggh29DWLl<ZB4@NVu=W2rA:20ra3qqM)Z>9WlhTc-eMXB5EEuNcBHb?5p<3rbdXfZ7E%^rqWC%%"MDcJ^,P:fT7=IJ/'FfV%B3qboQXq2Di0<e^TSj]hgW<Q0IC.$OQT0)M_H$Fh<AeMmQF0)qsacOX&"$%@!Dc7-JM[MhbTqQA>(CE%aZF\f3JSg-NZDhqULT@I4YG$.1o,c3Z[Veog-?=@Y^o:;1l]>#)3<>o]6&#&A'AO(1+q6C+1J`M>WB4`$u[?,*WEQq-ot<.Eq@cc%P0#$+"k%\?4AKp!,>P/WE8OOP^*CKs0"tu,.pD&"+6mQAmqC&u3kQDEj+/M7nVjl)M@5"[B>6PTQUp)h"$TOn%%T4B?p$?)Sud(V%5rql+7&QD3Hf`:4+l[C[Mq4uqm7sT:GYl"RW(T)8*]uC.;5&%p75IhbCFRMP>PCUr"6Q)dQ,ID0../4iFs#AMhHLL@2d=>h=uI4U%R"p[T::9=L:3j<,f&N23C9Iu27nI-#-ZXLBJ'&euA00;t,A+D1VNT0&jJ+_QKqd:Xf0jb>>)e3-6CX+nX]@O35%1mdI$&BfC\Be0%G@K*to1W\];tG!GDnhMBL"<<nVTP-A@6QE.o'M6WLRlBL@uS#-DFGL6V@Cu#W<N!LQ#8(fX^9%Sp%@Vs?_Tk-(WR#o.`rLrlMUW)%>)7s:-;Wpn\+:HiXf!3b47,ihOP',H;]CMRb*%es/+rJ'm3X<Df-6LuDK[M7=smVin)tp8]W<DOFQP0\$^lf.%Y3>p5?4<appBaL%PmVF\.(ucQo>-]h"iH<tmOn=rf8W$E=lRadi\g-a]GpOKCOt-kedIcl/lQbt]=EE6]MaBp>cHa2/Wd&EC=^Tc[B57^[ed;)4WTl!%]'j#iBEfNhd7f#V%H7%O_T+NWaX;bF*[B'EBtY,23t6+dNJBZ6W*6JopI?b\Nn[W#2K<";Y?@m<UW'\Wi%KMi[h7CnA%J%C=;]h*%I$&Z"GNClr-1c!39DVssfb`\g;df@"I)!Q5=!#Jfqb8.TZnH6u+A;-VCZ2p_FP;f+rBejHc)Yl>U*!H3'AL[t>07eo1N=0200G@o%8=(VE<Er:?jE"]n[;19G]hY/$h;__](Mb_eQ:Z_mhGAe%rT"`X32l8uj';'?L<Hc5:P=p[J76*,N43GN:9ihC!073^k`*7`m%eZt%NVCF*c\0eMd,K^?iO'@O,[LS0b4`q];Gl"H@m]_V>gE._/u.*E/=3<r[C=63j%aa=(ZTB@cPA8(K^rF>R1<K@\=7.iQ$BukNbbi8%G.>ui<E&G1-4L+5IhBYXZ8%_Bb.ff/U=mcQ8Li[PT3/Jb&_`Cri-qR=3Y*38.;otgqgtV3_M-9UZuFgb^.3$nZ48qf(ia&3HUHm\%F0b>]OtV)^p/RNIh1GiqHAJdn"En-q;[JPGc)j7TOIo!f2,%.#@sa0=,j1iOmLguM/l"GJB+C]_a#&pGh*<LgP1lk)KVHt6iK!H3%54)O(%$O'B?H?krA$+jRf7]'.16;g=#*K<#E,2,#aX>7[Tb1,$`YtMYif@/VagN$=?!]q<46CjR#Iu)XC1utq_dm_e.$%kp>ZX_\%9>5)uZlB&RZS*\8RG7QtBLtui^Va9\!_SYe.-?UQI4mUO>fr\f_l3cg`ru)H?\1qb!FC:VWKKk#GVLNJZWG*'K]o23/M_$Lqk^\<%HgR%:0thjD6jpDl<>a^@cl\pGgbR0Be65\]O'Ye#lYtV=>"f34C6l:"@msZ'BT8Hl"d<"H7m.Lq':_0#fMnZXGCp,!,uN`<f?m5u%WBK$T/UC:(f;2P3\4\C,^_+@5KBpN3[2Z/b['\?N+hcj=m<9A9MN]CF9,ts?VMa3j`noJC^se6I"\IS7LfFFNc+gkC]`c4:Fp0F?%Bn_Vq?2ZsUIlWPD=68X=AG7JnJhA]X?j/<$1&A'M*6i[8gu'[H%!E$t)A0<_ZY"4#WLm7On7.[57I`cKTo6=R$b@$g*7-"hAr8X`%h36f5.fs)(o5lFgT!5E$<qi<T$p+9uEUmhc8+(BR(g;pnH3Oo=f27QU-!.)+H9"9^puS%EMggZ'YAt>+<FbMkM,5Q=2uE;Ma;IPg%i*q\Zg5%_$+lHLBT:FZ"#2;uV?>mR%/rZ_smD1^K&)^MLAmaq9GG34A!W9Nip1GNS=nid?p+-?+coIi7SqKnr)#Urtf^k6NTtAM)%!(\:A)SBI#+^go)$,m0YP$'0cH;jM+_[-TLNp21q+W_bn!!@@k[shrF<ii_CA5Y2+<8\&k6c=S]gTdFYn5ni?gt?6E24S4`\Tb".%Gr*,Q;.;)N+uBD?JZ!%EGB11hC'c/RAKZG4*#n;ejj,T7mO#`5+`Qe>nFaT8gDlS)X>!sfOpAMhm^D9tbjo)YhoR5h^14+-74"JC%\rj5j`'N.-W#J)\-CT1DZZ54qMu%4g$6^?SEgZA,;6`E-MXKD_!=>D,_$0?I8F9+KhdI&$k`c0bB'e-=T&;A!T)+'&R#9fd^n>[$%\>)RNK*t?4M&!89]?pZtK0QQQl[r=[Z@ho_,f[<^(a@l`koMT)7$<>eHQ`)9XNlW$3ikU(oRLTbAF,lc*O=OT=?*C7ncPK<\rXkm%@5nhSN#&QkRS1@oA6gcPk##QW%SVm@_08s:WL))gSWn=S<27t&NmrtMJu]GQ-0gWYQ-3oIH[:\t9D,bObHX*[)nqL\0a^<@j3fGj%(_jJ$QX17h'@icU^^<JNC&c)dist1"'_ohlebY"?YB;Md&go&F0df;mB/P"_9OoCD-aO(M>([lf,sX5RSMNlfh@72pN7"]\bPliZ%M6C+@pIe_Em?k,s"<Db=*@k/(l=TV.&aL0l]CLJ+G"hZRAK@.!6Q/L[1"2H]PQ?'kKHY4m\1qZ5T3aWJ&[EP?%fG-I9U.:Q)i:Nn%5cSA@o#n!F6-W$[LGJCtqB0..oT4@JO-D8FFZWpA3KB6+HC.J$@/hFs)9qq'B0-&>cPaWe$(28pl[.=@d6ln=-EP)fraP4VEk`JR%pH<[jE)%Dqd\8=m4XslH3Lh$#_;?&(6Ab?8W/Qh_-@`CJ,[T`'68X%7!l>H$3=<iHMR2@_,WQW/pB>!3Y6'J6?)ZV@A0W=L!gm^\%EEMt7TNpZl=CN_qVle6QCUkk:JM;:;@XcA%R0cI6mQ-amRb&bb\@_T,QS&cR9]XVPgNdjK;[$X\\T&pOIXR/'_d.[:?@220!6EL4%4mkOh!8Z!nXF;(<Zm]#7q?jN\C!'AUcKof](])!Dm?APNKkrdSC[''rKii(Kq%2hP,Gq%R2cio!B(q#LaUQ@TXKC%?HV#c"Naq7_%8<35t2U6+m]=5N<q-!\(1]Q<clW:NenJQ,,=RR#H<2LDY&)17;r/EKcNLbF_bWWp>781%2amGU)+-6fGe3Wj5F3Q[EOlL-\<nUO?%.)pC>'_ohQbI2VN#PV"k3IDJ+?RTl3+Y=%&P?SW?q=lAGl/1L9>[9_*[8h*rDn8K9T)ILa@`h/`MbhU=om'q^V\[?hi;DZf,p/7k%@\5"^</uQe@rq6QX<hJkaaL3s?[IQ_ZF(MHbB3\oK]nll"(u=$4",Z?BJ8jd=FV?aT`.8mC/j1r>8%X7i&q3Aag_&dLb<EP90UD#%k?dZ64oJsV_t]'`3pk:WpFPF@c#oa.[rg;4inhd[3Dj\8><Us"=ADiH&#_noBZ2`e6,U;V,%V)-IEP&bn*rL)bF31pkpX"]dmFp.%%%D/F_N(1n9Be2,r8bHpi2b_U>O6(!n$-VU\HA<OXSRGWEZ0@$(&1\^^=.gH(h0i?8M.dPf9n+Ee7gEtm('6Ii\$^"P>Blk1INQu%1cQ5"Z4rrQU>1KN%d*4`_Y4(>1ggF$Y!dFD0%Ua#L3=[!YAQ\So?CMtH;OsD%Xj+n@]W=k9kUD63L%5E7/B*RM8@18klTF]2a7;u%P%4qKWN`h":Hbn_h'OU:YF$rEDC(<%r#::H`f;=E^,ef<]H")Uk%eHRjhQ^Z[$-&8TgIO=hsVf!>0jIOaOP%'e"8W&9Wi\q:*t)q%isVR=d"QTqQ+fK<[0PoB=&L\8IB?Il[.X#h#jA]>ZUcB[O#G&KAZ-su#X97%&(A*pD2Mu&E-A$M=FKbl_2D`-Ds+2?erj7W*=\<s%Vk\N$om#-QCp%9o=3JInPG4=#pla*p'mgo+2i$q0psm3:Cll&h-/[[ql+Mkfq<\6N*-lVDL\>+T#RGh6,0M]NGRsrT4;!7[eD&Ag%6I5.R&D1USdu'LA/ROIH[_0b8BQMj?F$FN#P9NZ\Z::f>T2rDbBQbbK&dcT^cH+apCNh"4#3@Jkj@E6t/>(lPo#l4I:@5-B:fMm$%f*gO2T5LDn/\C8+Kb271\4"%p%"JSE%akh9g#!Iq^5NMXLg5uf$W0d8+G&QoU2o*SYpu,!ZpuXGGkA80MFXZ_8#puY3\#("UZ8sS%2d\;G.&<-XDPH0A#;#DfEb+?:X[]+Pq<Y&D%YdM0r_:6[OJ5us3i9>UG(b.Yj6RiPViAL+G^'pJ]*mNifu/K99X\rgi#H:fFY.W6%.<HS?mgI1l7-L?b,Wf\+I#d\9IMIOt<&8DF"ngF=/]qU5%Ieg6jBpNJC[0AAO3fB>,fW]iRlG_/[hDub'Nk??s/PN#V"+.1f#[:N%mj7+D)&ucW/liM3)dqbe*s?>4m6mdY6F'*])@d3M[i\reI4=VV`*@TQ,V"Nd,2rs@5:!HgGg361f:$STn]Cn0?@<k`/.3P`!%YI'%o;YXr?`tacpO+NE(p[OLKM,BjmJ`beS0_IT`oQ[kXi*q#h0m.NTc4iVOmM4b?fK?"2+0lgYL+mA@j0)\W(2%*>:WHSlif]EWOtA.%o2G%Y4(8/P91Ja8aZ5dsH?9qNK`Lt6@L?U.dW-hd9U>H#bT%&eLY"%n][iier\Od@\BRI%B]Yeua'!r`-dp'Ir;ef!HD7E$VZ@Pq%Bjo9P>^[QhX"IA!8F64H!E9;'\Bp14bX(M67-]IuQ>TF<.he&?em#?TQ@U3M@#<=jD+#`ZR3]?LllFt(4/`6Fk:rilO]@Q:fZU8r%/p2u>?*k@`42K(B3P]4)#]Y1OVdd6oH5TH9h`L47Z:OAc4/6JYG(Oi[W[fR%OfXXeYn\a7@:VEUXmB9&(FdnHICKO]L!6ig/1h6j%ONDal<)U:e)@\U]N\3(4;%?YGCMT$?^BtNX%)kOX&\ohtlsscB]DF<Opc9;6Xp9K-:Vh&La9jTb\UOs$Gd7ZtVa=<p^5hRF.DIYC%+.Y5QWc_'PM+[[]5>0-PQ:'>DhoPul8.aM03;;<>L2s`)XmGE.!H##5l<3![^d\ZW7(fKGUXES_K+%38eG\Fc<Lgd>[);1S=p)"C%n2k:>Ir!\Vj?Z?X[[,aJ<,>PT/qKDE]6!'>@Qf>N=1YD'%.@#gA8EU$*V]3,019W02d4Ko]U_ip,#o3EI()qD0#-I*P4X>B6V:`5%E!cYgbs4\&HeNi+@^A'=SB4ZQq:U)h!Q%-27(g;Q2:WOF0:.BnbJu,)4GY)uC\Qq%P)1QQ,J3.*;rZkKGIbJ54aLTtV5tsfiQ"Rs%3lU[j`GE5Q^rkQb_<4j&d0lM[*Z/<>_9,KJmCue!S/ekr+NaGE=DOEumHl+=h2-jKDA2lcpC^J4=Phm!5%qh4gL_)(TZssqDQ76j%@c'6>%F[]%-JN^FD'p(/[D6*:>Y^Bo$inF[>g/Ooh8@h/;p^Y:Pfoo?%\mk&@X=+g*8]K,1k@<NfV"OCFZFfcQ,M1qA%+q!;^&\K%YdmclhQ`R8./'DagVIZ5r8gDT=ff(/[`pO9lK*k:&.^bQnZh-o*qfqmf;C54nC@hVmCYN.of?9d'FP#san<_j#4QM8&!\].`\5s%%TNY;V9'tUg;&qMk6EJi9DBZ9aD3oFTDGO_=Be,/fY%],Sh[&<arki3**T&.dR#7._HTaC+jkK&P;M#bfl?jK)K6eV?Y)V&OG4O1M%9$2mSI(H:_K#%cMNp6Hc>\<G3D$uP!4cke'`nlcInoqr?Z6]5@fW!c3M9Y[<i-dKZ*;oeMC)t6<oe%,pQ)ZS,RLM<fY<?`&UP2*_%F3,fBSL=_iO;i+'HF6BVcds7OF"^eRWUD,S[G)FOT_6>KBg)6]`n1;7ZgagDo6;ib%OTVMr-H<C;p>'T8o!B3-:N!">D@d96ZqmL%A^E.2jHIPLOrr=Fckkm#G8N@\PtAg'=!>,<8QCI\)&fZglm.j_f<&`X^me!1CcjJO$4hu'DhW33f3dEbIL<!Z7i0%fc".K+;,_Y"%#bkqcMdrcE@@ePfG]6^KKq4K!(E8pl^[Uf8+F+le614kZTLFQXZF#)aK3bXf<oqNcrMj,92?C*.XNH<iU4ldMK.mdP[<6@'*:0uu%m0=WeV\^X$F1TeA\$'c+o>\:o0UG<npPpXtl["m;B4.*O::\rW`g)j4>.LM*H+k?9a)S1Z^@@T(B#ia]N4U<UL9C3p`u+^K\,4)-%`]rnI_rK6[)Prm:1t73K=4;J,jQH]Vj9R(p4icFTffqbmYYKN'a_jq9K+oBmr0T]i#1#\BaO,LBr]q+EfJdh%jFgA:LC0p,C8p<o%@rg5,GE1@@it-OcpJ9J3NE!aD)Q.fm`,&T!GEc^mH$oAq!+I_o;B+!53gCk'Fp:G>fuF0qh^uZ0p'SIm(a+;&#VN/&2`N%<*%!Kl%2&p-#,/[9DjPV%HmeGX6@m:$W89q;1an4RX_F2[5%1GH/f"K^k'g4H[e3KDu7hj@!62i1h%=*I@1P"E*>^gJg1c_q%iuI+3-Rk/c%ZbbDefOl_f1aE'r)N(VK'mR/KThXut1qlIIX,k?p3]e%DUO)+&oaZDECnPe5hPT`_8/sEnNA]K&GC/-3*@+'k@3#Edg"b\[19fjX%ln#V6`eLZ]4$eIKj`++e)kc?[8`1fFYVo!W_'H7ViBs^Cj7ZX&@oRq+aoM\<82h23JJ-:j,!7+&oZS]34*#fj2k@88A16F+1l6F^%AT3h4Gf=a&BTL=r"NQHtP"95!Jr/o`*XE!CVUh2U<n!0'\X7h@9s=#>>'64IBg#DQ"0^87Q)=QB(5B]5K7Ng$?E'shr\6gi%&IOd%[:r-j\iKJ.RZ4dd"EL(k*g>Um'W/3M6DQ?t'V`=J,fe!&+@lJCn<[S7qda3($*hUf*tQ3qEr:!cB`(\>;mI3G78'LT<&toYVqQ4X%S?$<M4uc-t7-gCV4WW<F;u-78TI#CTAit:OC!I/hi^U7Jc>uXFJNI%(lQ%bWCOC-#eG/'S`hPTZV(u!1G4P1F_Cs8M^mRE7b%KU"%oZu[.*o\+8\t7k"?+mg^WqilZ"%=Fm3#S<WarV8W?^=+"6")keC",3AROAVse*6FM@3+P)F6I0hDCr_Us3koghZA'<+hW/;kIBbm%`qbc2<,qd)H)'?o[GqD:Be"Y%2c^$XOmN^&:?e^2>.7@F.ba+@#f^:ofiEsj'o%c!SErBjeL3C`e79LmIMP+$KfXH\Do*dK%WSDE%VPs<.&S9F)FtSlK0$#n\h$,-r0Zis>o#Dbuk=gh(?6D(q>"&@FaYaNiEQS"VSI()!\UShU<#[ZgWhVNQRPf)SBoZlIO<4pY2P>t>%\)[G05k!F=i_:9aHcXOTB"<Ds^=#lEHp23eO*9N*r](2VX%C0d-/)l-UYm6n(1e$$803NKi<t^KRGuYLjekYJ:=:nFSPQ,n7,EjK%)=u;:bB1V-j*>k'1YcSBZ)D<FnZqm'3'Hu3?Ne0<=+<s1GGV_;Kd&n_JK3!/PU?f&2h*E%!SM,o5%g4\&-[Y2"2Z4=&MRF>&%p+X%8;E9X$Clq(A3ghF]I%\T`HZ9b--@PL%/:LM*5dP5B_omS$?bXEJ##2<SEs\k?_e9%LY#Y65@g&c29D-??i*0$![U@oA>X$%42C<F%d]<qlfbiK6]diiHdSb:4Ng+-Y=3Z:(Gk\MSJ_qOf&oJ_6VXm?N\7(!>\5:=O\%T+X^Apj"AU77('gmNk46B*nIt2p58"b>j4@TeY%_.VYIJS.!\Kq[7I<c"RM\uFYFLnJDU!eOcGQMr7&cm-Chg/U((otRljd>G[s2WKts\,TuXlCUqGq.I1a^VU8'%`dmM7_2rf3HfeG%9@VB6pQPSDH;K#g5,+r8`DdcCnQ27c/4>,Q&m2M<U*RlhUdDFZbCXP5.iQYII\<>Cc'H;)@*Hu&nH'6YA0)-g$_LP2gfU;]&9pKR%>@u6:*s>V6qp`B)>asd1&%>jR*>1bp=dZFI$2XoRN!F'_jmR--\ep8ip_De%=s?gC8:hD3,G,+$j,*"5i'0&1N/ZT>L9V_G'B"ln%:"(7_#$]\]@_i8QN$r,0*+B)C"%1#D7n/S#BZ,+N8J:("-;!9$CgnQg'a,&j0Hlgmf>PNWnKeGA6__M<<[5RNp^?,e1;nbUpfWS-%m9r#fQ]nNeLm;*QreN+>i'Un%E@_,uPK3kd!"/uM`Y&8F;'LunL_iW%-\FjC!#(H%6Q@;1NC$13.D\?;iE2+6_MBC26;o$K%)-?_%;<!cJ0qgc]o-'!$&Jq#L0apFJ-upJ3Q4X*t#RMJ@W$hop?BPj"NWWlJ"B:3_9IL$N?paugUZ!:Nk!X,QJDaNf,YJOSbtoSm%>8OK%E>"ui@O$q$_l!o"EZphe@6TF065!(Kk#hC,K$T#&R?/hI$cn8GEs<14'4NCU+G`?0K1#\_">L&T$&B89'KB!IYb)_nr]%1l'$:kS%E"o/Q%,T51nO/e\n8?;b+Q.Lc4J4_cK'XZr"SAUB0ZX[:%>p>dTE+Ne\Bgk)+e`EaAJn%UY`e&r/TIKnYlG+VcN&d:5e@2)1bXHN%JOErT6d^F>!+>AZfi[u'R,eB=$:I-iXBm[1&LbF<(U/U)JL1@8-]5V%=97Fb^jtH*]+^;BRDW>N!RpH]_>PJtE$$4?EAFOE"bOaE%"ET_/U24NtM\(4p(]ek(fK.8JjA&h\SeE+F]p37rN2KMHM>e^pJ/8d-J-DW<-NIK4i's<Xgl=oVMb4'P&Pr!AT&DZ08OgPZ@4"_b%39s=o""M-hT\BP3Z_c0Q"=Wd/JWbkg_]:MT!]DbEL1(`$/$?JBXZXsa_XT&<a5EL.#do3=-k7QV\e?InW6<PC'!*#U7+n<0/:[`i%N/W,a"=0'7ps6jQ`,RWL-(uNeGT00]!"HD/5UQa](h<X5&5%cfAE#jlGRtZp6K5o0+N?1nLZ3no,@M4Q:&sQH=9U8X!6&FU$2+?8%R6dSW(1tqSL^??`=[m!ngE_SF6$6:oF<6g-o)NDgR=GT+8C".HPc!^S_de@XCkp;D0Gk40)>M9O'VL2,aeB<f/:m*m!B1$<?lap.%*/feA+.:b2]NsNAe6>BVCf+b0`Yjmb[t@'1"glcu#t.*F[:d9>J.]Yi,%rr'r!e:M6iu6d6rP6RB:ok'Ys>YJ'9!8O&Tbqlk@DT$%#geoK!n)FSVOJ%a<PV.9/H^`s7s>+^!847e*YAKG".^e1JP#tA"gh084W'Jmb9>18U^K^;8;9YXHT1(<gEiWD6ura=NrgbH!5!gW%0T'G/"ge?0U_F_WBEC1^=Wi#`UPWJ/;Lh&kJrO0O;*@1n7?f$5!j'`YaQQZ<0MXCg!f+c^#(.h@ZQ'De73P=N.t[&l`"EH63*HAU%!fmgl'9o(*5AU=*"&VI5_[uu;RRCUtd+Jb(^E7E[!tAkiDHLDjU^<hf@Te%Qcl)KM1-0O:YsF4\Y_^4V!a[Y&>E'7f-8pFFO]XmP%D[W"c9b\t\[c)g?!C/p_O_"QU7HQ9(.F9`d,EHOM,V]1A-P0JD"Ntq?Sg-ZlcLst??pe>^LaPV/a#fq+D'PEG%P0`\0;M/dW?a4Y%16$@<-CNnMeV;G&&U:>g`WSb]7Y-8eXjMBE6FVWNRV4V'b+NU4O-,SC;T0b=8L+A"#)?N[@0IZ.)D24HK*>\=Je!N$rX`_c0ka,J%DY,(\-'Pc]6V`Df(jdHa*&&0g`FH1^!X7-T)aVk2N%Q8X#/pfR6CgKIa72,2NRr0T22Jo==JF(r$3VUJo4@7n_1KT<Rl+l+5P5Fe%Hhf]I1?bcp,sYsqC'1^ba>1"i*+Fr8JuQPr9?pKY3CndX)/AIH2e.0\"#-gt?\gI>Q:?%[TGp6*#!t_7+uk)r"J:]B@5.$OGAEC<%ApM6[!K<Ad&G!LRE]OUk#D,C>fQ!Q1]Yp#@+=*,KL&o[*5D9.`@dGG:T)hgM5Z4j]7SACA5hr5)JiF&<'9jXE6R%sa$3:f9pri^]%"Yf*&gYU1:_eN,?'g)[\cuBEQKSHh<0*I5!@]Jrm]j!;Q`g]8m^=,O`B$c`oai4UB(Pk;O+GJb\C+u:\;$QkLcu+eU0ie<b-s>ts%JQne(6'\=L-CSR]&oJ;8-]R$ldHtAP-!L9W7UpBm*_\45+t,E$,Z;Q]+:k^%%Z5n9P-ko&e0^\$/.%5OBP//_+D:aZ0PD\*OLA;Z%JR'Ur/MscOC7kU:/3+-Y@u_8A80+FMM1hLc9JdE9?UW_&n-3c\8=Oe.^d5YRD*<d%12d/C^^>]2WSqLm;K*Bj6!$E1#'aXH#1:uu%dAG78nsDY9\.`q;AcPd6;DqjU$&*rLi1F-n\7A#\cm#2b?j+D812,JM_$Uelo37>(XN'57j$5g5P>IFUJF3dV!(/@@Zp\tg9bbP[%<sa/&`1rg<O9ZmE88\aC=HOJ?!rB1;5qq(B&0cji$oUCp:!9==Qk'3.EKi-]L?p06K=kO[$sWuD(kp]m*).Q1,+(n&8A>bR4]*K@%K<l0Z"rfmHL&_6g_P,5IX=58S+\`eUErl@G5\JINZCDc+GY'#[5T#L-EG4Gn+;;bi,4QU[:M=kJ=F,Ke&rJI^mN>0,oY=jTJSgdK%K38977d#ZVPDh+/Ls:M]6`MV=9ouAa5fI1T_4Y6n<a5^2!eV@RCH&L2NWua4;0pY9ZD;Gj7T1"W@UfZj'%=jNXlNV/-PV:;T[2h/%";,,i(,SkmLZTbBZtT-L/<3*s?pmRr9EU8^-mT']+i]8a8/$s`,)@8Zn2+`'cii?=jX6"?BfNP0JVCtH%>D6ILmWu51C+3*aS#0F%!hD@H7Gs>ZH%RXZ#7p>7K1#k,!%AXG=PD^f+r3^E^c36'b_>W:D]3:3$n2STOA`fbDhb<#0Qfi+K-=b.%_X?H?6GgZC#`'scu29*%CA!2NQR=BC.\o?<5_uk5U)gp&Ul?,nB$c8E[O>Pq/Ru^).ZZ0CrQq?/TLmjuD1"!@U]k^sfHS^VgLUf"JS6_]EN[q:MZSK\T^u43%#g=Q]DNa[#.*%0FRt+'4K=*g`(o3!Y5Co4;KMqN7%*PB*0c8iiUkD2mBeW0gLbV;$][]D;@#cf]6DOe&I%VV_,*6PpjQ$cK#R6"#%D<TY`9^+j8A=CH_";HfGd/]%pIKW`lC)kYsVJsgX[S7RUb:2%Rc\C=uF5:3)7bpFl;(1<aWKDd&^l4mP%Ab>u+@F?A#G;*QePc\*%6*hi@LEp1Q_2!skLKk1=_F8N5!fd'%>.%'2CcVlmh@DPBU,RZ<=qc`-*>R^=/6XNG)]+8#'rUa\4_8Ou^jfJ\`Ji"rQ7TfpL]m;C%duOTpV:#+#d"?rFNeIE#a89_Hs'$hT==(e*/I66FAN:1G`dp2e/I\=EmK;]:bXFYZ]CGk?QS>\[oSCQOOLBc1pTop7P*N7"#aPZ^%C=Z"H7u*QU*eCX&hi>,bNJW<3g_a_F,/rS?#9$b7-j%u^11Q(9F"Dnc:8H5n93>:.88:;"qQXE8(n=tC6q$cBb4+l?Ri`tCGX8#(%7KZCqLtigTmT?ha;B9@@D-Ofs,Vs&F5K>(5n1_9eUe,iQh"5*m`!f6^7<2(]"HkaW+)l\]KV^kJnOg__%@g_j)$P48?<HG<.2Stq%""B&BIlH@/@h_sWB\$?uK`%"pa\(9Sq8WPo#q.IMG$U2nX>R*R6d?.EJ0to\=g8VmR]n3-@f[X3)FG;2co\"6Znf?MA,\K3Yo"tu%A<@L+e0ppLhI?O&%k9*`7;J@4Pqmn9i:"^V++?NTaj?h;/7?UQP$5a_JB+DhBeJTeWZ5.n,Vf1`1&i6.GXr`D73#2t#j9Q=NLbP]%U]Qig0mfU6D&]jE'L>6ES0)Y-C(cHT6lO\Ld/GoB_E/enZ@5RnH!J)sA0T%^L\u5;_?(][>/V^-&aN&!V]QEtHk\T//H%j5$Ajro%o7"XR@?ldU,d>qBcr`%8X_%BRi/U<#Q:!K_\LW<0;dr>EpETYl:17k#_E(:#1M">U75G^0Z(UZLNK=T!6&)IhOQub21$=9q4D*hg%kmDXCn0FMB$h&>a+GGppSuc:?OLRiWlMGJ?5K>@sq*]u!XR.YB-)8p-2ue+fiB$H;HXc*!-d,FuL7B>t+df&@N=-f?5RQ"N!?R:?%>j"*ugG$8SU9G&j))p]M@i(1t+)Ve1oeW0_KtFSiN!E@uN<!'._a9V>;FE.pO#]H&lE>\FF]aaI*e88"NlT@`2\u=&Au*fmnonO.%VV5YN9SDUEbM'HL&c<=R;([5BBTp\tp]F!=CeLQm>V*\eb[=!I\+W[p9kJ@PK_Nh;(2k&3g.Wk$5[mW!jiR2uaKr_7j$"MR^s*Bl%_'R550#b`dDC(.GX4n%`fi`DF=SWF.ha/M=PFW'qemumoCb5OC&CBCe#dV@1@qjjY!/(a@4=^k!DNjGh!q'e?>(bm(P%^":(0<\5%%k$;l$\>`U'*2!E,-.DJ9oKG<[W@+S_]:_Hb(.t4A.KX5<Zi$,L8u,l86/N264f;4+@q#G_Fn>*LDsq18JF;rDM#Z@2F6+F6cn8T%E%?L`#gPShV'WnsW?bZ8#S!Lto.4c5Jk:M\'Q2:u3l0m?UYm"3_nK:.?3H(R8`^PJEg^_R^d_M#m3Qt5Cpnsa&/V^+N!(2eVZ^eu%PI50<dTHj:XDMf><(o/gq1Zi%>e#QD-a&j'^LF<n0EOS#'i"dfSL(SHMPGL`/:th![MiEF7j?tCMhEqIiL3H81pJl7D6i72YEF,J%f3*pY^u\[\+tJ,0[Xo>]PD#Z\UZ(bq:Y&LlbK*"gKa)b>i^tpOOQn*oR7ahORY:YA&8uE]_egW/"!qn"(ZouIEXn5Q3N)s+g:Q<g%;WPX)1kV8jX;O#!\*>[\DN'd!8p#PnSI?>/Yuj^9SHZ=@8AsTpMaY&_KuI;eJP]>,D*5oa#OY7sC!^W:Q%gYjAT/Z?k'FsWE5;r$%Buo97?B4+>1,31H4G9a,?4s-%qn)mj#n@TB8\?(80XsQ\6"1VP_OJDJPe\ml>U-E'OG,pSD'f>@\j],prPI8X.mVjV+a$$MGKWgm%HO!rB79msOD%Im>Z\Rnu_Nch1.:>@ZLS@'g,1"@#4]oNM9@gnlIBB0713!\(ZA0;gLl=DgadudSUf^l_QVj#]WsMp^/I[=Z8mG_c%0XN9k3uPi`C(rYMl3BAigUi+m\%j>Q([YNk=V!mXGh0G>_ua"pXU(63?/H'E?s5aP_?EoE99$i;Zb5,6MR`RXN"F$3'#YI\">']+%'!T>Y'-g46=VrJ?V^:ibLhfUn;OXos'.)G%MG7V)(ZqMQZC;dlYd2jB'AQ4&P5R5i8Fs,-S'uNn0hc[GA/HZp1M(prO$ouJ4ROG\%Lo,a)0\-^SCud0qYn7WcC_CFp&jm=f]?IKN&4nR146:`'Kq:-,KXWK:1UM9T.hSY`\2XuL(Ro)mm-eQ.L*Q=R#Tq5&!smpaPa,e;%_LYCh+`Y"0R3h?2W6Q&L^r%O^BC&*M,+E_"gj=s6b?F[.4EqoZVE!!,2F+L8+;;(t&r1I.Y7Zp=&'c]Z44)qenDI?2[Fu*(8@X?]%J7`a&-*bjj9sVQ<&NF8b&qu<U/N#>Er):HMU_!*+ITnf'Y:L0p%$nDC9J'dQLIQ=5QA\&Wb$ZoBhZVS,gh.+S`PW,aT=hZ![3S8&%"Fi`:LO<5i(n_5PDfX\kWHl,.=_LmP]IgKlC-Y%][#icFkhe&<balS+F"0uZm@*>.)>$;RniVk=0Gl([h;%oYZR?<&.2IEplf7*@%IWr'pj&[CAH.Ws`RO>6@Rf%P`".:3q`uhNP'],?mZpnZbr1hRA"I@=J#=5AK1^dEqge:B/$+g>pd1DEdSJ5\uR;?aPF!?f\G3CC\%c<"B*VnbY7W(@?NiU/ZCKB(W!J,u:PC'r:T<;h#').Al%k@LNo6li8C(7?fUQ41b>/W#r>Ce\HQ,!%]%=Ck$2X!15]J49T57EGB7%6[+0!IN0?&=>>>n7o<%k1d@#j$O.5kFo69IPX$l<3R\:AHNC`ZpF>*XJ@]$*%%.J6/51sM=@_Q,cp3ah@<quM;m8]0%Ubd\@H4O$%Y4g>mE9>%)Pc4aXm%iL^D@J4S"Xd>^ID@A%E0-K/\2R:f&_'HYDWWYu:6a\F/CQ^<bo:&5CEPau>RdkW/iCDN5t_^h#CY5SY!<rO%d'2SmA,ue#4lC@66d7_rOsF#3B8@F+ZI4Mk;_C=;Cim-N%eO\OmeeI%(B3G.+eLcmo12CVfXFZ7Ri`nfcJr'l=Y*C^&UkK%&5(GK%OS1q=r<_P^\I2i,_dJ&nb6)EmLK]>[aNYK"*HC$?7QbfTP,BH1.^Em%fUa,(%(8p(^f4``,7Kd9%F[F[Kd!1/`Ri3HIsr!R0nF>Y%lc*cUI.'Ej4e*5V&H]3/?7o2]ct2BC\R02p%OmL`j\cCdZNl8!X7Iu"N590;SMr0'+*\\-UGHNPI"!-rEYH@\(;Q8jXPX<dE&PS\%!B`-lUlJ&noj$`K-8i9YeMYAd4*WA3UL+Xgq)e!$O]6eb[q@g@\bp?\M%dpI"/dXQhIE]S@fum*JYs@/l:f&r5iMc\k<&gTW0U(X%f%e-45NXem32%^FSaf;E7[C>7[j&M:FI7VZ63:mQE%f>42#eaZNo9(XcC2f>iD'uC"$IG`i=n]C&)R%ha.!2g6nW^oWYSaN#N$S-%,t>%Q3-gVDqf"^RjZe1^"16B,OB[E13."g_G2ThAd*7@3p:\9t=.m\mUA8?]1R[!b3li2]KpY!dHl_Fo-t(F,k$2A*)[Y1'+NAu%%C7.M)'QC/YVOW6O@"OPJ5*.nE4N]J)&2?N!,6nL<A3FDu2^U5/B*M-61*AXOBGf[K5QV'!mlurl`n[Q/'bj0r@Jhj-hX`i],$+h*%%eNM([2JJ_1J&a!:W8RrM+#%E`V5hQD9U+\*m"j/GRODl"J\KH`lu4A@6LT^F4#Q8(*nZWJ?CmW@F=%`Xul`8%@orE";We()U>bO%1H=s5!hNl]_"%XndX30?#g:!([m[Of`\.I`5+)(fYuP?#Z#)XYNV*:DQhqTm>\:#.,"m[N!\"Bm5M'Md/AWHpkVRi1Lt@4>+`V:4%b14Dm`6=H[(e)L+MP0oJ2h55/FRA7>Y524X-U:9-rZT@LaqVQ"LD-21FcJNF!C*+MULS0a*6#p63S^A)]SLMaiG1SSj)95Inn$Ye%V?J^Z81I,igRp20NhhQ7!@5J/$AYK'WJR7ai5>lX1b(F;_[HFGX9RGsP@U7]#(Mm^:ucs%V6f"FdGBBBb@Ueel1Mn<N?fS+!6*_O%,@#r!-UUP3i4oUr+sR5`bCYj>_/KTsE`Dk#!gpubng:KTn9S')8I(uk;35T<6#LHCn3T%ZHiPC7/egQXebntt9'mtlAXNk#Rh9@X%aR.F+#XCD;GRE4_f^_&sp<Gi,*E.HN#F0'h;M(/<%Nh<0fQps$;N\c=K7sb.d!D:Fkdh41_SL`YAK,5?M.Sqq\[_[Bj(q895f3%%%a6>T?gYaD64.:_qF_mQEDr6Ll(F(jVZ&dPM?B)N*:F#soMtD;\bk]O+k/P#]9)J3:I&B)O%q\M5c%mMf(rn*4fQ\=cX#j&IX6OZc%T%@rumG8R6]p$FQ\$:D$Zjeouf@ip]*B0bfbHH'^r8@rhIT'm\6.lV9j]:`!4O=cRPXQRjaC0T.)jA-mh/Y0s4F%)V%choJbFRM_%UFOjr7Z:Cfb!X9+_MP6+G33/]IZ8d6>H#\[J'uHj.<O[mQ?q>J$iGu%4h5UecNDVsY6_cS361MkiT!o^-p>b8p>Y%O<5h.geV!=k%P*6G/L(t')oD+sN_*\T@/./B<@"Q^Q,aiSH1AF_IEq/Y:fqpMeNhegr'>]I>9bA=CM+=h?V\5!Id3F^f\M+[nm'gM^>M,Le`Kd(S%hQQ1Lj'^7R]ZFFWS(RMW;&W8b?l/WmGm%C8]]dE>m%>&EV6G.a(6FEh:tJI3Y1Rsa,tIgR]6TMFJ=o1Uf,abZd7)cZUI[U-P3(gp%Zl%,e=-dS%QVji\"0c$"i.#H#@!sC@@3S2TT=b(rO#ON-;9;g_EprI@f(LM>3'@L>jI,&;4>2[k%&O'u`8$Q/SiY6>k!&ASfe@Jl%RR1*kNi4Vt0(I.]aEOYYFlT9^R!CMa[IZM2HVSAkPSZ/ra#$eleeI8,"<7YtoW`G+^dI?akJ0q*";PAHH3ogB=2Q"]U6F8Xkibdf%-'JLokql;tW=Xl?k;KkFMPjS';ZOgY*RS(5O[us)L"DQ$*Y3Wen4\MhP\bu>$[jTdq\M:tSrB]lPn;8$P[Pf>2:cu)>*$ai"(qT:%"EE7hGR8aiR$7ReEA3!nd$)NaEHAm+Rch3sLlS^?*!Z_U:`+bYoPiiW+9aEQ$]Mr^A[&@UK3X%l;6ct;bin&#`0Zi/k<k\AW*Q&3%J1l,Cl;L7Tc$@*cf5#tr=eD1r2bL3B:o+&Q&RhJ/Y;Bi_.@S0#N*Gn/Vge0t(O0\_Lu+<%.?O;Nj;6abqqsmSM^u^fe^OL2?jsg*%3Ed)(E]=Ci,Fm-DI[/rTXk;3XE,/CP.72V)_PWW53a_86\10G-?Abd!h"pah<uA2bj:#XWAJF:B0i;=7,+LVW3r&(L?"R41OZ\M<%[aL`3Q?Oqjbr-@7'i#2Cc;`u'2Nur0/XI%n.NS>9kJcB'N,cV/=la&!Nqom(hQKR8534GP#+s&5rR\5[s69R^[m*>%XYZTOSbg%S%AT(1ETkQ60p;9UKl6?(I?Kis8'fMVgop_j/AT1$XcYpBF[rmQ/i?eEmF8Yb[W`SL6s2RA&j8\rDJ,c_Pr_)fal\FooI/1[*`W,e\%s02Igj,/<`,d<;Om`,uEARq9Zj#$)k-D*bp-??%?7=]Qmal1b3e/M5]Gc*d>`aD_,,:#fYddQ>j"nlHT+`r`,D0l0>M2g?DgnSj>%6Cu$@S`61XHGH53W\--E%t[t-Kc/?UMI`+-PL]j;-,"r0/ktmDJSpgU-(Qr'bp:;#juscrScP=J"U2[O.5iO&."\GZ)D8r"0Usd1%Z/u8G\H-2Zkd?%7k<<%1&S%P@fbj+g$(:<'^WhL@TL'pN=J;>&`L,ST+.Ek>,Dh5.aNfIC]8:6>NFAa6LncUmiOg(^`g@BchUP>-%PlDcaDLC2up)mGkH=!+l9A[\L2Jb$9)2's.mP)-6Y!DX19/g1s`f8_/<sAlHDOPVm=&N7G@n2KfmpgtZ+^KiB/78,-R8"h=.2AtN%!3UFiYH+:]ZP1NjqKcI^4ji;/]UG\MLc.6Z`2)2eo24:f)*^&tj3m/_]i_MeKROq*I&>;'V-g;r[:[1QRD('V*;G>-I+sX*a@!7R%(ZPNN),@#;UR9a`^@S5HoZgU-j6_&+<6gEh-JnC<ZdJZ$_oa&j"Q]-l;!WS;fo0lq,CplUr.FQ)RP]FWBXm;to5>\PqYn)8SLOt1%XK-38m<#[nL]_+/hl`:0QbAofgn`cDH?]@+4i=kbj0S_F+)ml4PFhgDJ)C>4$g.!WY5\m#E:2tM"o_TkOo&4#)W@fQ0L[/Za>>21%,R*-(9$HqQjePkQ"J*:hJ@P44C8^=o8i@pU4S.b7C*9NC^LXsWRC!ZRn(-sQB385^Gh,+>Y67I;Ac0Oi8X_$<*<4Xi7XgH@V&ef]%AOSm)[=JR;jDI4^k_3G]EHX:igLc&(QC7V__^D>3n<GX_1AV9Q\0U$&8Bp4JlCX_RdZk-aG;puR!nL:3,jta#->?eP-I9rS"^eKp%^`S-qcVK6M/36*<`igeHCP?Rpp&Jf!8AXAaZOA]YiR"W5Ah#8/iHd-]!3Wb6S9J*@1PY.NW`cTtguq&@h',ju(`j?q$GhLLKYO-'%ik8g)4h9^55sXYB1M@#:=dHSABV=6PnQSULZ?_$gWQrd(j"c1[DhLhU,)NMsE6/oo/&^W8M]*/S4MXaSS;M:sL<)3L%IRL)M;PbM%cYR7Kn*B:iL]D\QTLTsb/Hr]!!"cd0D7>(r/"t1nm5*L3qq_.eInP2-BQ5)a66C0u[\c!/JEP\2k:51GK8!H73tS,(FNgEKl\g2(%jK$B.VEac3CfdSM:'6BO@cG_?08%(THf>96W`$P'h.<tg.>*d/iL#DD]lJ$d9L[O!BMDBE7G*c&'2T2rZqq*FE&qJeMV]'[=i%2<%FB*(Gm[&:.(*.I=R?'GMQ#@a*Q1R_Zm;90Q.Wn-BqXNX]cSjZ^SH@hB6oTpR%Pes</h'Dc!:bZTg;OUqUls15$f[(Tg9<ILOjY;S%pnA.`=d%6L#jF0;>=(>N>%r%D9B'RBJkZ1E3N,k_!iuRR5cA(jTZ!$EI_Q7-.tfMh=bm)rD<RN"74%/U`:G1eD(^7XQZ4e3"=F$R%YDP>o`%&':OUTY5(*;r7rB?q<,U6]>CN?g]WfRgSA9XDhJldmhLasF6X8O#/qbBhe+rC1IHEYme>V92659U^u?V:Jod6lkl@Me3(%)=X$`JYRfrlB,b\n;oA8rT'-FV?Y*nHk;+jPnHe*D348*TV;"(5a%SJ5!grJ+]7t9JVKX-FlO"7bE(8&d0Yn\q1b#fPc=oh)iXu#%.2o@?5X7F&)aR)afQ#7k#aLT#"XG!@3:qI?(S0c37l9`U':>H!';,LS)Wq-o*b(1.6pW7k6X([b;+OJ*q[mgb]qL33^63VM)HdUZ%Ta$KD#/`38*-hJCdiiQ71Ron#6g6-1dLS7.91^nHe]2I>l3&Bg%o\4!LW!IADo\XsI$[^Y>6,q>qLCkd5]5Et7r1_r&IuZcit[qo%T#@]@eut110e%D]s0j+&0Ct&l;;l.V2BNb>5:('!B0Fg504/Sq.p7p.%'9H`Zbj#\D&3&a1uVKA-RNd+h=5<#X^G9kO5=r%<UR\K%oNnD;c9<121&]JH)u_s3*:f=25l7+U'(cCB24c%I%Mo@T8)<sC-@\*i2Y7#$\#AL9puImI3e;tjT<+ZT^@C:8ao4Cu;k%WpVREqZ%CocqR!T#pQHnbE]2p&Ec3Ye'*_'d-U9*JnnK!ohHnD$EF"\2^rm#t)Vkel0e%MBV`IZk-<9nJ+b3o%g%1IaiA\l@)Jhh4Z)1*].@%G'(,N(9g_7;*Ts-p@di:Y<,dMB1lrDC,#mW!+9gd=aJmnLTHX69;l#ebn1i-=kRG,)[>WGm?4Ypm6+qq@dO79mCTP"1;<.q81&+.%cs".n4Ia+&"p]2^RBp0J%XPi4/EJUTDLVeUStn_-1Eq1#Z_@$J;/)[n`s9(h^?@sS!2#Yhi]0Z`)dd<[&jsoA_1MHm.ZT&>fZDMa%=cs/2,`P3.L]G9l=nIeK[l79Kfk@jo#N](7>,4gdK$t<[4WLR@)s4@no!+Ob*X`)f*m=iApRM1I\;f#PaNojGZN0Q%??@>S!bug2%j!g+$>h<Ti=p7HK.?81RS.gP#UegFWrQ[_T=Q76nee2sX1k!KF7as1&OY%\9:]AYpP^*38Jgt.:3*AqJI!]nA(ILXB@+B#@,-_3K%[oJ[e'#[ZQ2i3bCOLaM2&.AuTb4od^7'[\D\mFmV.0s#UJUi?9A1'i:[PZRVAUE0Ji,Ihrf1NH!Ainb])M"D]4UKdlKc5D.Lm=,o%bh?0[HS@Aegt=m`)'T=k38.6h6>iX?/&%IT(iQ_>5b;\lR^XhMTnZV0V*I`l`EEo^-'e.4(^1':OU(P,f6[si;e)m[irkdUIkOst%/g@fdh3Y[fX8o'0p[/`d`01pF3Q8_6a(rD0<m8JB_(k,>b$n)lp'@(o/s+kSP3rQ=2N-UG-^4lTaUej@H%JW7ZuS98o//kWK:CXW%Zr(\,,iEf[4&(/ngDW71rQ)5QCijo$ccQ*EX3RC1rAh\ig\,Wg[a/c&g[BWJW0idZK7PJf8Jn+OT?:kpgMC!87HQbf5-pes?\qW%%-nM[]IkegKq_-]LYI!UPgCN/U_8FAW>.A,mJHUF2@0-]"(\*-qG0>r)<O'Jf_n!0GHQK`nEg5B5pSu/#J3nUF(Gr-m),?c''l4et%hmpN5';igI3Y)57GJ].=jTgOAd=8ga$\&JkH9t:.?R,7F88ZNTJB-q[>H"urbQXIt^W4JZ;KLB#*o7s@pALJ)//tVPK/D"%G>WC[%1C,BceoY=Q):r8d"RR`s9Ql%7IHEkMkC:/(O#kN.XYMA3V5McnP'G7?l:e7r-6^p]jYT>p+U)F.5$mbZ(Jn\$b;Q3pc#8rbS];(l%.PFpBVYK=l[>t*W(Ck7M4XAsNGo0K.;b(gU'/HqjB;>hKY3QNnUUpc-;Y;'SN?f)o;QL?@h>:%EY.&&WI,X]!+^;@-E3;;WYNq8p%P?ad;#XhLTO5l*o-Ze2&R'On_2XG<UK'jA2redQS%WYbTEImK7+>Pi93hN1P";]!e-p[k/</9[D8;lURrNUjU5?*NCEsis;kQgf<%k:-]$i$X'1<ViLf"YJ/\WrjN=>nW(VmFgT-N$f5N'"?u('T$aQeo[!q!F:gS(-(nY^o-MJ2j*#%n>dtM60/k'YP'0A1NCAWHIc>-%On%r.'6;u5j:621.dW=k9YtH^>UbinVDJFDH`WR27/-T/?BgcG#JeHfE/Rs3JFfpMW"0)q+I/V4`WG]&W4\5hV-^\akJ@mt0`q(d%K6dQM,YFjBLHHAl.A;J%%jHS1$N+F#WoQR&g5ESbOqdsacDV_N(l$>[;Cn=.&g.q(ZED].Zq@/cUH1p=<7915=b#eu.kltiGqb]g%f`+cu$4A0m*(7Xp'G@XTahs!iKYI<s'1%IC7su/k3i_?aBL;6PWq=_BDCSlVgWa)rc+mm@FqpVA^@A]tO()fZ^?nD"kdsG^T?WuH%cfVFhMCuU-F+)fGZ5;o^mY;-%MPP&OHXbd!J)>Y`(+bKRbh_;YAAu<f/8qG?9QE-T^"F(JCA7ZF=HG81CLFm4IZQq0AW?eD#XiT#%\1a;VT)]CJoMUI-Mg09e=.KVY\7l_oD!BZ1A\<is+WE"6WAh!B:Q9#Yn#h;E+iOeifU:r35QZ7BWZG&),^N^W<^YB.TaX@P/ppbI%6kKf62^=h"`N?.K#flH,LSu."Gd85i4X@$sd^)pd)e=OeXs-I(p9B+N_R-8k;QW(3@/a5<d8K3Kd.IjRl?o+FW@sS]mRCH1RZOCJ%/X*1oJ`)!0<su0*?W?NOr7"#R@\!`[]ko)#$-GI!+"aPHp\b+Xb]KKd4=fO6&JnC,TX\3p`*+L>jl5:[=FXHn'e_XMjl9#K7fO)H%RYKdB,XE&.iM/JN-S29;`<]M2n-<umU3o^+QG`BhHS<$)/9X_SYE#oMM:2+up8hR+T1Tnu*'uPG=&4(=SX<V,"l>tjU:3e/ML@i*%6%P!O\5Y.4!9&sT@O(gA$</!$(SI^4&8lqP6`D'"&Gb]k02baI2E1d[>TWeq/F[eHm4K7_c3j":?/X%*EnC7^0<6@%Z4C[gCTNY)%8e]98SOX3T\YeKt]X4OG`NN83/+d7Co&4c&+$:Mh(+0Lei<]76JLfP;*FU634CP>?&S_@hU$eg'^XgTD[a)H4co7m*ZHg&>b\0&@%P:gmS-3(9rbn[;fY#5e^H55iC3ONJ;Y,\Q='M;=fAL,IPnIq`>8DV,)Gh%[;[>-5/rl<3q5ctPij^Dep7*c`;Q]2UUVS]?S4M)?K%@X`s0GkXRg<sijNXqm(bHR0=dV_$:]Tfq'G6tjr1U^c"qJ\FL-%cqS@\re7f="OeM3BBPQO4S`tnq'!&Q-N*V:6Ta$+\X'Jj!i/-%c`jsKnrJf\Uk205s7(+_VEATNdQN>(@U^Gb@0J-Tie1;G]hX?Z1pN-qAYmEn@sa#Brq>E!0:XAJ>8_QIC%<EKH=S=k:b.XR&#i@J%>)7bZ#dHro"VjB8Hi'L/F2+c/3*INP6"OWjVcu,-X7U,)F/g;`jq+;^8d59;;UG<GK.e9ZLu(L!eW>'p"q-@]A]f)tqD#bieBoB&%i1/frJLQj#VgZ*@+#!B2"Tm'Ob!n\52,W<S\@<`m^p8U3-kR)hc(Z9O@UmAnbG8'9PgB$E2.$B3O:.na$XHuf0--;R*0Ooi&qV%O%<hQlPjWW0.<E>FYd&WMu]j:0IH5b0flP%Ff%>1*3&7LlS].jME!o%a`Ykg.7nd8qR8[ZEN?VL.WG.AEuLNY1Z5]H3(GDb[aXS,lW%?KV@oJQur.U?#1pMipJB92nV:ndj"u(&A/4QEYGbT6!2VC/Qgak>b;`5mUL_((6!qPUWS6RYi\/\*gqSU!Y\Y.3;ND)ik;=$P,@A%A')9;\P+mc??[3Ua/2DE@8oWh`qpKX!B*s[#`@O2b#g#7",8N1RSTe47L`t@Lp2p(r!N1l1)G5!PqeGr_=ZZZ1@"?MKU%\Q%b$S-%`E;sSk./eql6&NqXCNftnqW9SI'rR/NEihG*TC*$:rXRDck9?R*djJKaW6]-LgB'bpidT5_X*Q+!EB97WSE59C3:7j@IrrR6g-S[%Q,aoAW$j2L$)%[:SOm.P1Z5O-Y?odg$C`0Up6bJWW#BuLhHj.)$"J=hmOmdtYRgXh#=!AO-:F*8$U1(YSWcY!_'>8/r:]t:W><Mg%5("m.VBEZ?io1'"\jJj]d)dA3>"P5oaf(eo;)7=/>31uA9o]>BOgWnjb?5hna9lfCNIn/<"L<-ZjT+./1_;ILZ=Y<W*E?F6K9Chm%>-\EfTMHt\$,pJ&Z&ej2'fUd:#nq^60trd^S5S]TNlGeg-m!$mVoH(=G7PnI'I?dI2DA#8!'2eiO!-VFFO2\f%1D5,Z3%NNbCCtW%:1D`VDB>tUU'o/t!Ere[<$-ei9s)i&J2]b!^Pl.=c6EMXoCC?\<"nDL$hp#j>2(nXe3CfM.;7Q$e_hPa7]\_uJVPC(MPZGo2"9u9%K64ig.[G,'$#")qOb\B9M+q7_3UZCDq-ZAU@sLD4h#3LfBd-rVG<2cr"Of489L6L=g#Y\R\C.&E!Fb7A_4\.-J;f=G$]-q7S$6O;%IV&a3Z`!p/1ip[5Z/>DsnK/rA/GRD`%:^n:WDJ4%fhIG7eXX\g`U/j(WFE7:WA=2&V(6]'goHQhoMV!Q4!s)KPT'5BT>n@rLpG0+%hRV25RI+hg?2T6e-=8B1.J4g/#4;da>dqC`2Tc4Pj^>KEAinarh]3,g)Kn$b')B!+"h2^<ANM\<cF2&8BA;l=5@eLacO^Ye"!dN/%<7jMl%JZG1qugkB("o70aF,A`eYp/"`rLD[*j>?J%PAX6m1k0!($T!a?bs%=_nA\C52(JP'qhX!224"O<%JAWJU:A>![Sdb*tcW5%eG4Z5:!/EkcHR+5hlapEM.N%^6po$X:JK8Bpa$9I%$Mgn[P-I?-Ln"EXs]dbk/W,nipt,Z3Gombq;TktAel7!i&CBR#_4m^-=fW_%BF38MS0(n[*m=nhL!J:2Q["h:^mS%k,:FTk.$tBGoF\ThAV;E]S&8;J@^[Xl^n37XVJNFE,u_(K)uc"XgI!o,47A@mY@&qmk2hoI%#]5inX:95:Fb#@F?Y4#0("Ni3mssVi(f:cPR]aP>&%u3dYDO'5cgLbs,`"i31(/&/:/o%tfGeHImXDig?cL2CZFi>\TOZUd%K)&n%dH2^bY:#Za[<ZA+2&M&3d""Cp:BrOt.'o]N;/W)-^*5K_/Z<M8*)s$2h6t8E63XEqN=Hq^FA<s0-q1uSG?(NI$KR_Ae:;C:Na^(R%7%FZ+qtY!qK"+-*P%+c>S^"d`n%s/d'`+%m$=L-$nUikOPn+)t_ueaCHH`A(KFaD04FWGkDAtLK6kTViP,[^[a%j^S'8.fhiYLIR%.H:OLBIY+sUn=if3#&TEp#qOC+meRe/%,9q,L2u@7*dG63\["Z(p[+7dJ$n!JY$-<745k`>NB$)5P_0S2-^lqPtVmDF4a?X;h6b-%,s\^N)Ym(r]ncmmjGGV%!!]4ZNhLEM)f+TEX>@U/h_)p%8;HrURm/d5k2.6c,@h?6+0fLm!@B/*dZ&1W&c0dE"*$5KC-7u8IjF1@%@mgtJ.)S)SoE;<72<dpS+gadA%?_5*l_'kQ##@ZYJB;6PH`L$C_ko:.",Toh_fkYtkZ4Y:cYjXL;l/[C@Sn#1jOAPCk:>O?ZB97Y%9NAWo!@#O`;ioIJ&Q*JFg<qXO5s@7Q+STZb=r3qHLma'f';OKT&_UiTnS_:_VabV(p?\5$f!+a>_iLR"c9AiSW1Rdqft?_,PO#n#%KYcA2<(8H0mfrT$A$1K0@!a$oM/fqPHZI),Hlt+D)#crR81&$[qNR7M[*3np^2bbNKd#lC^Z=1*qfo:)!8=B]XnWu1Fj5A5T=.Bd%nBsG(!W[%t2ug^e13BZ5XMF0Um!qcJS&q_WCbauuVUb1VcoF!-Q@R#VC(b5m\7L?P2%2od"=5?ErH2n9=J5GJ:TjM&\t1>6S?C&D%8]iY"oZXa<f8&\j0R8CAfYh#TNJg'+&Sdoj]^aa_/%uAZ")BZ9#:1%<6p]Y;DMASHH$ntn@.UgF:TjG$#XD3s'cQRS(#N,j9s*8"%f+X?*I!`NWX*?a/5G)(J0#T)_rSc2_!(TX=YJt3_RVs!AABItJ?6l7;BD-ejQdiiP.&ICI<LE"O#s'[Q82VDKVM!kN8-k(M9>q@?%A+WD#'8h*MV1-(n$Z8@tPN+$(/JfV4"s$W_k2B<4]K8m\`-p.celN(-*MWl&oRMrTh)UthIY1^o#Kg>P']p6)#KC1*eGZ,?^8/'$%kGN<<phJDiR2.su"RAXgLA/#.c#O]ZFsDcA3:Lb`e9Em$_3M6\0YI9,qkJb)C1$XI'rp2``1j0>*oljSJhc#8Z/X#h-G0&6&do9m%Sd0ph?'a8j?#EJd6`"\/L$>#qD#XB.JA7Q?;]rsqSUgTgl&NQpfi.L[+Kl?s23k=5OMcGG8NEX2!YS3hV&[;=Ob;og2QqpFK@Om/%:-:R#9NVE1,>A`h*_E>\W7oWjqa.D]'=U5WRT0MW==W,^)GP&O+o7o)J?:[S>LRPFT%hLsL&)!gTS<"'pr7FD;-?^2&B7%J-s=Y&%$Sg[`mc_^MEo5#eA*">X!`7;gB*F`$1D5Ia5&.>(,7&JUC8Vi27gRX32qus\d)T3oLg]'f<n/dNCcSTX/n3\W?,<m\[`h$5&8cs)%eBJhpAG&(],:Jli5r]J(+)^\mmfl5^P<,D/6i$b@=pCF9+Bki04>]e^FbYcg8a[n%f+F.<$p=(X_rY4k-A?^F$<N2'qXUNnrBLAe%aq7Mn4g8l5ZntoS;Sbm[IJIt'+k,9%;W^s=A_c]W<Ts.]+5a9IMMiO2Zm1[%`dUu]FZ7aA=u7iT!#ii_WCMe]1e:q`/'/:9Mg+`<%]iQ7b:bp)^N):[^.J>=`0d!c:n<'!*)2ga["hg_b%1pZU4")TirUGauH2oT,<Gu1#k1aK`%(D.f#MNb1RkYL@b%"-hR_"t<SPbX,%gPeDA.=L'Uk-od*a9uia]OBCh@K!(=di/Xn*3?:MVTocRl`l"l`pe@@GeR^8UB`6PLk-<fhE8@2X7qr\!s<"?=n4!aF_0pW5Cm3.%*X6DJ%"K16;m[]%9pjlcE-68'I_=I:Q\Xj2XC7dU`Z,'L:mdHDKJgJ,1ArZ[<KXnj+cn(4-WXb8BMtVBJQFk6.Z';O*<"(_WC&``%ZuE#^56t1Vh1_FqC5:(.gI5k,m,O"h$nO]a7aS-[G^fo@P<)c_HeWB4J/BMJX6h^tg%N&P?e5I=9g"6'f5TJnh3:o*@IMZ$gY);@%T"cNIT!sL=49a,CGrmU!6VgGH"K)(T2"]"HOHMB2e/rr!T@pZ]WuoZ(X!ceQPf.+5T]8KtOn6C-0535VD+8mg[4+k^RQiZIc+ad2%Yc^s9#;_[>-(u;;j4eH>EDjc&cdpEYBB(*"!D'(s4Dd#uj/!"-5;4[tebY^$D#@d+W)6^EQQE[,dKARp2(ORLXe4:l`o!\k@Su<S%??%OJ$%\OC.cajM]b[g_E*!b^c_hm/7V\!4AjQ2h8:c51a]DUh#pSoh&XXr%W]gD3Z47_-(+m$WqE0Z@7c%Vf%A!tN7Udb7m,eM!%]]+i%+?ZN4'*;0j]H?4R=&qkNXHkFi""`:;ZTn]eW2a?^4Q;N@)39Xm4LsUT_]%/IXAq3q9-@)^iZa5b3ZrB`+aE.-7$TSC9cC$,%RH6k'W+^Jh&(g^+fbhis^!0#*?=kFtQ/]>elY!Z4nb;cPPREG9?sC5M/8[ifC0An.M)l'qLOh2_#Xn4Xm%uG.2If8UU8D5BgU_76%4GsoJT%RU4?6!#[0Ek)T%MVk)8qJNueG()@/SdIFQZ7gT?Wh\@A!H5F^g)k"Er"[GY8A;mFTA2KR2AX#BKPE9"qkcI[J<eXM)746%?"lD20B]K.B<o^b]%D+OW?uMW=P7+6eMQ?:B\?&(JOM!3<;6Gq/<cO$7E;@I?G?!H0LT]0U4LW1Gt(f<P7(6L\g98k7^5X[iPRFP%=Oi?cSF_2!/UMN_<tGj>D9:(+]lSHc]Q7VeQ=p&e\M22WkX]i<X#N'4E7Ps4g%S=O_NScLHGNYF&*9pfnuX0r9.*/.*A+p1*+VJT%",XbUVun;::'[ep<C+`[-nl0c#\&JPLUYKd3&%jh(&K4@bFA#;%erkS1R*)0hn41)5X';\oni*ERMMrVd?U%3o3'"L4qcrcJ@$Om%a:qQQ2)mS!ZDc/l`D(eb\mFj5L[S'&4B-P8bq>MU'D&qW<m4Fb0K<9!T\@:,;G8ta2]Njc5-N"B^-7Io6t\c=aQGi"6)Lks=!l-R%-l0F::l$.AR]*L5N4)s3>N,P!KT`-5oq;deP]4fs0n0=]UZO(mkJETNjYmnF-[h(2J(@9D]cVUslER!H3j*/4&'#VkE79OL<m,-a%+2eLgj;<PHGu[a?&GtZk$6[i.e(b.=?jNb;6#$PUH;N!c*%o672m8SGd1L?AZ&QO'6eo$lR+:bqm;2XAn!(B*_.,@KD'V8ff%%/h%-UE>UTJct=,:ZBTE#+X>kE*ZF/B!`F^)DRuXX&4@84[4H<R.]/?>a*Zr.E58&(M&sAW$;-UHYPBahA:PHo2Cqs!MhO,Rt+V$oD\0%e<*JbP&.L#O"WMp`>31!FFJfH1>BZo^YUL?%[LF;Qka_!XSg@oRZ#7RKJ)QKbdYH3]9%Fbg)L_fYf;e_1n7os^"t9[1t#L:h$:r2%Gd,04c;For[m$$0!]"VeFt*3Jd0e2YQ2tUg$l4r-ML$hOMOaiP>]O#<ZuN>JO!#/ak,Jq<a8W0OKoLYic]fSh8eHBta]H,>*2llg%#P9`N<B[Y0&7/s-giA23R8k9<1*#RMq@R.?Dt_:1?W4:'&r".c&q"/D`:$hgW\o&*0Ti*m$EQCeMS#pR'00!`>k?K)#$H0SS<5ke%[!a(V5>4^,,cf<".0X=.-)U4='=^]!=?ML;qoRc>c.<*aP!fu"3K$<O5ng:(P;Eot=`S1dP%bf+`DJtY$V8r)/qZ`;kV2YiR]fI"%Qro+i5m9J'63E7BY\iJJARqW-3ScA%b0O^8pCR;bYk,fN'jl*W>G4kU1@(NG_<Xfn[5cTjAW%]DR"fpMI!5jTFj`[?rt;G'mDC5W%9aI%BND(cr[dKpUBenK!=tFiq)Y?O<X"1-@8Hj+]BdIsf>k%V2plPUr<h!.ORi3!'k?!:f["[%EO=Z^f!?NYPJaKtHi+9`]5XjW[%Akg<m^ko>+RTO10mf6nR%@cC+1,02k'@Ik$0ObBh=i1oC)Z_2cZ[9Vid>lk^eVZXcQC"Wr#@Yn$,VX=TINfT>6.JT8DNeXUN>>BO%%>k0HW*U5pH)2;aG?lee5V98e;JfLiJWO+jfdFtG6]l^I.KC-66-*82D)3`=,$LK^!7p8a/RWTJpD5\B'>=<CN)`]8!N9CriF(AK%OOoVA2,\"eS'daU&U7<4O-i9$&sYt!.[@$B3$5.*+-Lf&a%@hm.)QY0g=B(`moWlN*Wb0o9Bk'E8K[#/)W51))OQO0n@,Yi,K"88%On7=V@;*"@EoYUk'nh15OR%FS09mNFmfT8'U1(,,deFfX5pTKqa#^O"\RFpIAHWlSWQ'bU"u0A(eTZ-j2JPuYlN.KmHjP\)?S,M#%'au</N*Tlt=0-^(@bG[o]-C)-b9`rf&B\bLG/Xe/1K2jhPY/FTi%X[hA(i`2+AAJ?$pd*MaAOKPd-pYg,K;KjElm<7;4o#td6l:o%nAT.OgsN4YZHWZ?:Ph4(b,d\2dBk\D`Yr8>;?3JLB0P/XIJ@]*jPQ`b%r0d-#S2<%+J#2r&K3!89nH@U_Z0l%ncpYnWQ\.;hB-N@%e]R4dWm["n/:Eh0bbqUbmoCs>U3oueohT*sbfKq4(>ch=G\"k:im<J6.4q*<4d^R69VZWfT*nL](**Q:L.V`GV?/kaYf.CEB+Zj1%Qr<XD$'hu:]uca8:!:VeT/D=5E%r=\@Ho$h,N8usSM(tH-quS/.792[1ql4]&!#g:HNI-?M`J;Ees#'GHObr<P;AKDIk^'kA&rNr%:dr3g=/nK\n=pORb.f;=&>M]9=,>7'f9Q/]'+'Q#K#Del$Sm7pp\C5lbK3GBhh*AAjo\O()CdEKEj=L2OFF1I(qo1L#oKO/WSD&_%e#rVeo65_>L\7epSkP]D:lBJWY\aVr#a,ItOqq8,kG60S23^b/knn$$)hC\ldDR1-=F%!d$sZD,+`23IiMnX&H5IY,H43>OkUIn[%/dZpU0IbBR/[6"iP\]I0**asd!b9'V/5@\i5=\U[3QaV(PRf8[40a0R5&Ft6CT^`Z9>K?'q#dK[[gu3#R&W4elrOWg&uomeRbtO'%Y2:Pj?](&2<4OXUBYURoR/<V^0!isqBWVmc^mLO^!@Jko[:negFqNt1:PSHWrR$,f'8hm*,Lihlh1,5RJ,TBGqeoe9D(Bgb%B!2\%dSRtS<NmAVaG_<!_5I\Ca0+=9FEEt3_1tEW5aa8VPoQ'U#-+T>C7&URa@I2"`eqeA*A9+CP#VWF2E)AHs/<eYJefMh'bUX+NLn>s%nH`0*(/YC8Fqe_l3m04c)"]m]0(O5BRZ<o>DZs).Maf"*HaMI*@UWTr"ic^.5T/jm5'l:'4rM^SlWsJA[g*rKaNR\TN-bpF.gH2e%C-C]mRB(18J`2p]GOV0@<*2Rq'aq6p5T;Qu?7SH\2&uOm*!BchBnnp:9)u@\JA#CV/4'eE@+!UtNFs<1$B#j'rbR[k72%KpW1mYr%1=aIC#l,3R$Cri;k0_<>J-)f+jlZ6j#$C>$3$RAG5Ss/3dRV;-j>-pLV9L51IqJ>&'FU:$lBALNjd-9m2p[.Ap+CnOX%<HSEL;$i%b_n4"LfGs'WLC(%r+s)4GTXuaM&3mP*)aPU9#/7G1f?URI#$b`q*r=1U[V>^0,'C-(E8[>;cPi^HU(2KkLJ_Ze!_K.3:a^-#'?-#%5#'PbTF&cgC.UE!1ZA]R5<6I\nI['XP;Q(UKD?_"A#<3/jNI/un9`8e$[*8<Rea9^S0!6FYZ![pjfe<>IdD]^F9^&)Lq"/q*I(Zg%EsM6I6,s"e0?i$U-)14@Gj_=\"tU;tUkK/Sj&".@GH(<kR;3cl.&(lVU%&6j4jQDVeNo?%Z.CYq<lP^ah3p9G!c4aj2/VpuUP8Tu%i'LLU)0gpSH.O8Nl@NlfWpktb_HP.tgkf&bY(-MTG)`(=?ij<.=1b?17he+9*5:n5bJ`;>(,,(&<"G0X!eROTpC"E?fi&bf@+B\e%P@:;k1-e`l$!')+^ii!*$T>)Rr/h06#NW-tLnsd]dQ)[%W?ZZLLM0hl0JZ61)`!Rj@=:\7k!qcP).:Y[Y%Nuhec*2%nfBW=f#VrY%,Lq?:f=Nn7`P]e"B3@)<N[Ge*(n[E/iqGtA7m;W6lSlTQK&?/>0deSGVfpQ`KjSN],HRmP4PuXY1S,-cY,#1u^]/pI4bF^g1>XuZ%QDLl4(j'Ia;V2n*)LrXRe19<bh"4>R,\EU=7VJYrQ.W:J)0idf:R`X1Wd`eW;^his\Xf5H5Af4[^H9&Ff=F-$DdLL%NoBs>AW5S)%J`l,R0(s]98+h!Fj$V,Br]am5@slfo+3haP+QS=(gAF!H&5PgunMu+e0)lJ=3hRq@D^fKEd[\Am6(n,/$3aML^)6`kgK3U8%^);E%(87R%9jj_]Z#Eir:_0f(hENS2T_3tGo2<bbblX<Ale2NJEcY)a*H8pnekro)AP&^2(ihMR*.!5</\h!nnIE3]3c1pm?T7$=4F[8%%cqh[I&,SEfp)i2lrU2TE55]i7bY>\bk[)lSIKUMA'S#(s?iK.os7mc:ol'm0+9(O!s7W)bF8F0pZT$T&SA4pXs5dV&rVb@&ZTR%&%s8!6gQegT'rqcZj[t"5MqgZAA^t.dhs5j"Tr"&B@0(%)q5]"2`?KrMk*QAUQGPJtKKI7/^rmU2]p'4kag1ptq_-MQ\)>84J&%]UI%_:K5_fIm*\YJb=4i)tY-ms1C>LH0hB-ehPr#CHh"*MMMS>h!oA:Bo/Z'PbC2g(,d4qs]k3VlI/a5Q(AZp"(!44`1?$n>U;Zn,M,a%G;.4%EF;5[Qk2862Vi)#dq41:7]%\m!m"&fV]$`%4Qs_&dlS;6=t'::OMd>cP'UDN2q_Ko5OCq)q4,fA]3;"fd,hEJHN1AFDZ+I"%#/AmPZi9YG2,"/.q(MZIL2[u:_uGs6[8IXmmuXl^85l%'Zjr\N)SBa($5]5g_B?%'=rpFSLqU2I-1rBtX)H5SM+L*K1ObT6qk/\D%)d,j4&ulBB/+CP7FK3K/LliY_7o0:]5nJ'@Ol$t+[>?rdd@Yr31Ed6dlJ_3(:*U*X6Y>]NAg?UrU$2R#\1']V?SlL,#C^R+>7pjQ%O<C$-GJVa`j>@)1'dagHLY89S/FWHIRI0=<!c:(9hfTmfCQc3'84oMF.S+=t*BGA$K4#Y`2"RQBUfg2m*r7j]3a4.`0F-jLp`mP'%3c/YK^@'!MSnKN8<gL(f8iD?0$IhHi^k8Y:#Zo@<+c,!<"l05":([>$_'FND:Z_j^UWa-9._dlV/ht\#>A@<bU<X6@I"[cQr0Lc_%2?/:f(#)d)#(cb8k'0CMPjE4J2=p!1S7=6c4Yt+lBc!jP?`;`_c9nb(m;90qI:Geuph]lXGd^(pR]_I&.KK8+6LT_aiK#8-m."K!%[lK[fl6`r0`mP\*7a@]ZEtB9j%3[,p(Xq/n%FJL92Sd"69b<bdR]T1knBcV]Q/P3D#'l+VrOHb&+@IYVJG`=90,gNl(WG:$`n3hH%lWF]_f(ETn$N(EfH!-3>8L(iA>VlXHF+6$*Rp7pTd7-E6!RW9.JR,;r>hB9OO)>TE;UgY8'UF?0I&4mc+q&5?n?pCNGJ:bo/=psF%#]b3e%p-^)7.#6)DM!17juV/ig+"@l=lH;7W/o7ek-K,nr&Li&P<,$hbF;]?h!m,%/th#VgX["nRU\K?[h>(1kWl-Oal\ud:r!*K%8Mf]1s,lKU`>Ni,/W/.5U-Z&i>ec)+Rr>\YgAc<)+dFmLcOb@X0kuT2cc'RrJ=6H34$T,V$A0;4ZB0>HS%t"ffDP3Oaa3LVlk)'.%F2:K&%-P/W@UK7j;Dk?^37U8mD:m.r+*1tQa>G6;W/Q.QGc@;a(`kKV]gEE$nU7ldC8I;A)\U1!(JRFU[lM\lMc%'iW@V9EC1`ir%CZTiK=kg-lc0g,.XQXeO2kE-__X[%N"na6/:upP0O>/!_MAd<E:`p-K.fAj*>=$X-+H`DQ"Ch=%.U>o7-!?@lk,J9c^"mKa[s["K%7C:pqddWcQLkX%n"Cr^I38F)M$MV6\L[E*bXC@^]9m>XS3P3,0^Z``8Z\Q=1!f7/&.qBP>Z10WBiscEM<JWF7[_Daf!9)Dqd%[E#%*BA@9!M1MidIsr\D)PE@5/blRNLq-8f"V;;nuu,Xs3h%g*agX&i]j4`=?6Y1UR9YII+sW?ROE/dC];h.2ZFe3RA_#Y%aIVD,Tjqr%4BiW(-WqUQc)+[6U&qL;:Q;D4M-%,Yr!g?rJOuW&bXrIE#k_'^A/X9J,;dpIE;b6$rmZ0NruKYM&!R#TD\Z+tQ.4FQ<i9rLlIl*7%nT$/HaWdNY@C4[6F'F>@JVrejGG4r/;6A`I>k&W`\:=/bME0#5n]-6PgQa:V)^AWM>?Up&?i0NOB[,G+?1V.`/eSm\cR[aSX>m<E%G(#:HEI2,,o;BUO>K"CtBlq)-dr`=,:A+VcMoPE"n(7He`aiA"H\86`HrjsYSf>ulpi+2ZX07#^L&6,Q8_g!$l5R9"NF%_=4\n'/%'QOn^>sMab.F'0l>T=>)0-\7VVTET6W'd(YhJ@,"%4X99`cJS:AincHmZ6!a.'f&,K;l7_oo8NSqhggrF.!H+%:S#O0LBD?R?Pln%e][\_Vi>`;!GAX]f!GXR=%C-c4F<Z*0Z3e=;_ri5J`tA]SsdC,f(SB1hCNjMpJ7^3qtYBDg!cH-pEtD0X*9U&+#,oDJW2,\"[t,2%lu"@!=#\mgDMotmq6mb\Am9-*7HfH"+0dY5<ur'2cEKtNe`m=Y_J._K<)XWOp/A5D.mYng?bMj_<2JdT:KC,FmJrJGJ:ML"'!>Bo%q'\?SXrg*:D#/USe"XIZeS.W8OIk'4g32.fAsW0e>F57hqig51pLh)Z?+Bsr#a+UD0hP9FNd\\Iig'.sFdOjjVuWgG(3l:M1=68a%]9"rj*#/"sV-0@bdesnNruqNLgYSN,:KS29mr?^n%1r6$H>nitFrk04:YZP\"of9jAmsXbJ:7]!'CGe>6'm!@/lh8Hg%.CBgar]4%^V3jbI+iD8&i^[Ed+IPj%ZJKT00FlCc.D*DpJ96:NgjnOQ!NXZT3qBk*G9OXA33-<a&Uh1610^XUh(YMJ(T)Tm\iF/M00[L9TK^@%$Jij@DnGCa-"ktF[ak(qGX-7\na^.e=r)5%L*U6P"ta8KK3f<E:UP,,0:t.,PWg"Kk`f0TRaM&1cS7<[&RYq;NL=MHP$R4TP8I`P%7FJOk/Ve`*Dg]mi@XHjHR&N2+Ci,ft<nlN:6mpVfK\HrimD!KrjoJWEYO2'[9]#@-ajkjB@fa:Gl#hV`<J#YLAcqr//=nAcSO\mQ%I!]nA5J,q`2V(Vno3f!A_;tq^NJ,dS[b:/g<gS-?I:bRqrpC)g`+D`0d6Q+gl)2nj9:uJBgY6>XBrFZFF1$F.451*cQSLUM2^idj%[5$k$l'=l&77B$kf`N/j3_68iQe=;5niEF_[(F^\)hMjWUhAFp[ak(q9UEkVPreTMFIZ#9f\#V4g<M4?D4fLi]Bn!WKD0kG;fmJD%K<k+iM'5_rel\h@7>ZWH;$SP=m';Wc5k$6h`!2Ol/EI5e(o!-pf\H&s8a1mB%blFITPhOQ+XXKtR*a<`h6LV5$#<6;eW\,1TR)3@%9mOJ`*h/9pUJdXk)^o\uHKEPNF;)W:gFNF.8n)ASL8mD0W,iMPh%S5)F6Vfb=?Cn5hDn(e`:UNGJTF%DZ0b(.R3rZP]p#Ui!YYA!%X3C.=j&!UEk$+U=R>Os2G@^XlY\kTk&t&F0dSOQ':eg#8pKrd4c0OHC:'8VT%$^.V$=>JW'<.e3'KEMrm\kMebcHo+4`<fi20FO:%qIU&H@W/8:&9W1)1Rut?Ck/=ln5mjC&c#Lu4pRJ,DG`&I,IUrJ6<Y3=P:n")n/&WaO98`;,Z4\jb?W)+RuPrE3Q`'o&*j-(MfQ?]%D`UO2BDWEY\bURU2/=*-G$dFM[O0V0R+`i-jVM_]&hR\bAHQO4@O4%kX7LYhX/k!60G4$%Y?J2V@om]/hs\adc*m:\%H0+44m1Q[%jH[>Wd:XA"#&poRHDh+I/O[3tk!t9FGIa910.bqC(l31dgLc(KB2o[M-1$TR[_:RS_R=p$+mcj+o@@,VA^08jj"nB\-PNIpA@u_S%]A#[5]Ke?0UAKu#os?"5]&E4aAp_-"_!K/s><C9X2R#48drsuoQn.1Za0*.[QUV3/$@u(XhXCK(Pru$j\+f-o;0tZ>fL`K#T%e)S%\?pZn)anDrg88C6oU3s2EeP_`QfkgE-*OaYg\#jd8W4iMWS(I"FE@D'b,Dl<D6rX(pJh!%[f-3P<peLmTiRG6hBjIdgS%bIgRLX#%V'D1e+8g#G:q#mq'cCPP&VH8a6;Abq@mB,rMS#e@`rtoIee?nWp[M@gr,YgKWb]R'.4ENfD7W%[,'=hU,?UR"d/1efSnt_RE1QPl%>cmPQ@V`>AbfVMEp3rFsm7C[BY$XHK2HN*<2emFN.%fn%T`dt>?:>Jm['Als;Pt*AU4p;_HuCDp8IP9?4A/92-``SfoA"nGFre#0%[Q*U]oCG9PaY)5&#Ti-Q!_a>>31<RqbVW1'MA'oX_+iV52d:u,`asb]?,bR=L&#6uf2/;PLt?'cpRaa1\Yjb_>t9;>"rdqog6U9V%2[W#HO#<N;2qi#Z4q3BU1Y6fZTi1Klh;3(TgO(dDD;joi?$EV\]=0s1GcY_f.oM+V8LcH^N@L$B%Lm.uq=!/]S),M@i9&[XTPq4!%d`Z3)>.2,ZW5%-aF5-]leML`Y>P!KU02!jG;tjkf[%&6,DUYo0Pl8$D9.69`C=)j`eEf;Il)SIrmC)n:SF9jFb.0(^f;2i@-+JiS%2d+=%UX&,</FAbrA=H<:'!GhY3\="7hf2nfV6aOlZLlMqgKX,c=iPVjQCq_%YCg8\mCfWfcYWJ+7h,GQ[$6NtXR\j+[h"%4F)N]4%(Tc?=O'j[k<qX(R=4$9Wa*"Q@n%*rG<0YYpEZ+tHBT140[bK)k#7>9&lgCb>4F*H6T@gT97ji.-s.X@i7)UPIWG-iqDgA`rT6;:_%!8sf:Da:g,IY>oH]l&2OD#<UnPW\e`gYN]c&VF64Coa1YhY63DpWr^8G?[i!6g!3[F,.!s>==Hri:'eVVuokJ_JO4\NJ_E!OZhG_%Z^ks*\?fpM0ho6c6YEMBM!FUF2VZtuK:5i<4SIJ%RI+hf]8uf-\D&da`G48jr^#Y?PAlseE.iuPCt(hCUO'oSN1uc]0FK?EUYP&%%6AmP1J&7N/_Z$%83[Y+tE#GUR>V+)=B!]s@+saZnZ4?Dp!1bA'bn+nq-$.oaa..Df7ZA,H`$A=PSO]*+Ks$@.:R_ga;!??CG0sl0%`DiA-3`Sc,_G1m1\6aXG0+aB+n<o/8aT<S.:bSWmY@5S"D30?)D:pNPcdQ,cWca@S&*Q-M$gV!'n<%517.jmfW/3OMC1.!TBo1?t%Mle+Y*EVODHBfX.=fH[%A4]K_N.YZIIRa**VWDJ*36-rm#'@+L"`H'&\_-CQ=W6K8!l4U3ZR8[Da"?Xj0'#`E^M4C9UL$4H1qZQ@%dtcE3C6,YI'_1!qf_"<8#-'G,8*`V'BW2Quq79F9mDr`9PuiIegR\5jB!M5]q6\gO+I5(mC4HfAOIk-%`L#oN`R_<XYpr=`gDdp"%e`I%\YbS)]YNScp>j8WbIU>9U[^0=\Ig6KBHd6]YBe0DShl=c9RggJb,3YJ2o:(A6MUO)OfhT^,KPue>^tn^mgP-c>h&5`"^LTF<%%BAHu4\>o"gOFEmJ-bOsa%(.l%M&4WSR3H3Zk_e3iOD[7!j7+qlj<=&$e<[GH!7Pf>t6%0?mF$G$$-d>P@OXGed6_N0n"N;lIC[-%o5G)lmD"5GdJI+pX\69C<74Ye.s&()0\P`2C&-OBL<)&f8>P`J[dt6OYu#qtG.utBmDX6sg2.$=E'Y(DY(bpd"3&2'Dmm.2G2==P%>e0frmCYY4,kZ&eob0n)eQs+?oD[VV"I](b0,$1Ok3go!nL@`2,8=..Ll1XR*;;+Y.$n2][@`\>m!%3$/0$!B7c](^jZ!1M\$F\3%KrhXr\"RV(aN=18H%<J.r5!R2glXel6IDBr[FcF><d)ZQ]j%OHqdW^2.#IF;VX;47IHj*:,l:tk`2J7sG#hU0fLke^&KQTP1P(*!%g0F#QWS,TmQ)ZeaAGf<5;ocNd7)O>bgYu)RelK6?T5kH`1"\&H)pb8a/Co<0><k<E_qP`?lf9`Ae^`dqAkc%MN%(UZD56meW"_]J%HIKd(5D/s_;=CsJOIr]ZW?eaP]o'dQ:o>Il[b7V<)34#X5ht%1D[e!6g3$?KDR%rBlIX@M75o7sgMYj=:L`0p\7RKl#jcaM_'`Bf%BQbd=5CN'GDi[V21DHG)iA48&&uo6-ZVd@WAiomJ.QOtLEjM=_?b?cEWNN4:2ItAmWoQh$`F,>+B!Xq*P=WHj8Hb3%5@&a66j:s'%db1[$[Cc/22AU*+pCXYV$,96IM&/<>%GJTMXhI)B7ClV!Z$%'eUqUN"^=M4[a(=r>ZM/+98<5pI]l-M??5KE7I$MlOS@8$[Xenlf%gUDpI\%dHg1;$1adW552\rY`dU9fYkc(X=bjrrFH$4Zc.mQJ,;oR-!;[(Peh&,<@r^$a;bRiOBklfP!MZE;Tqf(QZ!:)a9l,sRtb%g<PftErieA!&iSXm&fYm]05U@(.lGWbr"!T6638jO-kP+(;";:I71$ZQ!^i!VLa]:?SJ%!7##IpGMBNDhf[W9J*sg\'OQRB,b.Ed%.APg.'QI::jQrjDa#p+lbQsdHoF&&5@c8fVreJk8oX)m<FtmG^AZ;ZBq,?<gr]=DYOc,0H,KZL5,f5eGN!DOTQrJ;C$E"FUqu>g)%1'"c)SefaQ@-Z,R;^5%80MPqmVLVR<n%?P8q2KPo.H&aFVBg']9G(H2do7X^N2mDuP9G5)].qY^lAn&QM#[7Ab[YEZ&,F%0N/FtW%)i>P;ZWC!Q;b:\EN+HD>@kb=^LgUGlB[.H[f3g$mFqrb@[P=hUftnGGUr"f,oE;rH=Hnom@*%otY&-/E/n(^ce@oaBKA)J6ZCh[W%J_Ho"kK-[#=p+D@pC(MPao/[r1q*Po]>8NZ&$2D\A>IEq->SC[%AmUR+AqJG`"`[c(DNIaHF+hV,'V^8"X8prYD<(:[4=4Oa'mTG%e4&KF=F:gk7%nX-9XVsWL$QkKkq-DAcn#"EV4%PMlY#njYWV8<M.N&"#X.Z7XEN$E*gf#d1P%q#QjR(4P&kR8X&``=f@^6^d2N47%F62kjel(9:8ZA3d1"rhN@#8:jmV(Ia'[;<b4[Zl5,KCBOH"e7Y>I1r%d-\+#[\-iH7NeY*%keijL1S6'=4>Ske@MD+'J(dYTV''>%^e)ZmgUM\^lVW:8&)]=&0Z#(mBFGjoL%2R31"Lk3HdlO7qYZmRkm2`rEc?;mk7r9HH.VBj8o&-cn+c1+jDFPuoIM(Tb]>6#&aW@&%oG.<">LY5UFW1F<PSH+$eK1d<$-OW\F>^c;0Hqed7#_C5(QRJ@LNK.CgRuaZ`E$W$rdhXu>!%Mq["JA#IcOm<CJloM:_M%A;!69B%e[ai/_cF0uQgU'A+#R6FOq)7VXrpoND_`HiQ)hK&(;:V:c$IgKlI[nc?o<;#mIOr!D)CU3bkS.0S4SeS7d)5`>/e3Ro#c2M?Tq(4%hV/sDFfgq%k:EU%M<ATA-tKbqCY%!mfS6"9A)XAke29q)'_ODN@!Wh`P;)dJ,(.@gOK%;^AUF%M+thbdpV"+)Jm;)TO'os.h0?@:%_q)s1m)!I9L>A*bPIbHJLM`gr7fi<NG`0u_2G/8)$)\ZKX<q*li-&,D-@[sJW/AMH7KkJ,p]i]JW0U8^-OGG1D8Fe_ct^!PB;@C)%rgAMrKE&)fE<r?8[14cZdD\p;8<pbt<g=eN9ac;2P5T4L!nEN5^_9-1^/!&?UJZd^OHG9c.`)1%>,/jm[MH0W.^=cM(CDJEC=@%`%A5nulDf6=?V6.BCqoA/%&s"&irXN&9M&iS?ZsXC>h7532C<"?@WhDEE3G@,/DHlB"Kro]>rPphghg[mC6F&Pt6jbXkL[WE_qr)Zm%'DiF=O_oQsj?jf4H.JjC?c@0EC[u<%@tlBLVf)"KRcQ3tX2A#,=Lp03:#c#.j>YgU,kHS@/D3FK[Fu'"/.FMpHFL&1_raM[jXAYe%S*oB0^SAsO#JPqNP0iTP"ehg60p_KbUQ!27*bT9dZ&uJ4Iq5Y\\,Z>tJ!I8KTE"2[s7p%$q=@jYScCgNXF1r/Tl`XT2_5anUG4[e%gVnES[]T@(j,W4DhaK0Q"j<#kCr!un*/`lhK2i<'iDe8GKa>o]R-1-g^t_`ibU]&".*5m:T7K!BFBn@W^`6)_h/;.Y%^h!k0b&]E%a/A^_^g&j([WqsrJXXc*5Cp?V,\hf0F43ZkoaT+KUa[UB[K:LnW+<pPbi*krQr.6D@/Dnl`<sh_W+E%?C^nSl*.=8A9nBjqVta2@%\bSpIm:M+7?n9K^EPcbCn.R$U@6'W&\$+Vm*(J!LWaiSilh\=F/;I<7Nl-V5pp9D/94Bnf/D2%sj`&Q4LsN=GqW</#ToSr*>X/c`%n5H^s3S7;0E$758K>LE#+h>BUS"6T#al/fb%CfA#;*HU'/hjodO8"Ci!p(H9.?PU=ep]o*\:IoX)j8)=%E!\tEZ-]g1'DX-f]Y7:%LRT&<$H\unc,+f1Ee,G/2]rpHC0TQujBr<&!>ENXVXCPEB_J*.R\)PLlf)lj.i\dmFND%4*,=aami,'jG\u,K*>sgR93]/O(l.E0%CtD?'4I`"eJoR_Smi._53%E]g@3"3+Yh<D<DA\l6!oqYcMW/k`];M>^e9O+A@ZKFPNalZW'Sge)jHEIq%^jo:"tgaJI#)3*%E<sa%;m.kb\pMCi$c^GB<]G-9\Co^%+.cj[8)k*>pbOi9`o1+Sh)QY3/__;cJW^jd"Y^dKQu1#qS0<jW'FXecKlJ53Pq.dqk;$CQ*:#,'%^7mU6A(R,R-k;N1R]U!&j7$fAYB1970\tMmA2"K2A,Qbp:fGK`a+A<hfF3*4K5ha;EJ8CW\\iXAj>4"nQt7sh8@iPgENHh7Yh!5&%^9sdu.2^+M2_M%+ZY_WaY6"1>1e#I1_JuYS<W-B^^=&PJ_N"\<W,AFSOom_ID/ff$>fXJn%cjj/ahtH8>Tc,l!p%]b4#2"&VgZIA%!ckg8n>!:>*#IK"d+j-k([19#N^+)`)#b9RjNs#oD/M@q_mWC.h]QW+CSp.S5ji&"rU[jFGZ-b4E?*U1HpJU#7,R.!jBA/R_d,6>%cH=Hp\3LCSn'VCm&52ROAq;qck31PVT`q<(beB#^RmbrU&!#W<!7_kni<m6X[bSLu((ZK%Rt8's""`aCLDWkQ@tSSL5;^UX+<MNc%^C1738Zr&?7<!N9eT")uVf;fSBCi%@$\HR#SAPNi6uX<oZWSt=+p9i!=UKWtJdWum;]U/q_1grLP_J%m.B8j7L>[$aQnJ__R[R5S%F9FNsUUN=:"$O;'&_t9&r-AVY7*91QYn10V\n:[m"BWCI[M[X`E,\]7^bQ%J/DbV?E,^+C#&tH2.ou"Y6ZC#&=e5m/`6!$iE3+tA%7;rc5nL$VA-ptK24;^Y#!dJh1!$"?Q<re!U7(=I$KHS\X_'+0C2cN.``O.]b"G`U,5?S?0iF;5j2[!3$N-*+(,<33=liojs/E:O/%@)HqP%$rK#.p>Dd&6H)H?9oQGU&'=iJN1aM>VY#3"$JADB%=7=KL>\pO7!:i;:=&,pHih\#'2o3&0+#/bsP*TE#^Zh0nO?JMh@K=%_BG2B)6tt&Q[dRL(P5"+8&q81_6Nd'Fk710<_;Kq_.BEPKf'dn*]/Xl,/).VV06)e>XkFYFk>u<8P!j[9>:.R4Fdfo_h&_2Z->#Y%1tKBk*AJO-$P!Q^TrDa5/dqthXo95piGd8O@]mXg6'^Xe&<8:4HI'NK>W,[UN#6H$b&@K$(_-pppDXCU@JN+H6GAt?;"=)_kSPqF%,%((80/4GqfA&qG$obAUL2XM\iR!eTIZ^_JD+AXT0q:_N^.-.^qV;=mnQKYIE4i##*ff4+2%qch%#5')*Wd"0_ll\C@5n\:641SK%(q/BX+(7.AjD`m>*;WmjH(5ueYOq>:Ud,o+C!JXKa&h`$,(V]^8\8@i=@+qPi"uqeaWCHqL?#ddgI-bScnrAV0H<#PLKME4/.5en%:)SeU?VL)'fYVTQA'GjF_tG#b2QPLhS9BW6rAuT$4jf)Rb$<X@`%fKJOJ@@d<.@XN@4#i>F[7oiU/Ye!!oacVp2HjZ3(,G`FD)d,%-.n8?Lu['+"`Y(XbuYI3Q.I#_$cJ`(H1Mn$&6D\Yg7si5E<t\Ch[pmITs-g@UHffVHDW3K]BuDD7MlWH;nabDL;O5Ra?fS&g*skY%0s'L4\3[Wd7Gcf"7USptBA=&+i)bg>?m(KY3F'tNS<GEhJ"d=hm6/+s:`O54qJp$&!WliS_(0JEJ'd'_`B=^9X</Bl[Je`3X6g,s%g)f?C6iE@&j$:UYG8uAh?#:Z&N]W4>A368F2-t6,pCcmUNW\tME*f,:X6/(L4,u[OHuT-1*!aTB@DKa!*7H.VZu?ulS1!(c%*'M/%,l6@A*/>dUY>)cN>bAWV[@j2O\;.!Wol+/kjGJr9_Jo[5,.jK+3/DY4@2q'G%<rbL_o-_5Uqo$\p4o%ON5KAEH.5PBD?+&]IPhst%6qK$k\6p9k]*r3gN-ff*56["(8.8kn8-<o&YZf^-OGbW$EWS7kGE4hI_nk"(q?H#B5O4f=!BF*Z^Yq0OlLPMGE%-!/)2n[GENnU[%Na;7/.<$9<Is<5,3"E]+!?&pt&O/K4Zq=#Gi-\59EBl4,k[-;ep,6j9V=Jh=oIH"jp%.4(jH-KC]W%PD16\c2nHJ$9@U/@uNZ#PP%<_@On,e)#)jcJk8mnaKc[r+#Nf;4S7K/l=e`Z<8HC>rYD"*7a(HO"Vj0&PY,&KRF0n9T[M/KZ9#hDI"-o]G.Wc+]nt"5+(++bM?b%qD9nXTabN,DLjeR+>/<p0K2]rZ]5liK8>+tC_#Sg==70(f;8)HK=MKem/*EM3NUR+r.a@<Gci0Xcs3%Bm)3!rF0*2h2FDPFKi3<R%Wh(>$T8!`u2((YZBQ!gPj=?[o<.Io0*R-l#^dIF>F%s3j4.P>Ugu06&k=39J>V+T'"m9jNEee`"gTZ\TS=<;^F_;J[K2e/g3*U?^%'j\"^%M\,OKl\YkZW8l;F&;^8-Zd*a,is90dbl*dXaJB73!Um3G8hEiK3X#7q?5uSY3?L._7>;b=aLF,Eu;B0Kl`f?NmAM$L]+Vd%i>hF(4nr]0%T6@<D\npr5!cp"3@'>#$ZFO2)imo#(S$+OSmuGdF&5-C=#bDYHT*q9Qg`hj*1"*RJTFr=]Gh7(%>e9TE,Iq]kR-LG%SDb$-_)ZBU*bc=Y_h[WQ2P#o5r)Q>ONogO$=a\'mc!f/m&N;O*4QC<LF4a3Qrr?CA[M>VL0/WF5U&Gqg3N,Ec)kQB8HT7]'_YbI1%0W7:*$cg5+SbZ`7igg+0NlBOO2Zam/'Cg3W!BNp<_u4#\),O@<.1!d.Lu>Irh#Z=shM-0l:^/cprLb9tEIZEo%a[A!0ruH;A[VKp%332QS8(sQr6Y$'2J`n:G0B+%+qaR@BUhkj)1S3NAC];hn,<B)&bIMg@\nR+8&tVIMU;d+Q4?&6nT&9#W9L]D04;X,LJ!e@Jgb^q&%k_81De6@O:hMC@S=h=+@F446PEkugXcg\!o\VS9hDKlZ!7#f1OGRi9U>5(]R"*>,=$ccHQF>/F/!pEHQY^5/u"1j:b5eR0/LjJQW%YhZTR8I96Y%Rm*c9&K0oj$W`9n6C_Il5e2^jKsBmi>gl*(H@2dkg#Q;3/8*li<&0r6Hs^S_79j!7CNQJkuW>H,bF&(gmKfXa*ZZf%Q0_].i>eB;*Y^=g#A:L*M?W/u`'#)V&C*]m8WO7LS%#KDO8TROd+d2*E":@#H1m`c*+hNX&F"-D^D$HKE"9c/B%2ER0NA>n%d23(%jJ58]3=]854@;(EPDbK<E"6.k`?:3!gba`;05qE%;/o.lE";J]GQ^QV%]6Ne]*RS-1;%kK3@k35SZknj7uR<IkHK-Z]'c#86-4kh%*R8*P;+ZNHkHI(*?Eh8VBq1fa%fkQ.lNB:1(7[b@lFWM$3NTG>qhlSe_bH1"RY,02lu=l&[FlX/BT>aK$E"K\Tc<)3RZ"+=Fhr+I%P3T;+E)lY]nu4[9MkH&:aHcO'EhB%u*1$40Dbpr"38>*5.#/tHIM`ibj&ih?etF(5kFNP83F46&8<10$K)n"+bWf>53HW#\3(uRI%^C'30jBu5+5sR&c!UV7^!]b@tXoO@\3P9pI%cmh6GcL%[8c^rrZm4FX*+&2F#meVGBj/&n6uofR,(hq>_\aC8%2=uSYh:WY,_rE@%M`$oMqP=A&K]Gu#3@*LFM<#j>=DR.l%\M;2cNqX4ruDK@eSJHMK2G-Z0\1V\'&AfpdtZp-K>%^X<aUs`0qCjqX4tL.[R0(2DFb8\%ek06_P/H9[4KUtA%Sb]f+Z\p1(F4d*H>H\S%a/-aWC_j*n?_O6=s5ou,PbOTP!_GLs3uQ=c3O>F_JsY_ki%EZ*]DG2*up'p=MZ,t%EHl\Aj^fI@ReBCm#ZIkt)iV]/OusCZn,a7^q+`MdJR?CV(72pT5/mb2@$]A49II?+;+9:o0Fj._pi7NkJbL&!"^4#Nk\g[cSd_m*%*u\ZHrU;MAnHT<Q*p#aVrKi)p)A(.6`BhF;gW,'.:?)Q2cK7o^(DM'?ghnOCc8RYOTVp<IdK.Vo>W<3"e&_WHE#eH?4akRo>_,;2%R21f5Oqcbm*)ns/hcb]nO@bs*b3(aeZ?#p,*QL<*`NP'W:eCYjYuj!2<,m+%f:Z+%8U?EWkiDZS_`3Ie3_.V+*'sYM9FJj_Y=<rW%\Ai95T6D:,k57d\BcY5OB`d`_mbo>g,WH9[\]ZAb30)^fG(qdq[pg^4OFp_9^B6L7,5h'\*7o/4F(cp@#O)pe$9O@0chq`2+9rWi%pJVrk_`]%./L8rMHG`'in5"Br`/ku:f^4^[3\$%Jc4H0)!-a1E%*:B"(-d70P(UjSL0L[LWmiP^K,Benq\G?I!,;#$6?:Fg\Ko9c%(0.pJ3=$!R\']^GL+PKM&WhXL9>1KgLnj&^ODCd?Z(M_\*'tk:%ce0^n_fH/\H\0H:[SjWX*DFm#"1s/8B''ln7h\89C9]K>fHNL%q-C>1.+M/f!cgi75$YE_5d"j+\H9=PBZ5\n"QYYP?E>@Uj=1YPNnFl_<KL%[5`TR9%bZQs+<BKKeqN05rSV`l8.LR@$De'N5q'_n%!"S*eg>24*=H;Ai$NO6[id#fJ(R?RHLH**i,WXj!bX$*l\(h/L+GJd*G(DZ0h;g)R_g(6(R)AA._@rB=W0q$P'q3$'I;Np[LTWN#%LS;9S!%G$k%HeL+5hqj=cs2,EjqZ.'$@P?ad-XqnRA7=hF*'BO@'3smG+tPC*"!)N]!]?/r8!WJ)(Aj1`H"r^Yc_(<&j[QG1b?[E%ZR7FX<rjk"F%nh#9.X-q2nt$N1=(X8THN@SG%%ogTC<T=@1Vc6Dq&UXN`-)tQ9t[>BB0nqS#-e$=RHUnDHO%na1l+E<72U"/2pY+%jP<p?%O#SJ>T/otlW_M5/-kU*"8%</cM_6]\b:(NIUY2h#9?98n6'-/.OC"3.51uY8KVsTF,91dS4c@n3$p3N!C&-VJfa*ZC&b^1%Vgh0T%Q+;M']a593W7o))U3#ACfk2m\)^oa!d%D0n\eKP%9B3B7ur`91bsHL=b)P/?CuG/;1Fna_hg,e*,WEj4.LriN3=%P0ehFL%]2oj0rh."HS9l5b=[+meB`-gt[`0C,B^>;GLAEP)c6Y$m@?80OUX>6'2E8/`:ZSrAIqmct>WU>O:H4\;$bRE8&Y)MX]5muhS3r.m%BUH]q*);J0Q=\"nncn5q25b*nb9\.C?,K9:/g6WBh6:-NAXRYVEfZ:NX'n"n\r@Yp9@3KPG!BEG'X?VC\t3?@6oV#P/V1HHb-bTl%>XAG+PQ)WHiHgDG.57*m%opeS'UYAeC,t,uQqQqU`s\8]I#:,lR%)E$8%jJaBl&\H/MNM.3Os[NBjrZ[$^egKIGUW%_D0#R<'`OW%WE-/u:-\?F-)',,dP9O>0.=k&H:s$6lrhu6*.!,"1D.dg2r-cR6TH!Y,8WX+b_3s+'U1sDP+VOjb2Kc&Ee/7UWcXq::.lIb+!&I3%Ft=q1+ZZp2^:jrsiVLqfKgRkZd;W]mTH&_=3L1hQ_pua^)3i$E9/:`:.$o0">@7b6%[/_/)KdH`(!;)nO;ofE[o5hXF#fRE*mG``%UiIYC%FVN2?A.BIML"#7qg-["ANQ'ml6iQ`L#`jRT-(5MBh/_,f!4-RO^%rkEF:=CQW1&1#BGZjOhV)%\]",Y&"jQV@JMF6GT=f$%A&2d_Ep,tuEAR_WF<`b6eq)UAE?<Gc'9L,fqZ=Q5bBI5%eHP"^bO$H[!BGsV\AqE2%VpAMDEoi-IX_DZF>l5k;a=+<iL(PfjS1fL%is<`r@UfX`]VdD)$d#Zl[--odaUQ>5?BH4lbJP@BTiR98"[d;U6[PCCO^)@pG7UnpP!a`R3gCB$iFPH=;[U\+V:KU<Eh%+:2\MEL%<&!f$(U4rRM\55V%UH%T%2>,W^tDI4/=2B^._i2-G?9Q'_K,De4AAOH%\HGg=I;H9Hu4d*,:LSaf\r!d>[jD31J[0Vl9#)PTH$YM%_6]e>@`W`oaQdQh4B=)-WR\\j"l*pVlCm%,**05-a=&HlPr:Ur'U1u6e8A)XqhOc4$0?-T&M?liVNl^C8.I5X'5<0]E/3C*5tDLa%0H%\?amk>J\VERnfKR`n+M#P;oZmcaiD!UqEnCE4)BqKV]_:E65!b-<hou>F-&TqABn-0cT?AG&#[lRlc'K<gEJ`seT/V"G3>mkc%^.:/900g"CY_8Hu0(>%iEq^2Pgn+*rK5hF^/)(;!(l^aB`bPFV;77kJ^c;@Ta)L3K?6Kp"64DCm[$G5ni&-A%#<h.dd],!iAE>Wh%4LTi4TG<A6OQC?])=@COeX00;%jobS6[>'C"ZE)-CtVKcA;Y#/Xe-og3QYH_Gf!M0:PV8.e@l@FLKp.5&#Zb-ach9S&FAI`rD@:7%Z_<4jD8.SJbVDmi>D]QTi&%<Ib@sj;/0Ge&!s1dKPpG92g\?fRU()N%m77.*6Cb+r6a8Hg%ao<VjX@-4*J^['F@s!_HY+!50g^l&%\A!VL;6tPhg"to.hns.DC?^Y>!Tm[PHd6;-DR(CVd88H`QnVs`CF*.d`R7A?<aXX+fReklHa(:[ob%t@=h(L\R,KBQ^9i(\>n5.7%,q59((E`(*.AhHhG-$$#[7ngOZ?+m!Rq]M!Brm)DL14>cMsf^Zrh)*9-eZdmlZXcC@!uNk'eRCS<*SsE:K)';`iPe4o>sA`,+>^X%4A0:ld#1JaDniX>2qIKc(/c%9]c8)=M2E_?iObgN+o%:<n-1R5@ErjK.B:bl\GiY03g`TgcJjsGg_0,<MrG==4F=-=7BFCT(5b07%T1sp^/E-g*ohhi`S_aig?c-Dh-SU*TqLqYM?`c66;rd.3)Fa:Uq),V*A@/<\gjeLu#C(T$S<..f"4136QXNie;_"0Scp\MHQH"gN%<ZD^P3a`^JV(Hs=s4,o2C`tj"/nW77*j]Q1;3)Rtp%/SH5=_4erC\c)PS#e"klio#oQSg.YHXEOrrs;g^p`PN:Y4;:&!%Oub>T<o%cG$%IOOPs)5*9Q*s.g(SGlM'*/qhd8d++0;'>Bh/^gE>fdmNiL9M0Wpc+hS.4o$u4KW"'?$,V,856"oJmN1s6VpaAKn3Q<9B?cr%%/>"a(?T8FXjI*WU=qbf%9oi/S^I,Gdc_5/XCWk/db"4d6-mgI&VehPb85i7K]r\TN@J,#pFJrn,T$?%:Fhu=14P[<(FZoc\4S5hh%*m/CM`F$iF8%6+mln>T&Ak=Z3^V'gX:o;5P^+@Y'Y%5S8Y.ql'YeH*[Pb;)'T7eeu=:/gGM:8s*Gj'>pqkeigk*Mej^_-Mab3CZ]%iaYP3949;MIoM_:T_aFV%FFZ@foVBq@otsRad7ktUNAj5P?l*&C9JsOm`hYcM)D(g0%W.\@((D[c6ckHLS_Y-T33N:A'PufhX()&%V:W*s</J;R,C7HS'W%[!>_nm2SLn>&nb0;aqLGrsKI&1"5%Ti@nV,+ND.WU.BF7Zeos,D<HI(>XH=t\OpljG#O=B3_-^Q(AFXQ'u%Hp*'.k;m3tA6VnLH?a9P/Mn$#Y$k[ahUs_bpXHD(*PP?b4efm$+*c@_":%QhZ]*J1@jRJEF_37u_mL!*H?A'ZP]"5dh&"FQ2mqWr%qg*@7<ogH5R+QLqCDGG^",Y(4=`i!-K^J\M&;NC!>L'*^H^]>!\/Mn%_%bI@_1N+ihDJZ&2FUnYOXP'NpGJ"XQDoXp]@OWtkJ&Ni%SbT]=;<7P]+@1g.'VDC1O:LELqVoeS#0Od$^ER$H+?M-JYOcsG6EQ68$duk#UlIcX6(5f(^Z0pqq7GQ#X[`VVcIkq#*Z]+n]kfhu%[?.VS7'WI[I3#\BEL=b1(7*>9jr)G,>73aiHWj&PBQ,O#U,k$HejZWO<)#/",Bi1fC.d5Smja)k9"=gP#(NLp=IGnYqrK&IE*l_#%BB8-_#`"<,\8u_OmGOd..;M-[e+Cq_8+pfPI[:h6E%[VbO"MadX/"osm"&^rT\ni9X,bd`;mA9=:]1Z*B&i`_k<8BKc?G&l'L:Qp%Pj;36VPg]\U8Bq`$[.QMg+h)aUBspXFF]%lUku-I'ehXp"dMKfauLIh'O.:"0Pl9GMH'7$Z*:]5_V3]X2e,07X.eZEAK,(%QAG\2%/A:c<m@,OK;B_)e2/Sj<oP,%7qSS;TN_`@EAmF/8d##?'1+4D5i4F!'C3^T+*@;rCRDS,7IYod.fP$km^\NO_0HnqbE52\u*HSC$%T8lH6#1B*$-eoerjjWGdWH7WU,Z%Y/"!5panhqA4c>J$iqrrtbTopm7$9!!Lbh.jbf0jl\pR`#k"'U6H$FOsden(b;VP4VOr["8&%#<b,9"EV(78Jnnq,F+nr^f[sY"[V3!ELW5U'PVj]5F.UW[67c6'p/n8pK>beqjbp?gT:Bj[YG6:]RQNkqt3/BP,OP`Fs@&s/sP*j%iJgZ#i+@ALVDH3i!o'j&$_4][0!O0sm*oWp\E4adXuA#u@m/4(QB?_RjdLuE,6O3\a%a?o1N)93Zh[P[KolBXd'sB!-SWVhm5@E<%3H-nXj+M0!jW\(@;n36BTeu)o>#1'?dFPV<8/^pmG^RA!),7rbT.ZoJ0[cJ<DPW5HVtfpU):0rACBldr#0Mf"_8/Y["*1.qjX\ij%2*Th?A]tf]o,9b]b((8T\-X#4HJL**)C_H)1\9'bb36o3E/KF71-jXg6_0>p*hM@e6HYr\fIicqNQ/P#nOC[:@;raSJk-c8E8Qqa%0Li+1Y448D8&ECD`lmQrkMtW7i+F*%0O=saF?&Sm]Ss*n+#[HF=GecObJ7h8M9:^B!LC]1q[1?M.]%rf!G[-`%ZH_T@XuMS(G>m#%I]L+Zoi,X*^C`21:57(r<^o<qoL@!e5M&gq=/:e81.JG>l_KILc.@mAQ,`/7@>q7H<JSOb)=So]d7>.'Q+L:s$n+0-'k,[7RTe+\%b30,B?UTiUP'fnCDt^,"o)&Q!AO(.UWT2"@5Yd&T<u*:gM$"P'@k<-n?8RTSF'3B!``TOB8T9hJ)V@Cn%:_5ScCo5Y`jGE>lkODA%?$=k&)5-o]r*H0-/C'io/5?D?jVJ55oKotN:JM+[js=do:<#-@<=;?fN+jba;-o3F!TV=%&17RWE>?1(RNA!`^,R"'<:62Vk\[tI%?>2)U0?,FYr1+cqak5jGU1E2J5!i#d@+SY26'MeFJd3;baag?Nl+ned(m),3@S+[4.-KnAI%t5ZT;/a>(F'#*L+P,^0;1e3FVuE6%^<l.=d`':XE0l>ENKMVYDncPq-r')VM+,LQ*Eb/67`]7ITbeqa5^Cf2##<7Tc?bbg_Iq5cnmRK9q73U'-]=+<gomd>'hm^=H,Ue:%d8ld"!G/`/E=a@iK4;6kG%a1!kq76=NB+N:P8G0>gigXe/nD"JWY7/W!FHSFYf$b/bSq]-c2em=[[&Z*2AR;8g3P8<6g#Z'&6='Y%k@7?VlQT\p)k=<O`Q*KGi(?4Q4pEJg3E\atMuaCW;^P2m`bcgr1ZDmu"77R_L#q1ufgZcC;W1W5.5Ag/-=DdH.`(hB/AP`T(Ek.'%b($en(mrQSgW?AqOFFgA0O_!C[@'*""$WBSc@4FD-qhk;L][;UrTu!NO$bJa`s*Du5<@#'qn[il8,:M.s$\X-Es/5J#oHHJ.!N5&%c$2R`XnboUNoMn%7f#ip3-0AW#T.1ei,/V9)$fVX&MVM_Z2+XEjfgMp:)oUQ-Q"HU2bbTRMh#f%ZbP:7>Qu:pJIl8Fj$W`Z0FjFU%0b/tYdl:,k(]E?`IU3UZ7r^Pk!`+j9?n,6gWsf</Ia]sijijjo-n_8aKVtIN`M"ASX5ZNe)4^)A6#hqrnY\WlRCnEHhGo<"E+PCK%`FZVB0.8G?gVamW7r]EC28TO9AQ4gp.QKn:)1kHQMW497cPq]#[@EX3&BB-D6O.VtgTGdTrl:i]9+[F]KXcRm(lqZIKcgkH@EI%,%`1\-d:](^^nD`b6nHodAS>n4RQSASC73'3bQlu(%G_N#?.3T;Ei<G'Mp,\;Q(q"AbEZ?u=Z4`8:e_2brOMb@f=(i2-S#0*\"it+<%)J<?CorP#k["',CY@<@saCRt-h#r[F%.+1F)Q'_gV[CM]FOV7kbJ?Q_$cui=;*8J7\]dI-Rt,Jg*h-8&%]4JN]L((W'oj#lK<72^%?UtYcbq;"-,aZ@BFWBI=%S[b\(7+"?\T5`IjYGhd%fQp\@<l1R`klau`/c4H9e;VA75$;r/q`iU\I-2opg$N//=-Be>[H'f>il?@%#BT+siVD@4EuY^7^_iBdcRr<Pmj(V:3Sr2N&BAhXRS16ubM`JVf<c3W_lnq*3]WMDJ1SV]/;IXQX4S]&*8^7k<\ji!k\n#S?K%Fr%T#i32LNf3UZ<-g,\]S5i1(c`h?k/KV5TJ"A-VM'D@#j:0`+soa1sKnn0ZWR'.:Eh4iDV/*YQ2KZ5+,CU`PEOQ4^GiCGN!NBF52"@%?Eeu@I,i7Ioa7R:C1nXa:ie$D0UI(/f_(05_At_,_ickEW`N<6;SSkbR"ie!$-cm%%!U5PDBKFg$0Q9Rk3l)b%]f%2\8jQqWVL\a%0?,$X)Rb<?=S!Q13L\-mhmCQCA,h?dfrN0loZmceAL=+]J#3#C[Wi*.!=c^80J5U81X#0_H\E!-GuMNf9\jks?j;)AEdJ#Q0UnF.%J1sH!'Y8uQ0\,1:e.'X\$$*a&%(u<I/dULr3I`h=pLJqgrR_s^m0?-a9g:V_p*:^ul+[WX=+P*;m_>tG8/hGej\Fh?gWnqWN>F,N%WKFgV<A$N1HA-BN*fZ5MG&]uK_0"'WSu*(%RTIrPMp"47-s)L=GgS.8VA>5NG&`6lQAZt@-q=Vq70a:F4ZpZdLZKX^o(e1(.aCBt%jl5'7Cq;&3kI(XP$d,0)Jk%@$b/+&F<G*)36NFocbmhgh5_N?pj=6O4T<CKi:3NP@)N_Qo_4LkM;%_%F4rqZ9T2u&;6ZFVcEhYOT%2XbB^)"(Brf2*Fo8GHe3-k9u`ILLB6a.Ie:;-[<de-j7ST"\MkLhfZF`BYD*dn<#.+:]IZ]@^*f<GU,U&VpNdl\aX>nB+J5(k'[%%MW(6%j:O8eE,ueZ<=Qu'>]l(VM;]B:U_hQjR$LRs_Jfr`[#<QO#Akno$,[p9+l>!one\H<=4?4F0,K@1/EA>e'>:AZ'V-'N,c,HW%/^>&W\u?HT#orWVH5`ZfC8Vu)K.)uEeV2s3p5UYX6daQHU0<N+n8ML=0O1%?>/3lM%c"O6`Gc"!e#R4</sibN=.*m&cT?d^a2PqV%$c3VYk:;5'U:DI]JoCn;WZ-V\bAt-]j"dVZ/i@Jh\;VkcP:b(YkN5MA!B:dA]..+2bGXLJOTj[Yqt%V7!*n2lHlIUR@/*m@!F5.o%JVE"(,3Cq8_]@2H^S,:HLt(o5BR$\bD"oRi;I/f3;F\M<^O_htdCDS&<Z:L[DpZBo=85fa.Gj#&o3aahd2TI(l4puII'"3Y.pRQi%NWn;I9(ZCWM`#6Npf;nkY+inj;QiDgp^5HL,9Zb^O`bj]/^AM!bSY`F`d8H3ic_YkJK;Hjbq35[g\g&0]Y_-6be(^#MG7e$/]KQ0%]EHE^"mTd%7&n-`KVbk=="pa1XMHi7NE3;bLMuA$Z1&\Xoe+A6=Ep1.eUh_(q7;@tA+_t-f*]58Pjc5X_`&?I]"kcZh=$VTDCbEt%+8n!IDibWSPluk\?t`g\QnT8p<IkHlF7\jDiOAX%8>?&N(0I'0qFgT`njR.6\-f559BIkhm\7rORmm!P)nH-]$B"UI9:*!P._bQE%Uq[q#HQ6Nu5<-f#r5!ARj,]2,4j/W#qC_oe'c^VBRr34+P`Tp:E1?AcCKpD.`Z;qT!kmG5>X=s9k<^#?6`ukVrt^>V2*o7tL>f"D%e169CLU,u`0GfJ]l1MPq\Gr24\(fFa8Zot&T\lG\GXGk2Hfr]3nWd>j+;n`XQ9\T+@1\E-;]NDb8<?4'opmTW=%)-+?]3`Qc?/dl%(uj'1r:5>MY*BkB!EUg^o35I-I!ja,>_.NqCX[7K<kOoV.r[(]pN9KuRTcX-<Q.[G+ud9Uj^`$PMRXkBjQ>a-i8hZ0r"^*=rUVL7%79i,h#f]_A'j"."l?*hCn/8,u`BDuF9B`l0hS=$#XoOnFJEXLP(FH$>cl(ueQo_B@1lY5MTnb16\*CI)?V+h\ELL]b>:c34Qq<"%%'Zsc\a[tTgY:BV/>f_ec"(Z#$<,r0A!A$?j.(KDZ[JRP(:i<*,P]E^?g3m6Ag!b4(,#SnLiNc!69?JD`g7;NC6Psf2Q!?%"o:Y/@%PO$qeS9,]u=K.J$:G7?dP!_qJA$W%r/)W4+;fZ!$MFW8$9g.^8aHRYeI4/f%Y!d2(<,tF+r8tF):o^"J/#!AgDMnm'ke=SZ`kleW%jk4At3P><e\2,EinCDN!>F[G3]<a$c[$kZ0-&4?9Xl3/$LGBCPFql;.B\].aiKkmsQ]f6;Ykp4VEWc9PHS(iAAY+jIPX?J9S[M/$%JN82N>+?2GNKIqAQG^X#G:eRV7%_>njktB@^@bLLTmaSn;_=p'6,-G7F4(R@U6n;SS$+=knlhZbM)eOp-CINNiMkZ$lO'Ud\oBJ[%2aNW99?`7_oB,?G]j#>*URIAOM4:\!1op1j;Ulb!)m:Tfk%)'nhF>F'IV8a?Q^G\6O*hab(a@\r/MT3V2.R8>aR([>abpi%1p*T`%Y/!>l"VVG%LC_D!T2<bj__T+I'm$Y_[nY**1JNg@6SShMm]N^s&tJALld3tBpUi-@Y_]C4UJ&g>Grt8(GcWbP=h%4a3@nF1DIO+!%>N)Um'm'.a]=YZ&m:5`kN']2o.T83[(!kZ=;9]jGoX/rr7R]FcXf+6Z`#KIic3[&r2qdu1Y^Nn7f@=q(rUn5lFGS`R/NJUF]8fU!%?o#+'#n>+fEqaa2:Zc--.[:m=]r>p*"0'RpPB0/T5]#;!0i`KI,oQllXkT_ee/Xob:Gu0\?pp'\.?$baIl91YU5OT:\Wc^,DsV*7%nXDRc2<@P<rT>?do#JA*b@!>S-0JYID<nZ,ACGLCDFT$3DAk-W9SqUC<5TI@fl2"5>juS%V"tW3#H1L5W.lhL%C^,_!jf3D6,461%J*NN0iW=<:C&QB]>fNP(FW\*rgnP2E-fAUfK3k$A^m2GCe)eFZE!='ODU+,t*,g:^!Y/WPGY,FK*0*/VcHcV5%fR=aF9sp[K.*4m%iX)ICq'%5s$njD0>qQ<TBZ)Qui9KA.4;0UV<tVfXo2T&^^;M<;DM;dQBbIS%fXXYl+_V"fdO!iZgh>%FlB6+LCmT+[4>N=X6_P3?%-K-44&tSG"WU47-M3`h4&N85nPAl<^@=_9T_H!PGFfDYl>f!MO\LU-lfCLMVE,]9JG6nL%"r78q&oORF`T\#<kkjeHiTAY4l)rtP%SEHs\0+E\c9:N\*r:E[,%6(?9#VHQf/B4N#38B75&=D!KgmW%4j+&D%c_V6aoD,sj\.%!'S%iDt(+s`$\;\_Jq(&&0\CZTNDD$I7%DuPV%>j"u7;8Qbl8uCoB_A,&k\i'kMTCV+&&ocjOCNEPcW103R._#o7Hrk8)Z?]Af7GN*(mYXl"M`5fP_%h3k@0rslb!i43VVieS%?0]>)huHq7>#fP:l,eQE<H)'i';NZH_-uA;]NQ*TL[&&Jn"nstZ'd+%8S>>(,b/Db@pb@;..^%i#q'jGS%E.:i1bF,Q#M6XNtEi"%n5Fh$-5*J;l167\MR[oD8N>4DUg:jRaeO\KQ#MO?Cb1J_%eG\C78(QnaC8qbLm'8YiB\'2WgH^m'lbOTBBMq+AI+1L?*Wb"(,JoY%h#%k";ReP'Hq7)^RYK!F&)K/`2W8BpUZrZE%spT5%0qq?kH<e%>3a`tS6tpn%9L=mUUt!:1rC$^>,1Y"Ti%fJE&#W$4A3R8C0oUO%*%[(#88GQ>N;JBE\:TRPKb6a:GgBb1Y2I`KF'"<HGhcJfE4F/jB4@'D&m]48E#!3">Hd;bESF9=71sKue6Tn!#I$-ia')>eiVgY,%(N:kD&(_NNS<PBqmZt51F&p"X?d]"\aLTT`JqGkNc-d-oe73?rZH1\CDZ5Mjheq<'O#94d3Ug=cimuJK:Vf2?G_'f!A,Q,H]tAgl%VLDjZIS3K:GmLp2Z^4nKRF:m@-#,CEK4=GE^B?JAk:^\)P3['sZ\6FuEc;j\]0B57L`q">L8^9QZi%*Z3Oh.]oLkBg%9=&_U6b+)%8E7^a=q33Acb#KqX,h>REfW]&T9]RHUMD^8EW],"boNs#3QtPC/lKmC_]h-=bZ2`9c(_Kb+4jGM+Q[S5^M`S-Oos0BkgZHiL.187%8oDE\oWI6r:&$$!>_V%?PK9T].[8Vs?,flQD4?]h\/[D&##oWQ]C!4nK0qf%2AL9%DL1,l*)b0__@gn1b?UWpOHVHq9+&3ZZ'"gQ%=)1k''p/h`UbOAg$FqYaPWD0b*%""L608f#i8Gc$))iCmh.7RRV-%OdQ#Yg[n)iO2dmJcY\r;9+8EBLpj)E1:3CsrEs5Q(_'o,OG%WFJoH%=/GD.W-#*(lDn(\,ie3]8FK`#aM?f3*_g>^1YQtTcS`ZN"a1[X@&408]ECWFQr!PmkRXcKNkFDX%?S0gLORhW1Ij2`??'P%Kq53QNkL/6<u$Kljj_4A`HAgffYbu7lZ=_aFIYJeVHd1C#@B2"4Jq/M8S?LlE+rjLB<("M(l%%B3Y(W2=i/U,E0jHsrDm4</JKX6%*+HB3&FEA8E5D&fC,jjp0nPp03-`0qF#VWgE4+!g];=J^05`,%OtQ,?%[j_!_r89mf+-8KW7g=i"Gkm)W.IAU)8O0)*#t,<-7f<*%]4[Ss/HlA,*O^c$_0*C0-Q?+jf<I0]Y"f]OL3),b*2]1<S5TRr?Nk.FE0u+=Y2EnlkQk]*39`:-():d/Ee8Z'`S"<d?nDBaIicY5%i8E"=='qi_HE``=$Ee0sJuIVcT&7/TXi9KpLJ&4b(QM,4]EFb^mfieO5LqE,.+Xbt:\rZ-<%U#+kr2j;k?YhG9HKgG/H%KBC[_*o%[LJ7Jl8PfAA(PX<p1Mc\.H&,jabQhPE.MhfC/r%-%f^ED=XC!ZDZfN0@Fr$5c&1_ok:ZT]dVj*^`Z:HKDU?bH`<EojeQlGPO.G`F%9tuNP)=dc-(@ZHDG@^f9(gLQE^PO0g4t'H?JT\Tn_?,qG2KK58&Y<_g=YXmB\''YU97K,/pZuBYhq$!Gm@3uUJ,I<X?>Xsd?iO8B%\9aj@A0l1(2o.lAYQkUR5aQ9Fk:aZMi@:GNd^;4q>YX^+8#&1LYUY#(d-Qf3Xs/,KLS3QTT&Wa`W.M(sBXIW2JjXE'f6NX#'?]Wt%!$tlEFH#5eY/8G=GmFucpM@^Y.6(jD(q+u&Y/9!S6Udr*X'*QgY2F9+H0bkjj"3<EIB%t<O[i^h2&u1f$js!YY/80H[A9j\\-`Hj%K5,Rd\;CB3H7`21pM@f%,2tBC8Ga]j3,rTE]o9"8A)\[B\&8"gibAs#F&g0'L<aL(>ph,)9"Z0.Yu)5`aj*W"8S1)Z=t1#9;X9a.%_bl_j4)*66]d-c20%1\D<,i2Q6?a2<`FU?t6,fN9#8oaK>SUo&RuTk:c>1mK<<=>+h(Ke(WG7G8<QF'rq'<]k*JX\5lAI\5IFRII%;g"UPgHd,13Y%Rcj/1j5kXA<j>eM]$-$:3YUN,+3*5IKA5-!WsH-PbVFe$\=o;:OJT#pYsp<mB3;H:a<U9@D9\8$Hu9ZCN&.;elj%;&tELd1ko0E>,sQBfhGsJ.c@1Wf4j<2Roe>)2Hus]o&bIX7FQ*=/R8&.Qk\?2]5]Aab.\pP`Y8:9k7MJP0$A/-0)3j2jU*lY/41r%4dQg"="R`H&9@H>&VLJ$.RDqBa/2b;,1t3.2@^J4Ge5S#%^eH[:!%*ngm">)1O1??:,7b$PULMk2^*sF2*+0)-&;>XA!:q(Q#B8)%)qr[t-&57]D,YHlj24p'V;tHWo@9d3:.C,MPH*\S7#c%8,q$%dg6<S+C&p1laiO[]!25QC<@mp@8ic:I:!2FmfdnF&cG40VYUDMZ%#MC/fM3>d>E`1RgaT5Y\A#SI!$dPV-Wd`i<V,\Y7*5F:6Q0?YXEo3Ztoo!.CE`bYS1S(L<HS),MedBr^KgT-L%a,X\QqFn=&J6oM%LF)Gs\?*pjZ<!op<Q\;JW^7(rAO[=0O5bOY\LRSL38[-ITa6]Z.p<G+rCJB*VWBQSTPRdaJ#qT1;tl.'?M`uMEp+$TZE^3qXT+7X%XWdl-*aHaWqK:,P85Yn9n?k`,44P0JJr>*a&d*st(E#h*REtT2=9Ji*Y/f2/eh"C-gX2@P6Q=5oPKJe5dH8L]6s_uZqQic((O`CK%)g`GeIVV16Dr93rX"A8TlT`u,U(p^'AOT1!"Ao1;)G_T6!a6,L)*rA"<WpeZe-MeVd+MW9BM]7?$P:DcU(^eGdpot)"XRU`;5fVs%kV!>fMR=rjDQ/@%`O`Y9OYJ\kYg&=4Zj>Zs.LG@*(W$nQ<0qt2E((>W%&s^BV@c3NRhOh_8Sh4>M5(5Bp[sYo_ksEkMMs9T,_B^K%K-@tO@g(2*I^I9Z%3SgbE8T2`%3Sgbo69F"6ig>C9Nr500P_($#0"F73X>9WU:<E[BhMMQ.[2+q5?*Xkf>S`ILWXT[S#P@6j`o86%`O0j=<>+>j0pJS@^>s9,G7?&hieITX$oPs'U&m(OU';/4<'6!!3ll:hPj4nG&B/qEalmIX)-"nVY(6"$R8MF6ZArQ7/"K-@"a!n+%YSBG<#>ZC#/8MP[)#?oNKAt7X>4frP5no)YQUO\\\h!<L6mIN1RJt1X>R0_(:5b^toq;1aAj-V3MG"7sS&t`*"]7;F4^H6I\c`S`%rJUu7>QI64<RDYr6N`,[374Y5,E3+8lC?-n`<`2,hCIL4q4WR5&1untAG$icLr)\rd#_IALr(XPZ!A7e<,@Ya)e4]@*3/[Y]")X_%%2)#B2BBuT^gi1X/Qh/0,r%erFE0'SaB41.3Eo&3::mgTgaOu.g"&ck+[fbo<]WlY+[j9jO7@r^KIEqI/&,YT`[>AL%,o:+I0Ipi%fL7;26;Df>j=X!*%)Bu`I3nF+\?@<T"`==NWbX<&$)PATnb_m:55ZDpF9e?RCX>6fSFVWl-Z=T`@ll>lmEc6c">gl9*X1;]_O,ar%P%l^2/_sC>0kMN!Z5/@:]OLR8Zp6ViZVOmr=]eN-`[@sf=C2:"_n1i87InpjS7[bPf6]B1(d;jC-"ro5:uT!d@793_(Y<d6mDCI:%c<eqlIHAg^ociH_M6/5#eCrPU934/A+`#Fg5[72(Zk)V7m%(KfmDE_+C(Xf!(`sgJFmbY+g4ooamF]kGAR_qnEY>_i:Z8p>%UVO!%n@UG0J@7oZ`?W=.P%i:WN74Gcq%[Vj^>/B@:WMEna&:O.L2&D+nKGl,kmZ:4-/q;(V46;V`Eo9pMF/#2aCGu^EF$Eea^r"r301H.%jXsq-RFU<9=ZX&P1<sjcc]8YG7M1@GS8'4I-&O+@^bpRj)BKTAI6)/`0V\%ZB@#Ngh-luu22iqgp`']"brDF8p?38a;rWVq9QL_K%BdT(QaJ*%[S`Uc*l:M8L_,-2u+D$KL2^0kFE6`<*9>cS&06FPi\['Z!>PH+\\0AbmB>43oh-oifF\*5/c5&rlX\%N-Pi'!R8QchU%\,`MKB.gMqP5s<&]qm6595%UbQG[12Y;HXC)(gU5=C.jX$b**.NHfRkA`AjUJ!/[ORLU]$aXG7$B'U!ELE2U*$.,pL6Kj=mCcn&[%i'iu*P5)@@p6M"/ic^XR;/3M;p6MlVBZZD_Y+<aQ:!3%lITr$,BbJqHRa[c:Kf/+fIkOS&h+;4heg0$dGA7_m8I$<S(0d!6UcZ/A%0pY8m!f(@r;D(S."M-L(',l'E%9!sP`FJ2Q\@=dH0Z9Bg"Tfjs4<V(c'"&iQ+d/clX.e*KOc50d3E_/7M,][.JA,\NSE39kUcXo%%08:*.n=K=,gI$fA>$S@8WtJ#=JW'4mU(bY6ba=M\YK@Y/T!"GH+X;h]&0m$LTLKOte4f$t,Z-gt9jNlL-^Kr"[$4+UQ^GE=,?0XJ%\j;9#\q(bk<,t(Ph5<^T^"boC7hWMn@SVtC(eJg9Zt3Ykd0if6qb"guU?K0'#1nK^6?@@a<=0iidHPuFO[L^iK^-W6P%YTbr<6m\%dH]'&4Hen2qcO4t,ge(op"0E\8T]S%8TY%lP,RHmejlHs7%`WWmi+h4LCciJ6\m"FLf%;UN>SE'K:u5kK8*"M[<r&uH+m3&;;"t1%'+aUeZ0LQe[hoVhE_c>#fE*TV`smFYWA,Y]""u-7i'i>.6EXXo;#V\8=okFHmNouC8`'mg<ICiqOdj<1HfR\Dnb$ZN`II9Opod&F%<guqV4hmU:N+eF(]UR+(3oI/Y2m8%1)e+Jm^BC<S7RL1s3m9Ve[%%s1H3GJSE&X-&'gVuOk-DMV3.sa@b<2QSqmKn(&M<F:Gm9eD%N6PpR`NAghh,T/Sg-lASZ-RYQin`rWOEE9HU#m4+.taW`bqkgD5i$f'2^lhUbZE:V"&NTO*];8WE'QgdH^\Ri^Uh%hC0:=5?`8)O%l>a;;DhjpVlI^r5`hNjTKPa0lG@3A-`=3X"RsdG_ATOLlVATh%@sjk8du9$n0j]7-Bgt2NJrQWFmBGapAt#F8(^`W(1F+b_\Z':t%'RFtH-'b6"n"Ea^k(u])1Q]UC3mohei3>AU_F1X&a^U[cjSIs"[MXX'q;t[/1XN(af(s^ZgP!Q&g_OCCR.7gmB&KTT/QXJZ:k3g`%U1ji.W6qPI9f&U"kep(f1QYhI^m`G'"/T<,eMO&[L;dV]MJ5PDIJW*7(ne#PAt":M48;E59f$<<LSs0L[IlNT`*f!F^rOsmljD**%!uA5fQp$SC\`/b[H1]&Cm&J3DQCHXg$H'lI*MCCiL^;56o?0)qL:A!KFr=r.P*!SrN&+k198aIkc%,=;X`_lH"'rh,0A?mq1>gk&%:["TO%S\`uG"lau[EO/<V)d"*bD_H!Ie-`J@;s?O)etbfc$$l21HLp#c"h<afb;%7UTOhdq.5tF^7^T'%5X)^\''S.RVJ4@')<Bp%$o>g7FRr[pl472_0#J*"]@6Ji/2K>ID)ST:kVG8^<P+3@[@4-5m4r2ZDbc3FQj54TQ<a^/r0s0+R:r(Z.s-LLeQc,m#Xs/cF+oL=%Z`7T%0g\j+AX,".5'Zg)/:4C*C6jF/*fD,5Af7nGh:u69m!MEuAf4=2bc7k6AH9#$Qo*"%[saX;K:$3M>-Fu?Q@[<(hM9Q2UWGo\%5)\1L#C^/p)-Dd9h9?\#XG`D>C6ntB9Jt<P!t4%$iE;YP@b`qVQ[qKXk2crNXuWk`=[j&P?^oANPgJ(CC6jFYSi/I5aq/;!+%Tnn%3/@6rmM`Q?o[dT<dH(,Vm]m[>f?CdpfF)*>),=\0$cr4RS&\uc/rfD#QEbrkT/<oSCB9)2^BY=hFLL,bb>nVt+sXe#XT7KeZH[c"%AY9Lp`^)0[0^b>>OO[7edF+Z3.cWr>/,H\\L2FkuqcSFH`h$LRGuJ)M=W#f#$oN*IF>^nFVV`Y(!/"JHT>(Lf#q*c62j_KX%\G\H%`D,^WDD$iO17L"5\;%n>\o1IUf5PV&6[WXY(/=0q__mtPpJ&O_>UlY@L2695P;\cHcW7]NL4agjhDA'H_,uE"(e_d*3Bh?_9Z%Ub%F#"&Wp^(f(E4BR12ikoeVf:6?i=H]Tcd.r4bPhRZ1`X`JcX"HES+)>L3;3[o1`VPIm%'Q%3'$'T4;O]I/D@Oh3!lCcGq;Dq=eP1/%ic+NV)GC_jaYn?EP$-O.>d9%p6,Z?*UaY5[Y*i/*ag(9.]I)WWSm-CN#<,\J(b4MP"O#%u0l!3L0&kgXC%le)R8>F=%RjV4[e*52%_0a[D>n<agSR%p9Kf8m&_kG]+Z^#8bpsQZ6]0`2=_m(a%QP&%oF'+COW84"M!BfV=C2#Z<&)8-?\*3;&1`WYOZ>2VjV:.c-WeSF6%d4["M2-db<)/L3$bDtH=R"fDIR-!J7\6XE^+#Fr[PJjK[nC)!3@TC<SL#nu-KL;/AGB_Tuk)lueBfQ$rmI%-G>VU.,M]8fZ3<rR%%@:_>=`[]sdN%44.5su]c`&U@#f3muSn+&od+^O%]TrL('l':[iWT$_do;OAm%R&>;j@*(=p;YA3Q)(0.@b#I]=cYTRAX_<6P&XC-%ZH5'_TUhR26`Q&nS1*Ctp>+C:\uf.88J-!A7__$s_B<+<951cU?6uV3_h^MS(!CE'1(eQo15gJd3LPA=i_(GM/i&2^.cdtg2HNu$%/J2/Q:,Z-oIjIDkhn_afFqo&mKIlNtKj5:<b0AP'CqnN=7b&#3AU>=h+bpH?Eu/ki-+g?25f5tG/0UAMl,:'Z=D4k^f2WJsGt&o;%GLFAM:bNssZRlrsKH+67e[pq7c,52SX;Ht'al,B_\goeGP26$N@f\0nZR]iRk*jqu*%8[ZT]?FgpN@kWfLp]_8kttNmCo`6"0fQD%W\NGibp;i$e[^s7P\ZU<^d2EdYqt&A^QIg@.RPY?$#Lj$<F@Xecagd23+0A/.n1Hj(!ohpGXuI%%9-Wg>Pdq?\S!!7qSlj]O5Ja=%qW#'XoP2R=qYJN*a`ST@I+X,m/2Q_NXo]FsS,N0u[`Q$3:&_B?\-<#CGqGUa:@72O\06O`Z-,*0j'$29WOTsWD*c+JO64AhBfNV3%Bq*`6L00DtqP@o9%_qu.-2,c+O!_N3L4a7ZZaHN`S!:%>?,Y\f5-:DN`5r&C;HZZ3JNP_@cVebUG5::/(c4-f^90^.%u*b`,-Jgm%l$a;t@;imU\p?9o(Qi^s%.*,a=>YfH0iJr;f-PN?UG<;q_`Y1^)2F.)r@/:3,Bu&[<8<iK`cY4"P)R=W<ST8me>D5%k2"WhPLrFB%BlOfYA=M%Wq'4csS31lFHsP\Ao2<22gjj"I3A!^C;c#(=K5--VQZ6t=@f^Nsj#V"O2Q+OX&9jJA3Y%MCk?Z+;3-j>&*;YY4XHnma%",?EMj7%YOi6lUND+LF^_duBQlaXYk'tK9mL`-H,N"^D22lFVs"5;jW:OD=u]=0:A*];bb>bB`QRP-92I(3&-<?)&@;qRLqCNr^h%X#O4oZ%St5?n$:5EU@8nI28TrU[007-7umT0bN$1S2oP-`5*a`h4CU%CZsR0BCWo8o4,F4*!.=Q.rA:+'f5dMZP]?hU0T5YAp7`d%E=GAA[o_#12?nfSW/?4ii45mJl&NB5C\CT?<*V5[>cKbOroJ3#PApjo7pfLo`Z`2Oh5W"D=(*:qo2uL+p0GZ]KWdh2<#O;lA902p%N,,YVgjBm4?'Vm_9?5.YR%),HR;V.08VPstWJ/o.64Qr`mdUXtA<*^VOD?#Jb7\j?7"l"/m&k%=Ec@07+j)dWpn=]F)(3Gk]8XW;%>]ptiDdRm\D))SBh0+i\=9jkkbIAVMLms@hi0;W#Z$_@MPB#S6n)j0Jhr3LajcXThR)b!&9?+d]khY?cmN.k@@TcShIS7[hQ+K2C%DW^B16l_LiG4uVh\B&;J,85&0>%s1?""\Ka=T$rIIml+&*gLX;ELk)ZXtS_oNRn\6?bk8B5?h'+*Db`S?b2W7M4=09(C3CR<Q8!C%7g-F7;-M1X>5#at1=p>4Vi'ebgUA[@H2+WpMd&Pu4q[PQ@0PQ@a84gTp9O\mD>h,9ns5mHZ]K-6ji\UDCUakP.J]k"!pFq^r;7iX%<?.f%j\61a>fZ^M^4B)qL\8rori"geU%o6VS1K55h4u5)/+H19:K2<SDqmBt%$>O3@p@c"SG[m]OYRCjVB;;Fib'4e9u]cJl:o:C%5:;Lrjf+3V4-ma-Y`s-5N]/m7VpA3u)(.(\<dUe):`/knW]4PDG@stoRh_7@<F!T?qUed&ZOO[&MX0[AbZ11Gp>G%uW]5:AC**"8%`Q?#n]<a#9R'h2jQ<,HpIA5^T;T=BVMN_#OY:I_qCar3&9K*\6n(W+[";N9prQTnpW&T(<:H^uYLEGZkWAo/\<&PJHfp$D!%^eIJ%-K<CNZFd]b=Be0fME$-=U.@]mId4Xf7Ds>;Q3RkSMO_=-<"5`YH738k_r6r["^Y=M:)47iWo5Z-%l;0=%>S)4h-F=./7qm]_uWIm%do-k1UU)>*3.N<cf[Ig7:r0/d_ciI(.l;<-8Tf6"L"279DQ;[",,mRgcu<*k:(qfFiP;6`&?COag:Vb`7KMXm92ut)^:UtnlIRG.%W8`oae?u;9iTbT7-7TMu\?9,VJL$^$@o[Lm&F=4!<1M$mRtq04G_<%@Y"O#K[J>]7_ht$&5)pNkRms0V("%!!Cu.<\BlDch>tI*2%i2DBob]r+t)@g=^YWQY[<:.=V%4;T%Rt_$pl,JPu%R84MY:K6KZCmATiR#+NfnC?Ib8\Ce/l%.YGE]&cA4V\p/Ia)VmFjC%QY5J<%m1^!W;io.S)@fc@^f1W<rO08J&rgu#&l*UNF+5JK%Ne$pj3HS8Z%sbAEF$5kD8*/`s37DsWd`n!E(S66[$hY=eSqgJHY/%^V6,!H%)qAn06;2A?\i`dU(Hl'Geo0MDQ\<8VeTb;t&e8]H?,EUp_bWq>8[u!I:r35o3.*47:li6;i\#\o<[s5NW5cA0\fu4j9pBU&67YJ2%-iOkG-K1O8l*!Uo@@Z]TB5'>.rb:SjqEh\&NVHI[@'3ee9uCC7Si!uVFb,sm4R,aK!#f*RW8V8Jo0J%e$VXK[YV"j$-C\l99>mO@%S$9[NRg3:8(6=4LC`;_1(GGDtSZG&)@lLS5^TF84[GT?]Ii]f:ijUk5`HWK*1"`7WF"lf8s7o<,'6+`s=)KXKnOE61C[<A,i3%WS%IjX1E>'0@=%&>Rlk#-21r\oSG1_j)"%^Gg\`m`mE2P7sea"k78.^%dQb.?tE.dk]?pJZ&flXhc+W8cN9PcnB32$>_G3A'YYV&2kf%/f!!CA8b5$4&.s6b0OU'6bM2[a!"\Sg3$Xf5i/!Zif4[qHdeoSma6o!7*"s\Lisb0*S1n.Df]+;mDd(e*%m"lo4C#nf=*kX=urg7%[#"3Ea5PU9>aRP^W>Ncml*t=XR7tYp9`EI^S-2=h5)Z9:]Eq_%DPj]9(t3I1$:3LRFBjU.gO'd3)Mt!AKNpkeG1S<G>BQcJaME.Q%KtsCDRhJ3Mo"'ounFjS!<MBK98a8:j.?.WR_/[]O>S\QfDP:.1j5:cthNY""C[`rf;Ftt8L#8$)Nl.+ge]6*X'08g#PkDFC671`m%DEh"<<F$Z?Ngij+mQ(j7#."&'QD')S!l!]!64Vt)D\eW'3+1?XE5oj0QB%HL4=sItdW+9dCY*R4b^/Y;Y!P/+>S\QT.I<nkY]SS&%Rd.D7mbM.a@rXCc`_4>q)PVN*<ZP8G7Gh>c"11n39?9\h\$Z==OFr%9RmlGW](siW*="e8gq&i4F/NV9a,-jUm:Deu((Dai6lHZ*%N'g]=/cn\cU&&l7]OY9`rj:6#Wjp_$WU;5GG0^q);H4]!6eF.`'o-bD7`n`M@A)7?9>t=)q7tT]*%%/gTMlRa42bTC/es0;a(m5)%EO..W(O4%]l*f,s-0$ITKr[1XBf^DP#Ce&ne4`l4\E(0#3&n*W]8FN*HgN;#6N&(flGlZa\5XG19!O&Gir#*$W47TRrogRg<joZ_%3!:)(J>e]P\<Z2^jcXVn^>rda-0#ormEK-\fJuXF2>D^\:an,NmjnhP9-)Wk0u"#]%en'2nKm78Q-Zs0-KHGd&gs2s<cdH6m%1QI%`c9a(ImlE$@0Z'>Me2^f]>UYP<b5'u>b"T=\#/3D!g0q<94/m"2n/&u0G'%&hfW2SA`G^8?HcPtem2V?incS8lF?Q8!Y@#-d;[aI%X,D<tIm,%MlsiKAfZX'[S,6?<r5P=7NHn0(s&gb\J^$VjZ+?*Nf9PG)h3D4F?*o<X^BC<p)tqY0L"nphcpQP#Ec;dZdm"Ldi1GFs%NMY_*,bJ.[9?D`V0Hc?(3KOfddo@\Q92/LEPh_?<ZnbiPDIB43/c*\d%I^1SOE7*_2!VU(PM+a!MN"%Gr(QlBDooM?F,I]R3']KB%12c%*K+Io/j,i0c3c6'>_RXqN)5i2MFW!-Bo@(UPb.)(/IL-lN)k,N,PAq6eM(`RC`XTI8=eDtA\:NCCF(DLcgq`S7:Rb>'%=$=]%ri%qri80f*Gj.1546S+ZFduucD)tE!4`3;u8;&8&kLHRIHV1(p%V[CM"a(g#,AfIOPJO=H<QCdO#<>"k*(IX`RuTk::-Nu&*J_aE%JMjFe0N1X!F<#b0-;gZ#!0)!1O[CKr`pQePVu?<4#W_gg>4@e'jA9M6W'YAgN,_E4LZN2GMGhLr]QitA64T3ggP[[]Ee'HRF<rkV%Vm9jEG]]"+.RFWlEEJp&$VJqS7OI3#mZb!`3NS'0LP(bZTR-Sp+U;NmWA4sag9<QA.cZUlTjJCsEPpXZRuEi`UnHN<QAh$(R;H"C%-gToliWeQ-GuJ]Mh3^\ILH`/Q"]]OE+U`#=8JO0l!3u>Ykn<2sI;)?o%=!lo>LKA.:_PX5(*//?)LUV=3_m;>hrrL.P)`R&WoG?\%*rN%"6^\AE@R:PG6IILIciQ"D;]uCl+,jc?8e)MgS6:Oc9V2]bUm3h9:(-JV+brA)7`n0@Tim!aPUb`JUmH)'-0/UBSXY_Y:G'#P%$9:?u5:GShQ-;ld'lp7/r``ABIRh;nMmG(+`_mD(:E]8W;+2Hg'bBCd31@N\P?hg(>;+527Dd/a6`WIE3.Ulp*'X%#2[P8AlgRG(%Q0ZfP+A?/-P+IRplWX`q)&<j-8N<ePI&j1Q%Z"E,We/.BHD[0`$[W'm*6P?&3)sq'i/X:YPD+9u$;QoUYphX`o4R*;g/;nB%^$]b%*;5??I&r-WHZ#Rm*XRT3Z0S#.iFLoVLKG`Q0^tu'"[1JCgd\kH3.*69p3%o;L9(M"K!IY96>&&QE&*pM8[7K:+maeRfX7U(H.l<5%'HGh7rg6Yc@-FRq<)l%!qQhW\(L=-+)`np%IVUn.Dr93pX"A8Sl9>d[=7?Mde&ecp*ZB\p$9/9C<qDru"?-AEmq[Q-_b9!rhO1?p%)fQO2o1qC96Fq"8DW!\W\^II-)rgX<5nn8o]47(2^h*<"il7\o/t6(8T\qSm$iP^VJpT?6r?NB<l<;+B8iX=G?A`_o\-ftbI$mJ2%LD,QR/e+/#K5]\+O8;hmiP^B;r(Oudi0BXR9>VE+N8Gp$S>T>D=\:ZDY&ir/_*-NAM^Z)m#'2/eJqF;D$[AKTcE9fF_;T-rk:dTh%\:3?bdh6W+L\fX,*5%DmRt*")lG3TC1?82[&o]f>2cgG&E&bnt\^@*.X6u!>"W[F]+*R_j8(#g:9>FP@3dQN[!EYppGY:L,BE"r;%^u<!(YmWP$Gbup^$+QBu,P&ErRiQOtgY`]`"Y[T-=)k02DS(F_I\VWp"U@OM##W4%O*(sS3g#qn?,4_HW1A,5LS.^J*_X;n\SGfT%9>F7M;-TK>'?;f=Jt%ktG$,/)_l`0/_20B<b"u)WGY?:oHqV:!(,/1J.Cf<G11O!XE-P.'&se9A^MFZ3G%iqSF_JCAP?6VQL<K)T%cFo8W/t6T6%@>$_p4k'UAj%&Drt9<=!\eFS.YkN+@BW[:_5j-#;Srs2MppX]C:GFLQSo:3,i%%(9Z(EYlYIILNbu5*3:./=_4ZIF%AGgOL_BCQRq20ih,&'P8$&>Mq)Ioe#6N\fFjf=&%W^M=PP]-W7O_3![@g-S&)D94!raFDtn1&"V>W#dcB\2rN_SPmUD\Gj^@CFkT%3L+Q&<7#gqQ_C3=lj=6jJ9V+)'HF]DG*,G9AWmi]j05qO?,j_NOZbL!)$c3l2s2O_XB*7mPB#6)klaCc*4?iA^bco6YQ)kq'jV[i%"k8]TG/G7u*+B"\':?A6f?<%HXjtPa2A(`AB\l]@'o0t*^>rBGDZ4ZY=Oq)B=A,Nb<Q-+ZN4BU%<eOK)K#(@(M)Q%sE`I)_!BbU3%E3.T($p'%r'j&qlIo(,"YtD[TFQ9lJUq\)g<tMQi7k1(JFdY;#^jmpphE*9>JYebVXf4:ikFs9pOr"a9SCTTu0Att>h.7R<ZTTd=%FTJBuGukfl[^Q^:1(J:Cg9*$Ma3)Vl[^`g=kEBo35$%<8]o4&J\Y&Q8DsZ`=R()_\T53Z;!@tC]_P/`+W.9h_VkHHYXnUZ\*P+Tg%FQ`pDkg7`D*ABj4JnA5'8;7VndW4[t7R=BdKAC5);"3DNms+%mnE%T=V&DBof\sf23"cj'f$KW`[+O@.TbZ#'.K,,E)A[^]*=?4r%0j:$c%`NNR(*Z%1AbR\bka"CFDq?fXr/b'Kaen^g.^Z<gjNqnoO$I@Ad#i::]IL+Y6O+[:<=@]ZTgJk72;08<GkoEg4W4qIQZjM.%EJ4nAjkX<D^QhOq5qsdM`"&'m8]F#*n5,Vi2RZS;LW\9sirNjj:d>7INF=qhG&jGNQL8K'\OqI/!_U[r_*\CuBSBspoWlP<a#_4[%.$X"i"qS[m:M0r)N=%/5;62IHLW]8uA#6;L+FB(;UsVO1=WB+b&&l)CLC;:oCs!XH6_]1T=hBA->gYoYZuoR-7&IR+MtF#)'T8`G%c,#=)dt0kXpeY3c/41M6"i[UPq+PApcn=9:mciHI[S-BlgcS[aa;$iP<tp?S4#D7s([q1#cd[!>K?ctXXb"(V2j;e3l>,b5/oFD7%HtM_AfVP$\+H7BKF6(2-BhV@.4m$9blqj'!RBIc,G8/%;e(C@u/QoLc*]m=P_+oHE&j'%o1KAn8C)W6u#$.X!=mBf);k4hg`aX_?%[-]=oEQ&D&CV7gbEY:I@@pQDpKbAu5C]YiU`cHpS**^MrA'/:*G<tN5\=8H,2o0W<gfN]9XS<ho:'0on%B;Ph@A#eeU[()!@<'RL%:nRB2"j^G)q>ah;o2c"daU]4F:BU+F^E&j7%+L%s0+PXk/)Adl<G8q!0MikR%Sb&&:nPCYZ>cNNJ.LgZahgQN5^bW_.U+C81U/Bn%f4-[n(bfk5,toC'Za\Q-T`Phjp)L5:L4@T!I=Mgrge3.MY'rM@Xdjj+XOLur*pY\jKumke5+DW,'57p(LD/+Z!Ye;s4Zpn<(1-X?%GEm8QBB`qsi7B/=qB3L%5:Hg$K19)0(cW5(jLG!$8<?"H9+-Ho+FToJ#=AqmOM3>+iiCrnpn""&n526!oZ>c\\u.VOQO8]l.d&ID%(!OamHN(i3Z@"J#QFFN^nOk8D^2)Af.p[cd:k$UnrVIG:@,t./bfLWh=sAa=R89frUT;/"X4l:?,)=&8N]i**FGC$DeB">&nC&5_%R#s`T%+.)#1ihf5b.391S^?/jc[A)o,)FF.%e!r.&ZmZVZ.Q`pO;]=;g@?J^6fAV<>KC&PC#GlC3Q^j5K+kohT'WtsH0^&-DOip[%W\-j%KetDPn:]HSd\Dho\I!75K',Y%?VFNRM`A:?bhYUaYLNnd[_6T1n'^pr7b8OQEpVRb\Jd>ns(P,]QIm&;jiQ's/e'ljlOfd^%:8qYh!B"bj>`aO>>qS\-b4^WaSp7mg.6gG,(<bR_'glLt&s(?9,o<@(harh9P.7^Y-'Bl;E-$MlG]Q0&6fEZul:Qhe]V](I5m#!G%T3RF(Q<#aF%;f5<g(i57G(LA"I6D<Xfp[!Ce6#Y+rqt@qJ(Qo2=;h[_L^NAXq4SWmPF/$^oOoh7$lUT-C)GKB74p'*ZXtmfM,2$^%V[OInO_7.sV)t%@/d;bRaLCifgOk5)38CaJWY.-&EHo(:)MnZU&3^mJ0r'J(#rFWMF:D9(.lWG+\j;8n\q(bW'MpN@.oAY7X[gtY%20<<ZEdYm*TiGpbQfY29%G`-r%Ga:/)Ci;^g;^(beXa!keBeQCEdF1qW1amib?Y@JL8%%==fE5q'OA1WhKj]KaR-B<"E;pFBto#E%clqgC=*6?7kRa6^"_lK5@1UREB^!Cga93f&kR]t)li@D2\j6`C\q(bV<-)Qa9@2&K8]CQ2%E7j)Q$]VE1_c-0V$MO9iE<80_h4]D%<b1e%5-fR6R%^g^#Vud<0<sZ=QgYde&fOO?I:rW3QJ1cb,>Sd0ko#/K49I5dA.WeS8qdb&jN5%6Ut8)0-oin/BeN*.YjC[!<uak<%Z8"i<OXKP7R6`7D1C-Ep"sI'O;ue"cri=F6?f"IX3S-di+O7Gq%>XOL^A\:ararsLQWtM@4N*d0gZNM?Kt!:ha6pKX$6m,dd6\FS%n!s9>9ZW*6e@l@hV[b&I'l/+`OG35u=gNXp@Hcd='fVrOWn:QZo7mZ3dQJd]:t7&l`Y*RQR?8_p\1c`U(d-)J4pCYVoCMIgLj]$<%X(82=;^@u*gMhV%pgb7^:rP2pb0g?H91eRq10!T`4,S,[V\)Y4AOW?@oin%K`hkY#AQsA7e'PeOYcspjk#L;'>4HDYo<HSK=eWm;%6C'#X7'_*F9RH-(cRZ(DC+\e#'X6+G6sA%a6#/^_1QL5&K%&Qp'>aKfg#ePEhFS<CehJ7^^D5nEjAdD42$Ne<g\*i&$NAfG\Fl8"%ln`Ut&a'S>C?QU'mkZXqh9R\'ZhIh6j&KSj7b/Y^>j+&GPbj7sOc1?`Hh6%0'<LNN:QD]&Q,a*[!sNL%mJR14f!^%E)3p`(KcVW$%r=gu#Sn2Fq@)[hKZ:\9"fGM`odCOOj>qdWjDS>0LgBuQa>9C[YAS\d.eSlSEp"HJGJ$e7h=Nee^_hni8AsKZ$Yq_EhUNLLG?*GGN%#Pd.O!F)\DH'Y$gZNp-.o@j$If8t,Zhbd1_(pJI0`;:umBV&kT*q81%T=e'f.Q0aOHF3*gAeul/7Qq<qjqrFSpP2rpiRB(GrL:_k%VOBeRWb;@HBZI0nY)KGHXLQVm<[gZV)^?4`>5.14"cXu50D(H<CgENpW,2Ec>LR\`?+@2sFop/l/R(Q&'CgO/Qo*,EZ6$7069eVL%/6-MFAFsQkqog[<;j?u^$Q.V*/$uF>3da\`g['M*QFcbCX8[UUj4RPXaSNf3$b^/;,.9?5)*M3uf%GcCAG,O*qT6"m3kP_tf>HqU%GtN;BXe55X2"me/(E-LQN`aOb9U]T3=V"VShG7H,9,/Bj)*M0t:9t>b2m1p%Ef=k#=HHaj_-HTa^Id(YX.M%<p$D\pm<I16Q'(`p%'c22@.V5Sg@jIg>leXb9&8]#8As["D?%X<<ek_*)PAde._Y)7+:U?YhGVetO&auWR8b4JXlN&LgoTN:t;T6XH7ZZ,KGpW.639Q?o%E\G#pWJt8cs7"cER/QaIeh`G\?tb>U8)9-c>iF2MJ>sFH`.%2LJs+WgHZl>%jFd<Jnj3od=;Pj._pt7<VrD5?j-cGPdWk@"$A"o8%Z*u"*GgFc/Wah+f:l<nZk-C<t@@$XSSBY2kJZCd(aA*(n.H\0"V9@ss9_j+leQ7dga$%U=H0"_u/-TW@kA=1+\=ns!]fs$=ml?-1%bHXQdBT#&<f\6IKBK])^qLl'-g@B:<5P"\X^0.qKH^H_jbPWHr@Jp.tn7DO:hn8_B-MZTdR-9Is6de04O;HROKW4@>mpr0=04j;9%i`hgB?[OH/ZF'a@HnuFan^U>*`HO,c(LPIgHs,I0mq8MIIR+$!^7gt2Mm)>E[T;=EDeYq!^*Z,fhpXu#Hr7*<rI1%,lFWML?[Q!4%m>GmuU+a6`=8B.]YJ)a5jmeU-g;eCqd2-0DX*iU?^N'_6l\MIsDr;Hk]B'!/rpg"`k^Rt>Nt;9fL]@8O3BmB.K`C@fHL*T"*HY_^%?gk"U,LtuVV*!o>)d5bFgXk$Nh9'aH^O:gT;JtA$&,tQ)f(\"CF*nt64EiJ2jo2OS!%<:sIG_1Ya/@^ADIKT1gBYTJJG:S8Y91XR%o*]R9q*fb<Ok`,-$GuT6oR4?W*1um#\V7.`DBAq662Y9)DF6@WqO3O0oD<O:8I/.3$)]o3L7c;97u$gJ[]KZ*]m/eJ*r3Z\kJ/ZZ%Y99FRlX5ILpT1lZ0'iN$>gJKIp,QSb?^?,#^O:ghDafN!D/#1ma;saKnAhBH1"V!j\$q>4l`EbNS--4"f;Z5V(L=VnMfI6EK#`"$%4pOKu-6Z[0H\M!VJ+k!I3V1[c_;URI_!?[bgD-JLnrQJ0#lj!:CqF"qrpoXYJ\3Jbhh'n"r/^:FEf/$Jq4t%q,Q0[>!cCs>piusM%n9\1:qa^P9*`u#)FFHO]??3*.I=^@d9e7)ui6!a(?C_'Cd9BMU\)nuM5Q@FD9lj1QB,T<^I+T]_=CC.jUP4TgF5`1d='0+o9d,8L%`?-i8==a#_C:3j&&,!>_*J:Aei]ho!g<\ZQ`Mc/8:(@I$[BK<7#.XDRq,hrWWsS_"9@/.e::8%r:ii!6?[lJCCuC#njn%m&0>[>Q%GH'tf:#X,D"hIuEf7hE*"7L,Ieq'0]@R(>HPuH!ZZH/R38!<<_1K7HnVVtMdQ9pPo&tIH1]HFcm+,B,_4(_Ep$k*#Sm9l&ccLC/G%YHiPRT)'[<8mN6lW8n$TKU^&CcRj_b%!Op@fDKMC:=q#a5LP<;_cBT7DF.^E&TGfg>>/,JU/IXj"KE@?'G(\l506TY#3n?k)I.V?%i]po,3QlTE<-^sEK6(+3>&"YsG0BuUH4e55e,`),I7U($ZmL!6a5eJLYdcHIW+D3SJp=/&K<i'%5bSZ_)@.GX;@g1]4N%mIR[RXk%VoY:e/^K]?^;^,s^jX'bX#cc%bmqSM59*[0"n.'4P(Lb+Z+r+*2Op?G0$>omWF']^3cZ8h?3Wt#Cu?/:P6KCd/[P-e"p<4$f$Xdc%IT.2LK"(bk2,`F\:8WOHAQ_+TJkqjA_*`u?*SeJ_f1&i\EC84#52Zhh867=$$"\?0R>"]:lT<]h?!&qe.^n6$:6#G3*)K_+nh\+a%b:,Zp@h@$KB2ZM>=,!oQ>_/GKrNo'#DjReP;?.;;2ktOba)"'EcErLoRWUPRn`I.!J>.5PTHW:3cU6+i[C8li#qp3._BR*[iWqkE%N21=@<tYg8*%l*oeO>q'q%k+GTi?8\OU7E5R@p70]OJ/o31sqd6lJ2c1b"X@Ka4[R]IP&#a_\IpKfUoMi5&Mh8I8fL20#:qV1Sq6%Od%Q-$8pN@.qRt=!cq>Gq7c@`#(o_`E^qZt0%`\>dP:"<96*@+A1]r$4GBWT@dg:aA\<#o11"J5^!eMg<I$ehB?nPt6.\pFR#BqP%;bqC7<nCqKN[.EZ#iXO0lgH:he^M?oU9%K6f!nU9#S1NCl.c_1E-;GaC9467+!a9rlhVN66F.q>>%<[pX04@XrKuolF`f!D'>c9"%q+X<an(u!Y4G$-E[0*t>4D7;7*NRfrk94?[dLQ<C.'kX[is@q";oci,J$'&ZQ<rnj5PuAt-Z8K>C/:2.B/(iP^$8?oc[chl&=^l"%G\$C42gK/^\WRb7m>U-L:q=5=,H0BDO,0&7Y;6lUf+8m!i=$*070M#aF(%=??/L$>Kn?NqR6?lXT_[(4K2^UhGe2&%B(J5f3"q0G%6cG8ee3THdcF'PiLq:5WVK0oj#DHL\Nft%>4-udZ:NsYjKIgX=!kV.#*2/8ZW`=N5@+,c1j>PW][C<"nG>W&(0]EK9,!DOJpO,ST%WFLC!_DT@i64KX4cLjg8@0mV=_K2B5[NZN`m7_5!1#7L`K[U%[W,((ZcqXfRp7rkrN[?sE%_V=EI95ki8;C/Of6O[1]FSL:KQic5%K^gl-)&2^>LN1>17-:MM`&3AWl(F7sD<]?aLF]#VF*HH50QeChT9geE\=`'%k^`!9Tr%=$=jX)6_cku2!Dcuc$"g__9]Qt.7'o<o%\ZhPk&FRXe(iroRjGV@[dsK1[GoX:1BBsT$U%:li$c1.$4Q*lNWiEFu^BFMumoS73cC?L!RW'JpHkRt</6D/+F>)OfR`k2-Isu#)%?53WFDfW4GM07lZdn/*lL.U"HVtPrPorZDb]p&qs0X,A\FSJDlWoa@Ib86N;\[MGR1KGMIZ@k_2hJ(:K.BhU+-<%!j^[bC)e?_sr%Jm-K!mo;^9Yu;pqeiS-"o=`'cNaTF\#fA+J!M:ZY`@tF\Jn2[9]ps_skmN0MX@][2=:@UWmnLE?HT#_0E/rj$cZdjO5CjTgl-Q\k%pXQXPmg'2n@7-SfSP=Mj!NKo4Fs:7V4D0h:;8_N.>]"=@`ueg#e/)%i`1ngN2DqaNaU9?XlcSb`qQ?=Gk7,@BQWNSMlW9JPpeOZ`%DC7Yl#r)7]M9SUYm1)6I469!F#D$$\Y'Hhqc/OBmf__Z6_"$nq&Y$)P&c-=*3$LHYZe8D^pusk7CV9\5n$SaCK8R]/#JpY^hcoDe%Lg@S[q1_sg4K4M(<?>VE!Eic[Ajdh[3n5m+)s#pi!SaFuUC/W.GdnUua\1Cp_=?A^ARRJNG+AcZ/O'C/k<$22!S#Wh*%UWT-1A5:%_nYnqU]q./o'TEB*=C]N[FMH1.2ioUS.j8;2<e1BelmhFl4B5QosdDK7K\BXO)QLV^]"'S^NZ/.ZV$RSGL#I">@/b/jcG,?WE]!4%?DTfN^D+U1G7<i;?/c+TJS0Vu`SoJ4JDnKGERhH7k\jg:rnI2D4E.*S2GSEojD#j['=@p?*Br4Cjmso3,f:^E$7]]#TG4[TAU&P8%hWH#o>7;Zr31Z5A^+UW,oNF%r6L'@.66As&'qD@jecrX/_W7()\#omRR"_l1oAY18_?nX<3T[l5Z9G\uIk9gUb.#)F9>iL52lB'-%%4JS"m<Z7&jc@/X_^k;P.qlonii`q][.u$!7[G1:&X>sX3DUmh8\:_V1%0]XlbVe9]kfto>8$B/Q?,;lq8b!m@Nk8eYNIE0Ietqf%JFW,=Xtg+N>pal[Zht@1i`BqHAVCcCLcBPrEYaKH5E"R=*3d!Ei)MTr`>OsfGR"B6'Nteq2]TXW83>n*."E*RU'`p%GeC3l#[W,\%Gm(5`4:[PQaD19Z_`LTM^\emj.ecHj$DA2i)MVqSUmiCCQ,"\m?Buuois.mL4G%eu53meDdMMEBK8*mq238;qick\:I13;"d`;9Z%<K28g)t70,`9cF;:AUT>h*Z/>E!qPPNk@i+&^RS#%1B:@aJWshd0nCEHO)L<+0*Ab.qENgBOLo(4?^8pT2=:/TF]HI9Z"Q--='X(%js;(FX*gc'=F12?Es*$Kb*BTUnFN!>s86.P/73dgrCUt@>$7'&%s__UnFHk$*EAD_KqH*_mH<qDgCo%[qmk=Ei)\U=bfsBdGN-qU%K(eg1Y&3Ih!c=ti_6(-P<rFoC'mgDDc[WBOlArK.(-3_M/^#'pX-d_!UXTh%67.OJ_W4fjLf(A%r@W4J+!J.7"(euN=iM%t4A#K)%r?*M3T+P:]i)[=c)pVHIB,f]A?2^+6OFqLP>,/LQUq:[WXr>!pqDVfl0@2R8r:hRO^O@h9Q:K>4*134(lc`L*dd!X;<U>R@n.TYO%QS/qbC-f(_>>oNU8YO;()CFX/LUP?Sr"=DGVZ$j)G=bbBR9!sT8N-]\>iI8(:DF[*l\S\d)HEBe,sgtcgo'9S+^@YJT6:JU&kWfj%E=,D"l6iMphB4<M@S*_kX<,\W]Ut#[,H&`_Nn%iKJfjV@YO7s^<=[sM#\J=rb]9r8`Sl(A+Y`h!*8k,u#=7mnYOg#>oFeO'^R(>5%7Jec57O:3`Emr;rjr\_-.E3NH/%_79^^FWi$=$]3AflW@CHNblT-K^-m]5)WgA:V<d!u%qP?_QiLn-OsY)26c'\k!9O\e)%#T]E<%i4@+NO<IJA3>g6\/@"gsrZrC,Q[r10(+YgdC@Z&UY>0+DGR>m33C-S'(t;Q>#:r$rHj'_rAKYOrc<S;$_j$>pAD&f+G#mKW=&oD`%s.NGPGs<8;SrtUV>G\oTO+F0cE,$Z%5>=.`@pF&"UKqrWk#"5PgFipeWCI?,)\P#pK0`ghF^K`M!mNUWeB1L+jc2$^H'_bG#'FLl%IYGJEi554po=55]I)Y@_.gW9X]!_r1IgNiqi:<Cji:;a/_%f5e<oN3p_06Z"SoYHJ?EkW_!pJ>fr;7l9o*_]C]1[^AM<D+I9:^%p%2pQ9,9&d9D*5:NfMi4?brPO`,90!hIUdH,!rZE&$.0H]:1OVC3=HQ)eIW_+o/@2MV.dUQqNtRs-lc[LR@+_7`j@5:DQ9`HBH]<to%+58-=STSe='T=<U7c/Z/F^sR[(;/f_Fj*"Qhg.d9gI(,%(\)Q_qi&#&G:7C7mng6O("^:qb>_o=)iksJM*$rS@5D@m?U0*mh$Fj_%lFeBX:U?1_?%(I9!Z8?is7o=W]f.?el>#Z)2CNsgC:5$=VuZ[#'Rp#oI-1s]Et0.R="J/a!VF&Rr;7l9c5W#2*&]4K=P08Jk^-2%%q+L2ng7[;K)kA:@)lC6cTK\g7P]o7(.#qm&`$-9aln!KO`6]&bH+6HX^G.0f):#gK?;_B8%<4o/r_ip$"S'\fpDL'OUTX&rc1BD#%'OLLcS@Pj]p8[*uSD9dA3JM>jG/7SSg,]Y>ZFUG_KQeVE\'CTakT*\9/L^WM*VRbl:7S3%MJ'kPmBQPECu'<pmE%QL#-Rm5q1`8^%f*7rG#^Z6]$$e*e6hgPhY8[9#P34j!Vb6p?&=pfk#pUo+'Q":6,dt0-$/cg#,tl%Np^,9s([g_3r_ip$"MCb]LK1FpUTVAQVtmX=%jS;]TCMER\im8XMob\`%S9=/&r,HE*,DQiuYgr]M#'u>A7)0g-996dbgO.\(o1sXbi;G%L`o>-NaOYi](VG0Q)29s1hLCg,1Lg@r%o_q3c\G.NPankHrI[kYpG/S9d?'QZZBUifRia0Wr+qRtJn?P!nO"S>9[FX_\4`I]+DYo3?<WHH<LoHTgiDJ'2jO8M0?O3Z<j%#4C%^*UaL2^C<Y'Q;,uLL#-fZV<?F1mN+YV1IK3ZdD2MFoM"Rp@^02<VN%O?ZLnh4&gugmN]#[+.c@PgVQ0Xp2TeC_OVR<RdNBdkl$:`%g?6f0Im;XU`D83i^W'[V[Ssh/M36eZ.,I+;T/R<)L"6^8s840V5C]"Pd%'F%=K6D(Q4Ft$e7D5/nB;Yj&8rEY#0nRZ"'Y^%o;b"2%Z*oq2=Se2cYi<l.!:tbS,E`HVRCaYC>r,0Q2i6+:bOCtmH?4YkbYoauo>cCXdZ1A]B1:Zk8tn1Skkid9p7bi)O1[(RR+?>hV=;X&%RH`'WM?/*8q+J@sO`Ah2F)P2GpaA$W/[b3'MP8E'GOUp]0C_BJB7l`H'n5\N#!O>hFu;.08I4:Q1Fq'meR+(&P;K;=LGa[aV-UgL%oiiP/)gNsl?B9<!Q,pILTJc-"F1&5_M&AnSEs,:WWjrD<T>(O-kC4EM,CG49;hc!A"bTGj=7M#DfX<HN&bH5gr;7l9cDrqAO<&<U%r[M#O7iGgLDE+^lirRH]jk:O@8!`UGf<jBFg*.#G[(\,sLu6\1'c1<^b>SWR@23].6AUVL'o+[1g+_p78L$dF+s'a0Y7IL%9[VU(%f-CR^ojM(k&8I1>[Fuj+fTdQ:/^%L1)+QOoIAsohC_"bdBN_elHD)(Mg^!/-jY*osqeQP]35Y,!/onPGU9U+M4n>%Fa2Na\/`UNp%<Ei__=&UX$G5X!:#$lQVO,CU)[%'/N;>,.FM9h.N@9^bm$qn&/r$D-9?H7PQ+/tkT-"ZU,o5\&VVUCg%j]0`L"X)ZTe9j#150Ps)%''$=<T<J4icsn'^Li[9oI6H]bkZb,&s19tnj&EUHOHXr\\tKdMMQ!$m[Jan>R$9$2>[Q-_ldttfVBW0%[mG3$;jRlm1,%AZfC*AH%qIWlV+WU4/67ZKqQPj'j1u5u%')(WmR/crP3726g^V5-Kq[X)sU("3,g"Yp;*dF=Ka0<1F&gbiS^]"PGopn,H*jbFJ%j#WfX83?/%+RE.PnoJ1MS4S_R+NUn"Yo!/"0djFuJ3Wn4PrORP[o%pUX](:!i.V4BaI^rZ0CQBMrlFa7Ocs"aeJ0Nof&L^1jE:E@90iLl/-.FW%5/c?H2%uU%_CLCfq`7N-\ZmjnF1\h"O(r.903kWdI1!e;[pR`NK`J!Y9nR*7hPo$iBtJ[>'FVYMYt^3#DdlACnAqM,m,IVp9E*99%9dfTm/Ni#2l;;H70N\eJYBCW#0O^hJPh?'ZFt'+TP.XGL,Ij9&]aArJk;q*,jGTD)%uH9TW<P]5j5@ms)K85(WgEHOFg+9"%X".@%5LSY\S2^tc.`htGirEnRf2:jc:3dE.\]l$n`G;1/%C:^DX")[=&GbsXf9DY+3GX!"%d7Tt9CkW2j!L9QGi'A1jW!YT:M9Xm\_1qT%MV,.eMDTT55=-#+gGH4.[<$tr4$J)Q+M7#^`)bcArp9XIjS:(8I,@@tCeiAr&Ii'k>+j2e$hS9lGQ./mF*IWS`U$UsVpF88pmY>@%pkJd$3K/8HB/.alcXV(I>A%srbcNpET$@&tF$=O+:R][\nMe44Nu;d8"*4"33qo;XTmWBd?>3c,(T*.a+ABT\Wu2C^J0"K>Vr<A&%B3[mXAU1C&`!T;O8rb,g6s&b&n%C7e/."sB+XcfM%Tai*:=mNZK"HeQq%jYtq`ZoSEo>oD*")D@cR/LaV%L!$_m/]VlsPE(IEs!3%7S&[:Gq<W9itqJN2!bE!2q%c=Y++!>@c%C-<praJ"(qW(1Kk?9SR^^E3.@HeNNs;q.85M!^$rE5cp+rJb_^8:[;23j;Wt@f2orE;%JoU*1N8nLRf[rA7qE(+;r]%1_QiHWs^Eo?pZ"gB4""k8[WSRi&@AY02=bg1nhUOK<oQhkrHEr"d)AA1ik5\t.8$KMrm2%1;Lr"/1%]UiIIO<U$`!uKS,!V'0Kqh-W[CtKF^<Dm,gAWccZBEF_C5Ne+^iTHrVq7Kb>%_3G2%_obt>4V#)*(dsP)m.1">7mHi>AJ#RF0J"%%XECYX!..d=Zp5=K/00crRs'Rm3c*WVK_o<)9Zd75M\LKc[Bi,j?I]o;=?8u9=eh7[lBVkn=)T;CY"IpE$It8ZJG*Ffq"Y,'2.=h$%q2R%B+bfWI'_0'<X>#Cj0E4YY$Ofdch+(WT.U:q[<B2AVKt)q'e?9h,Ui(ec*jW65H&jH@'0`4YH90'7gT;R/F:A!O7(R[QjUA7D%lae=_4<AaM3WeqBIX6t,[WHSmdFa]YnkN=M,:)0K%_mWDgq/Iqe@6B`\0Y.+>2ge>81Qe4?.p+iq$-PqhLIMgp-ja;oNFM\%%3rH%BZ&oAkEbBo&lZW=OOSL-.a;o(9OiL4@m,4W\bo"!*[rsqo]Oq*E[-fV*@AHP??cnTU'#b>&^t.i>\!_SlH44$?ifoaRu"n&/T[LC%=N-%OTV_#F?D6]7\]q`^[U+3FT&S&llOB?\$O<Ib3^4-_8L8u:&I1NK$&?,[H#?7p&d.<I,u)uI^Ukhj-NgRF;h4M</Z3\`fCQPe%KR+CScFme]DBC,$4fu8Z7aY.s'8I-h!\LNAOZkb1Xh[;'(B[6]NhQb)[_;k>,/9XPGJ5BHN?:E@#S:Z$q<Q6"oZ[kdf7J@9G5a0$%8#/X^FhZ@b_@>jAc,Vm"^Heua"Btk*c2E+.XcPGc6qEe+'))`+2tX*Y:rbWmk[kn@0Jcq\Uubs-X<J9>OK.0WD,l0PW[m1Zo`EHD%@`d'7"^su-1U3Le(qJ_D"YFM6:N1a/Tk>%qE8S9s+E$r>q?Rb9Fr,>)c6d_7XT61$$J,a^5"D/*7rKsaGRAf9PsjBH'@`+]FVM8q%E=d*X:1FJ!^Kfg!O.I\S6h+K#A_2T8>\r'=)PAbLo^H[$3coLO"5ON^B((A_8p>IO!jR)Ol^6+;`uR3_U[Wo=X)c7,XgoSAQrL84%9BV9dfBSc.qsQU&!cP42:F!!"NlH@-FPZD+'?ha+2N!%)`F#e=MdF'`ou%_gYIAV7[Cb?pCpg,cH)r<7;b+=LjbGV?$-l>6C]O07%P2B.1q%&O(j8PUba=hDPntN\+TUt0JSOF@O!$6ptQm>rY-bjSjQt:a:=5;fBrC*ic@_1E5#%R=bd"r^fC]-)?[?[#;bC.66n/+IG%iR%2X>'#")'"LO;R(4!8V7@^R<8Kg;!]OID5hZNm_dlq-l^!*H&MeXAOU,\$FK`fbk8MEGofh91AqO`rqaT,uns]?]Xc9@F(*#95%2Yf1rkg`?0YTS_,SSIG`OnT<eg04U4W@"F$&`ZV$6!GWc49PL8(cJ3O-epEt?oq#rm8U>WCT"1UM.&JBK?83Ackl);[H<6df>.ct%G,e&&a/o]2F'/6JIV1DCTX-3L3h(Sd#cMgI)P"#c!d#<6^kJgSBfS^gOIct'8+0Zn*^5b/:<*gTEnBb1Jm!\8+?!o.E0NU=W(1Ho%RTnaEe6qIH\\<L%#2Isq*04?Ka<]pY2Rr.?g^Y6EYLR4"rq!i0FV)rKZ,4+0b,u5O![o(3/Z%k$8qaf>6USMOEit>^9%$r%-WYPh%:lSKN:*FP7,d+<gmgR8KQn$_%;AB<Khk:Ei;#3fiQ2;a]P?ql^ooesW\7HYVUt,6OTFLec2-(@$@-sPA:pNA'%`J"+%`4jg#Aq#a%ji)MtV(F[gDO$%/G)k([VioGnZ]-`kL$h.F_Zqm"bttpW]$)WEo^<b3Ac)#8+;E(?5/>n53:Ts6'purO1YSCM%!f9:[U_'`*EVUE%JX%af0;)t.`rQV!"!9UR#RjtaIP"fC=THBLngJ>/O\*add:k\b`q9OLIc#@lM7"ks>;G[E/?W-J_\'orDNq:CZ/38GV_O"hHTN%*%pn_X$I_Wt_.trqYRliYbS4#^qY8oZF.I3l7E@+eO=rc&)8``c`kQnA_V=QU$)0PuKU92F]B0gC)Tfuh-9[7hCAD*7hGnD$sZQQBq%Q&gAeQcieb+Wt24[&Od*SGkefLYQ\Ia%ijqm^9BC.7h_?lA'">DsS7C3AbQ+,Y7e!7^1n6K/dSod)A2o"n/[ugO(E<92(-)hC"SS%`(kn!bVFDT]dt-OJ-jU'qQ^XB/qulc?Wt-oc4'46PAD\"esGK#D]ub[E_X;d<q[aV['#X_ej9pS.sRo^^,chhBmb0QV`sPV!ZC&Q%#JP'ucGZ2qpXQE`BT"j'^.j01kD&jJaKGJ@CP@4[XgO,g[\MA+-$*srOMjKlq_k\e@f/VblZ'$oJ<8&\.f8&.m;"?Re6')U7%tF2%,!Wn[<.)2T^Z1o4q[.\&VfSc-D[#K2k/\2*#co'XT&?g>6Q-MI=GI@^nkG:J:!>(_=)b!]jH*T![*\VAa!?2`e9rLH"7JbCIgh#D%RN:j^,8clbgn$+r5r7&@F2&(Yp34:MmD&PtqqqA45CXJeK7JFMh1,Im5QC\ks7kDgJ,A]LrVbW&s4op<+5_PG:+q@ifc]Xc'`;nK%ds'\urupP$gY[JVme;5+m[sJ^Ip%J>T.^lW?bcKm5Q&2ARgK)GJ,"dh:>c)hQiHN(r9g2lZUFiPpOB]Lq%(7?h&h+?mJ$YD^O5pf%s7G^Is0,D\<-NBJ=/Gonmsb#grdL^0k?Leo'RmP8s&G7(09c=ShgP6ks7#D?rScZ5rkEm]h>]#L0A?EUKJUYup\V]7ao7XInGL=F%s68:As8;`.hTX0`goA<gI%GFU^6W1$#pCN?Tk;cl:T<>#!X&m>#hu0?o34h3h0M@W)>O.hl!,kK*D@(hj-1XXH2om^_iYpfR\BHc%>`kY?F9k2')i9i;e)4/p39/*I8oriS1^*#1!(H]A*D?af1^WRD!CLQ1n#fL(nd,cENsLXk<r=H(#B47>oRf:<LKBL7n59841_Lc.%l()>O3%1BUYdNA]0;59Pr*HRF@lbT%AQ<5bh1;5^_B_o;-,Qp)+0)UlI%\DKmg.&A.omX!$?6cTM^_gM@dCdVj-Xu<pCW(:'A8-P%N"@opkjtQ\[G729s3S$=4GhZW9f>J"ThmN^4=3(0[?5nm9s>17GgqX@+F`c&Tg.OG2q3]_S3)N8.e/%VnGDBe^]._hW;ih[TD1s=%%:gsfTpF%2;kF%11k<l1g5[#@<PiIJl[gpH=k*o7/"D':NSk-/S4Sh*16&CMEuL`IO1@b,H,kiLG_>/>RPSZ6Nq7?_=gkl4RmS_A%o9/%-eT3(^3T@TG>,KN5l+BuJk"i+&T$H'J\NS^D73^SqrCjg"ee9ML7fu?C#*l55L9*F1S)6RGDp!jHpd5!P4AEm3`5"Jg$1OMD%qZhla%XsulJjb0r,l#kM#KU.BTQ"!r2XljlkC7&L7%ZMYpTk<M?l\CVrkSu@PP2tQS`5-9IMl6bj^X]O`2#hEKqI`5q''6,)@fY4%1;k^Z)/a^[Z:`%GM5@aeSJ&Db=X?1R3El"e%Dc,iMKptX^#ep#j-g%5L7DufHQm,:hF<f(??Uih=*[Yn[iFBp>>AmO#*s3O-P;X+%Ls(S?ZN).TMB%t<@Dj?fY9l&TKo,aZ!I%<Z#4CD4bF^NrY+0I[Fm.JQ=-!(&C)l67(^CG!ZjCb>Na4!Lq=W:h/m+dF*W-mC"N=VP%d/E,\63$c<8Hn;.JC(o+5t&0/LGN4Rh=3f4NeBWu:CJUcZ2rku5:fsODBSdiI]QWS+J9>gg#3Q":#[S)<?/kR0kL#8`g/6n?ZFfj%EbLa6jdQNB]["hNjsHeh``DAVFFhlO=XpVijn3:7jsGO\'D?D;HToEW,(^-4A1i,+/uu5[=,kj^6WFD+#LnEd4f$!]M7R81a=7if%1^kJF=[%M?YU\\e.(4Rjpn_!8ds2$H[mrfnrRNPlil$k*p_1M\Vr>N(=!cKA6<+;._sci+=?S<m<gh_3ch>la?fLQ&:p0EFqKtS;%pcXnohsu*#o/?LZhKnO`IoUWK)7oU[QaRD.Tl'Eb*QQ\d1IR.[K9(Q73(Aie?2/0C[M.@!hpZlL/[p'_De#Eg54&)CZXN0'pc*j+%8>lZbD:h"B%B&CN:teE%b?8HtE%jnX2keV,$3T^q]]REf[S9q`d,uE=-hm\Eeh5oj%`/VSlP4f=/)-KB\_?sA-?Bo?7g@41+MbKT%c1,maOtjEGX\uoMb:B`I&rNpK&<sJ1`UZn5IJG5>cI5o84L[gb[0nUKUqAkmKI$Q.J\il!i*G:;QZP8:bl!Nq15*"BW]2X%F:%B'%Fo>ff!Eu=o$QR)rj/$%cEgr9h3cNR\3ds@CeS=:3]FC1]UTM!X^c$^1pT4h=U$GQb(X-.m?HqJK.'dsq;gGu+WrT7G\+V&83M$`!%b]'(T[u!UgCVQe=#$>c(L>KXr\IolL*c"0J6=ndD'd1(Ne8q,]$ei;r9BWY9EXU5DFo)Lu8D9To=)d-s)]%j<l@QIJ^sdQJ/@S,R%Dc7d:V.8>ZJ:tM(PV2V"KR2P=,GAre=?7O0b:Pu[e85t3>R$J\/',R[gK*Tk[TVPQ]FC1]UTMrJ)>@_fE1sHI,>Gd<?Dg?V0"a,6%B7NgDqGD&Q6S`#3/2N'Oo*(4<bqgT4$Y;B\$[#r?DZKBT1fMF:=)_dp6=1s,N]*eVP6e-_jLc[fnBLf1$*+Zd'b!gjEc];N?NA3r%4?);@U&!"0]QTmlRUDQ>)nM)Y+FK33UNukXPOjY7`b33NaaEQ^bT(Z?(I4-?bKQ>Yk]5j5?8kO?%:EM'B's0tFO)*C2"+[ZEM;dF%p3a),SIMR]k)f,HJ<?R[bXge]ThbALjXct1^bWMZF!#X<Hi?eR2"+M@EF+>apM?3ZR>n%Uk"sceRhX,F%V]0]Y`laS':I.H^9WVj%e$d+W.,DsN!(kKl_I+EJOuTg6St\`\LFB>=W?n@H$"fSCi`+6j+EB9aar$Wb)47!sc-oet4L[gJ[Jc;:*'&&BY8^#M"qRM4B*oNH%=!fW7N*BAK)4"$6GP[Vp6dG<*88dS#)1r=1mS(rBkNTVgQJ81:[k7q[07]j2?3iPr(_1&%?=cc@mII=uEi'X<EjLiF)-eT=R9lh\%V=OmnDNBP/5(UNA!_@4ko?8%VQibS*I,901:2\D%&Ee>!OdLj(8Dcar:@gg&/=e`8EdKY82ZA9i"d$[H45&he=!l9V+#Hc+6gM9C%j>8N?,\A2Yd^N&Qe%AL=9BU/rg`C<t/gs;ngEOm`N6D]#_K):.r%5g,Bj:[*<OtY&Ms5UT@Vu3eSejZPAtGJ(3%rg=?DnmnGnZRu%US6Ch]Fa=iFFDt1P-Z@9%C\,TY=bI6),G%OZ))6GX3*0+!'/R;+PE1GAeZk>J5\V7SYZ^2?uF<!mP>uI4ibXi]T8&kGuXq!o.fiY%^Afmr!'/dATJ8:Hc"W\l]@/pHSYbp)0XF8:D_o3)?GK+Z]ShcjL%[Ueo-*^I2R&KOJ;it$N#XE[7NrWUFi"qEa)n!]bjEg+IJB)u%q*3!L]PieQGpNORo<Ik.2PQLAJC6XF7auei)4C(c46[,/P3KXM/$ISbD/I>BT,P5df*s!$.ra:REP@#F4H0?7%^U)mInrUJZcqtq%`&XHn7V$5)Q#Sf;12oFXR4#?+HY/=NC?q@X2K"a4J0\j=mn8'j[.Cj3b(gP@UQmDOX>./I6:[R83C\bc=W*8.4mm^DX6/ZZ!LDK8%Tss_#^)'%t1bXMU/e!I(4g2/f@^A0E6_*O(7X>hj,)H[23nXo6Z?0E"bO*^"gXHaE07`+r2Sk?iKs>j)kO[6QEDh-iL,de+N9i*+%71L,kFKXdaZXdBjbO!X#gX$2*(I4->mp`&2?C*qMI)nDja42t%`/1'qA7cu8o!_Gko=RmW9BQbgg`?oip=B`IPOUj0lNWNAiEflm%jIO-G%N/kI)q1j4,]IX[0W[X])]`sr(I4.iO;f'B.+O_lW1BdV2HXjX[V?U`n=:+nf@LHW40*V3aX\:kE*esJor8jda0WK?k]lL*%?/u42\R#9Xc9+&GE1mZ0lZqk[S[ZFUHaNH($Neuh+ShH"Z`uKn9ON32DO)nk4iSK_EjccL&i@qZ=Bt'7B7!rH:ZlT!g`C=Gbl['T%!@'u'DDiOPHGK?J&"BEe_0,J8OR^#7OeIKQaQ#U\cM'Ze/=e`9EkAgQ2?f?7Kn#;]H2eeHo4eEJkMp.<HrQY$3gB>h-VFiRLeKEX%gDO@cQ'T^2ccfkqUr<crdV?F%rORR@BbcT'S<;#qq!0m`KPHa4fN)H:T5'[[6dGPF_F185R2MRe1'?k6\lh(4JS"OkW=Ja>,M589%^.+&DX`cgdb`U+p<<DEc'qUlJQEFUZVCa`^SG!,J9[.W74r699H(W^6dod>8Z[5(6jp0>t(n$g/5W0D__Dn/hf2>b@4=c2Wo`^FF%/S%=3(WpjR(TM*3XT"O=]p6(;+%T`=8^r-:)4M"dn#Xj4X!b56m?ouqZnHs*C7Z==>U\'8?`4pmKbcAKB1r!8&%'Y;&iK,d@rktA%_"rGs4IqJ4kN7lt^&X=rL"o5_6E*`X6L?=p28M&[2cRhImY6%d&85DN8^u[<J+W,[((S))+C:jl%;n.Oh9u*[A@X_]ZnHqTC*>Oa%\PT<T^/-makA@HY*c9F[-jYM<$/!i=,Z01MraS%#o=>(U-]o/?B'"dj"E<NC1NUW??NA3s4?$bkTa.+\=lhc6\%jbG[.H6]!pL(8%Bq"e%OZBU<+FQFgT$B89bKV1XI/tTfoA#;KKmn6okI'o'h?M0jdFR%lE7,OVdPU9$j)UgqSFcQLGrcmJccdQmHiYHb$^m.#KgM@%%H/1$>2o%2\\+;KYPk'NXPGEKm)O9nt"Noo&jlpST4ZA/E53ufo@1JFBKiU:s$ZjbEH0q#&CnJ)E_oV^u[HeYi=r2Z0=(H@@$7.>Q%,N4912K=QcdeQ"8D?4dt(Y0iVBpP5e3@cs`5-LNRZR/ddO+qE@iMiJ>o(@,-8^dI/&$,kuo;Vr9#HrdLh%J1.XL@Mh00i;.!_AX>%\J^Y?h<pNRCM2lu)joBdXg]ngX=o+bC0h/P>o4!FI9pJXAaQe)!p$^AJ7NC<1X`g1VUN7U25U`j?uF;FmU&6;I?'Ghq&D1S(FF[]%5+f0Qc=XNH(*Mdg!Aph=\J_+4;P!T:g+f-WJXJY>H5lk!qZ9<gk'_'!cDqS6T9#D<Z]VZN!p%9QJE1Gg2\N\uWY<-D4/NC&?uF<!%C)8"79=nKs#*<@i*<)2i4bgIs;S*R>Idd@B7iF+QX[e\F+\qqT,?"tQOjA_*SbIi<=ZUJOjn<Ad[NDms/[1qP)b?t55=)'A8Ed]A%Jb['lPsfa*kq7q@QC/mkq]$hXo;mnrL%[Uoo;['sDh-sCB]s=2"76I=M4/Xod5eC(TRB";T$DL$bKLMFI?'GdGuhrH6C0dso;['s%Dh-sCB]s=2Sb!#D1sPpMaBWDmP<L'E:WJ%ZbR?5Kk7C3gaGEkKPj"&ZeBH?dr@PL*1N.oLPV;s(,gAF&W16p6:d,sP:WF(?bR@(t%OHZDma[7*cg?a2?9L_\<<G,pKERJ+1Hs$\I:A=l]NWtjGD*PY=Vo"Sd_-^%[&WF'?pnL4%pqgcV,gC?c-Kh30`ojc$FOgZ>mFbP-%Jd];EYJ>e)DBN(#4:q/4,FA#E"O8q;hJ$e<IiZkMb@V_2+Qn+Q,YRaaN6?p8GL#BZo5rgnbO*^.>8IFf(I/Tj08+-o%#8gdY;0%%%]:;&GjI@lRA8*2CEk,#DF1tI.9BQbgg`?p<I0G2o"ctjkkF&Tc0En!>q7O+W5.d@Q3om@qJ4A$N2mTtjWjBE94%naR?uF<!hPNQr%I/tTlo6rS]kEQ@dcc=;Yq<0ktFNA`7!6N_WDWGl4<9J\'G*^G.@(AGS.ddkd)ckg&lUHt8D%&BTN:/Um"MUHdg,BR5rRt0FRUg\(%jLd-rUhZJ=q4&8cZnKpFJ[,2)Y8?TU)1\qmFTaVpFT]b8&B:C74@&/$eKqH6;:4[;,qBh'm3P;RSG*2K<6]J?6K]BI][,p+ah.eC%fqYCQnTWh+5uKT/A`Ii4QU(Faa?5`+5aIa(cMIZ6Wb.Y:TCY6jg?1=<)!es-HI:$mpcIjN(n$h:Z-bRM]sBmE0Mc;ulBsYC]J!Zg%C*>AG3\Ss-?`9D>o*/</pNGBt?[,rU2lW8?Y44NQ7A,&e<1_7Pe+7T.m6aXOk0o*5cC=1-0?hB=`gU[DHeYp8'nL2pF1qo4U*cHY%i,?U!gkCPPk8@WBI$m26-gc%LkHiBQF3"Vh>`BLr$b;DFKi4K8L"^f5CP1gDBWH;B5of;*W6j-*>X[s?&4a(H,J6hjVg\&a;0'@Y%FEh#g9;(D/O:e]&/ts,%,Fs`5DmV1IcI7%X/@S,RDdD;.07o+_KgHQKMo.j7(TM;NXBhE_6Unj8\;4>4CsfdqVU<+[2,!*AYhU9/%]mU&Zq]`P+>*rruF)_O(m0iO:e(O*]g`/'N(;WGh@W%+L`DV]h`S+HUDhI0FB^9LB3:2X^,&3gD8`rEOSG%YVo5ln%Ssr):^`p:E%>0Lj2\QGlZ^0!HikA@HY*c4n1=EEIA]7"&%(/_[jTh<K?aJ*b-+^s9fRgi>n_3`oeV=QR$\HU&&=9OV`H#?+8]Mp,)Z$&h(9jhRo%L2->!+ohOP2hHse_;es@7m+`u<H6l>*I[p/N%J>Qn6@]W!#Yrui1as02\N^S!CluRm4;OV"*8gtFe8\cpGo[\>3KH/\kj.)I::>^%SSpg</O2eB,%tN3EcXk9h/:^qeBZKf':@IJTsknI`%PSXX+`/QUPnLujqicre(MN?D?1phMqB4h0sa=5@\H9i@c`t01kE2#>.P6Z%1-bg%,&<lj8a/PfSG@lDnoQdaQ<Smf53U#<Hj1Ifo0s\pM_gO\]^dSVfJm_b`t#UDjG4r#g'J#_=+%FW-[94pph0bp\3>paF("6K%RTX6W3:ZV%LeQ("1-Xki#2\NCo5rO`cgB+VD*MK^\&cA!DBPA$>cT_#[duM_9]1>$9WtL5kq9W[l!&$83U[=uR@<;NHnP'&o00@K%Vt2fKDND6_\fgLV!0XF/+_5\'3/mTWPqA9/bHl61H!^Qne3[d.F.l:jIA(DAc5U0%4W8YD"9S$"+IS\E1ZNOb$97MGH0a]S\NM`9%SFnm3RMN1QR0uGEkmLLtFP[#@mEs;8p]o4`5ghLXA0Z/%R6^Urcodj.Xlni.PJ.$[VM3erk!H%BqEjR#S[ZFUHaHea@'3Ku%iGH7%$Qt:06@dAtT5_RpA/Qg[i:nMa:rfk/@(NQf)2WIVBjUk"WHiBWF.lR2IA(hMcJ-.iSo*"1^fPPG$MJTE8_)`kXRQ3Y$(Y-E&AJ?4%POZ9rc)Bq0do`D5cMIZ6VIl56SI6Ir[*S(#l+@1cfqYCQ3=pFB!(k_RQ]9@;AHMDn;6t@Q%l,'fO;#A/)HX9#N6m8rGN.eno5rgn%k4WWWD%8Pu$Q.!SGI(/Xci[&ACt(#(&$>FoLQ)$4N*OX!,,#B53q3SXZZP%(bO"*2gB:@8(]I.7k.PPpcDqPUT9#;7o.bA3ktp)h%h<:<R+]>nuCo;_j:0K]^rQ8qlT="BFS(Q3l-i1E*jD/hFVWAeNUi)?QdVm0TF2j4*fJm?-BU5&RcMk\T7)J)s)6L53"8h]$=YaoH%AbKr>%f,m%cFcC+L`lL3r25f9532CJ"S.npG`K?]K;[pm8NPk\cS9GtccR)qGI\AOYF$^/l<@k]B&6]5LgL/(f";Pl3ZeXfI9p>T%`(##AL,eL?N&3-I6o*re3TgdXZ=I9cbO!WrgWU1u07]j45.ccsq7o)Ro==/.Cdrb`%QWb]+F./3NGQlJFj_)k`akbHbj=$2gXlbZ%(I6D*mq!_b<gUVtI*=\j#M/K%`#51WUhCo%&ihVmq-L"e-1gD+ArgQhnBWl^BHclY!0X&#/k]9+D`=iPZ)*HTEar/46EI)tn\VL9%=`+^0h[:PE>0)[c/sPXK0@\:qGoJ<D7pEA/-Aaq9hl$(Z!0X(mR98UjN=n7T9]18=%[Q3c`6q5Eg:HD.O;#>.P,!;?`oKH&390Va%Grfkrjn<BRD&*8o(I3!tmq6-N?CAV(I,$iTmlQi)6dGH.8<2iC)3YFKmu5S.kNTVgQJ81:[oqXJ046&>hT\OO64Z'9o3q642Ro?J%6UpkQ7[=fF,F8dl3p-m9ZZP%,bO+07gD!K0(]I-pk5B(#cDqO:T9#>:ZVgDN*(p+DPGX%:6nT:Em@5iR8k\?TB4eDsdc-5<DBla<%qmq?SBc/'-H[NY\fH[4unbiZld6<SsDqm%j2<GYs-[fE717i*g3Ld?Q"7,R4=ZUJRjn<MkFoaqG-*!TVq>s3bQ6inP[-%g^$+0.f%YfPD)F:E:H4q`^6'>FO1XEe\QksEEPp%-m?]$LZDp2'&s$Nfu/+;pXb6<4nW_ml=?fhttb/?8b2q[4Ma>KDc9/sPVu03!qq63EV0%Z_=k3+Rm,GP-XmG1L_/tJ.k2?\":lW\)eAJ-\)4ScK;YTZh%(c!J];_?"a=]Ha`T*"Tec7+Bb3.ZV`ff9V?o"DP#-Cf5_7\PJ@0]%\:r^/mm=!K"%2IC0!p2?4kluBck/X%L&d,9#*?bT,B!*bco2bB4;QUer3"^F7)I^,q5Ru93TN"NJ0]"U2q#<7Wmea[4%naRYhU::%eLkNke$?aVL`hNnr/4i"]CWT:(75]Er6/BV$SQPsQC1+c!Wu!Mk.)AA$U*E!cmn5#]EOVSUSYF[&4g1/8_^nENSJeb!X\Kro5q\U%=`+^0#n.qjS*+DE0(cc>5d-`Vo/9]gO1*p-J<Rd!Og\CG)n-1qi#L)Kc-t@mH=dX)#7MGP>KDcY/emRjd-G;c]E+>O]q)V=TG0*X%S#";Uf;P7l,#CNH/Pg"hlFAp>p0f=a$Zh-R0!s=]@$m.Dc>1bM@f)t?E0O@+4G!C@JL#(9I9GRq%E,V'p"3Vs>^7I%fgZ^o9J]$"%OAis!.N)s,gl0s4WIY+sm6$rI_/an2<P)XVNd^8t4<d>E"t+2cCaXO8R6Ue2KU%S>i+qjDj29^Z3<K[43LaSl`%H/D'0rajVt1[+%Ari873Zo!L!0Xa8+f'9i0T6!8NL@jlj]'YOkC3LXA+R?(lU$G's$F[USQF](HSk?f"U+Z<5S>uI@n,e$n2pU?3G[l,AilE&aQ[%3%NNd\GUiiA1VgkC`QHn7#gn&Ar9n5M/!_C2jrG8jd.hh-=%@\[8Z#q\`OL)\%P-9.C,^#eS-\%h-QHi]BR6=_'*<7HqP@=__oQ:7-%f?2Iup<Mp\)R/"7HqTm(oo1/Me]@<%aJiMH8_-4GUi]qA1I&&];hb'(Y@fq>r'?Urrk9V/jD&WiG)hRX=]GOn.s7`XgU/`*0;cBp%k)^7k!0XC.DT:nQrQb;QDP#'V@$s/]H5llLquTEhAt<accDhLjT9#?eo<$((El_s%!(k[&2ktHNl-B.,C6g@!T6WTSGoM5\I/tQg%o.DpZkKS5!k6'kgCfihVLQ(j/N'&\&7Q0F@3p-lNZXhnmbO"*2gYaUH$i_PJZd(E\B9`aecUZ-Afm%gL%]+TpajS'(+dMXW46,qS%aAekq/$#dh?R44b/_mL`g+<b@N.cbn&>=OO+^Z\X=([9tMs-iCY<#GV\HgcOZ\rhr/\n67>Cate229Np9Cil8If=O("SNZFo=(Mu%Tq]B+5>#U*7)>0==u>TH+rmXG$(lTjS5imu:'NId?Ol#W#hB`#qK)T19@/0KRZ0G8#2<u"9G7ucrC!;k6uP66EHuq@KOnF4=%e?J%RV!G9_E$bAd5<O!6AA*'l\0a/X/Z1l-!%G*MW!Y63I\/[36j>l!Oa'6B_Z*:q`9Va'\s$?:VhU%7UP:$M.I#b9dN?tD86bS\K83\%G;-jJ<C2*%@+)!IF8QY;I,hfANh]7;mLu,8TeFigo>L$pJ_pjfcOkXHC<.TB8?27B<D-jV5Q'8cr*qpHq=1=/YO1;63)qHlEl_1-%JoZH#oP1_Yp:#1C[2q#DeP;aNOhg6kShdRWSZ!eD`5X6G-(.TGId*#+):"ZsiD*G?gl]o,mS=,)fEC_sY:\Qbol9@Dju/oK]qG&`%:%0!Gp$233&A;A1fXuY5cRUmjYO]7Gm'0g.h*(DEgZo)?#H<TOMkre^j/gP6QlGs,e^:i%_8Y#._0W54!%X@l=?h=W'#ad%1Vqea%MV?3)kk`g'qFs;&k-ChQbPbu2>Q$=grn<,D!D.SdHhD=`;!MB!M<3<sg0N_0@Oi1%8Tj2%[0,HhgQ4cK+'lMZ+\"PfT7iK+aS29'%])\FDW,c3!^X&G%BZpt6@)G"Jgd;eO!LF.e.LV\FR8lG7f]$*rS6HNWi'I!.\itd2)*k4o;kA)*r7"n*M7k$=OC]1s`sY>[l"_fU%9bhX0XirIp][-idgLE#/4OUYn_i47DkKLY4Np5VadA=a7geN:6_2lVD`Ogl8QIM:>%R\jSIEO3ia&X\(pT2sOQ4Ct"at>5(?W"J_%N5]ULQ-8aJ?u&)2gUtm)1$61`qtHO@k3SnHdgPauCf,9'&j4HhMYgGjmaGa8R(ke>XpGs&;cQIOH<_+iXKkI[4@`(Cg%/^6"6&H:%b].Z_N]f#U8E`]O[k4/SgSLp'$L9Smgb$HeHX^]J[]eFZ\?4MWTrm'MXH.S(T!-n7cIZpVc.D>Z4eI%oI_K]TqY@_I*5fA4El1u:%oaC)oV=SiaEq=G.lPI9*Y?tD@]maDG[N'_O[W6e-#kde3gX>o/D7TJR*U79Q<2cCjgS&f)DHhS(DHj*S=GGQ*\o$\Zh3JoeD_Y[W%mN3Apd_9UWgq<?'HffPFRcCtBH.5C*[Vcc4enn%rf'PYhlk.idW0RA^QhRUFFrj/"^OZ>m^'O3\,.[.Ym3d8I?k!OMc8nFX:BiPN%AKjLaTHl2gmo*"f\uX.;PfP$8/.`'g%\N!pYLV1ReTISF-f;@ARr>LQh!45q(Z/Q<*8e3I*1cFc2rD&QRr>LQ*6%>(2r?O?o50/J%Rg7j-NI&<UjYl"&[CL^u>'54>Q#h?-C>0_>2sU1H(#++_<T\P\DKPL;<GqDFqBJuq&&pbHC5C7*Dm@t#<[2FXgkgjZ'mY_O$@3I[%oJb785m`*OqV\#gQ,tUaE)8-2E_rfT$bk2j4"qC1"^`eC(oUKtpuh(8,D"Z4a$4e:*<261^"BBfH6HbjcATA:cEU0Ib]1tZ423:H%mt?&-H1]C':T]_HkO9/H`N%`U-hLS&a#paba#eM62P8Wm'Acm;c8k$dof8Gl)KgYom[TJdXdkT#)jESSi12thon%D9p2/hfjs=b5%l/8*h4enT3&`f1$[?P0k1mlpaB:Kj\\6th-bR(pcQWoj-iYHaGOQ2d1PG=2p,'2"X[-5G6XiqCBC=*@"JpEs0<?3W3[HLbj(3>YA%<os%W2<a.,/`kW]f!N!.DU3;q/`hXjXiW<&eXdFo[?QkogK1ad:/6WGbOncO/Khf$&Jl5/oajY1,J*$7U;-Tb%mU*5]C17BqXOI7%hnFO7mVd;V'D*sMs,3j+]cUQK;.>L@/$#Mp#fONO3fBcQ`-NjV!`l1`dR0R05m8P=U;SDR&Aer4UquLC)^Njm/XF$(BiQr>F's2`%7%HDr.Qp3*@K%1d./S%,k0t*NYA?SWW$m'.$rli:QW=t*)pSdBkA#*)oVM4t(Y]%r\us*LaBC@q6P=fRMg]&TB&Qg\5]kiY`/fLq%c,B%D!+LpajLOU'2HS9U7D*g($GspYOopOL3qRHcI^j@G!R.H1-a$>ZZJtp<X*j\M8q>KW\.-Fj/'YqA.L8&[_+Mg0O:78+AZDiQ%\iu&UDZmFLBGZ4f!\7)+(.$[4K8;)aYnuh!)*U]<j.bhMK8</gh!md2BB9\pKB"Pcau5tgdYA2t%(D$pIB+hO11Dik27Xj"!nObb%DY8KZFu;l<!TJlsQ-CQ!^tQM*M*F9X8mA_]ejHJb2jYD,MMW<&D]sR`_UFRD"2%'`'`,(t3,f)b.RR$r195qIbfi7(^oKL\PRp$0%%'W;YA@sQ=BVc>$r"h]Hi0AS?&!pZ<NNWH[3J\FgC*Nl7dpZcnpDMckiKs1#TIXpjHm3MR_+AdBn"@%,dH)eQhWo/hp>/#X]QjSK%7]^kGYnP<8@X(dHJW-[g*h^U;+#Jt2<U.)r@IAqLbK)dK3cRdTQW6'SPB$a/78++1&dEUACr.A??:)XXGZCY(68Si=B!N\%2.KdG%=@t+A4u+T<qm3qr"PAN$?h5Z<e^i[BWs<S:og;k`UFjQEp=ST90)"5P1#^?HogOSl;<3"SBT%:d<[ZaCaR=X0]'n;V&N#h$Nk9(6%hnn0hbTBCLA'.?`%Y7q3aK#0"69cC^=-J*l7nYuE9f<n,`5(sH%(>*FSq[H5080p4JK?pAgo6R[qeUb.'=<gSNR?/"VgC(2YQPLM%+q"O&/`UK%JEmlR17h)*./J^'8n9q!OlRY_^2Y9mV2u,%dHINaI#QIpgp;\49ER2c$^*3^FJqZ9%cSek6sXX;>-2PPB*Clp)B?0B%C-uJV\L6"oJgBEKoZi`V"1-^aa84c#<Y2P^L5Q!bF$2dYk;GC9N^XUL#mdLhiGOX%GD=]?9*?g0@u,#uO#@tGA&+(tetZJF=M3U.%>L7+"f8g)E_T'+?Pp'U#]@lO?(\IK3GA`c%j0Hh18#h>WTg&!q`>K=4?Ma%CNVUfk!fDY)FC(kddM=64lQ/'kh.Y#ZLs5*7S&_<R%oZ26s*ggrLEg\Q+<Fe\%D*c4</J'(L9,r/f2GTo!P&GJ/O"Y\FG.Bc?<SR1KH.jkW$)UKu/mEZt2Ro%o-LI!MnV]Zj3J82_:IjoD%T/dn18F4SWqmm2U?/(aLqlXWFa(iuKd-fL<[YJC9>n?M:1kaW=R-Xh2k%fN`eSu,$GudESDS?kmiF\7n6#*p%L;_N\WbauAN%NBl%IFknuA'`i*T\[(_C_(;]G!47aB37C2pu`a[R60:(l31e/MX^`g%/eg$kiAN)4JmJra`[OF-89,'AQE"FSGc=6!L1_fH34bL5=bo0%]%mK/4s#<e,$I#-"U?+%3>VIk%;3JT/%TeFOKeO5EW(*lq,QeJ34!ASODEBtf"55B)T25MA]t(q:BR_$81JZhR]/"]Lti*M2?VdZ%Rn)6Z/.ALI2*SNN75r4a@e78f8-6aWYoV``R]1a:D%:T-YX.U0Y&+X+HD$XXIqFlgfN0t3,7M0-ct"s*Qt2_q<QSl$SGO,SoD%hT%@NOuFg`WhV:F!+$YC3H$SNqB,\T5,41WsZX,G_.qG3b;MUYDmWAi<@b%i<kW(LR^MSrHKgAO&(O>BnQ!..kT=8F(PeUY^e=nug5)%go<bm2\<f"UC?$pK1LEtaaf%`\"7<%h>:3ueL3/3\4k6i[':oQU>&)Q4c(e8Of'md_".>T3#qaochD\>24u5Tl/R`^\f[RPdNJ<.%f8Uq=I?,@fFWn,\8"'5j*[>Q0MM/U6`MOor7%%[1YjJ#J)Tfb&UY,"%<HcpEHTk:kJTd\oj04/,R7AQJoQ6_NXC='Vi;fRnW_l(Z%r$Jp;QYZcQAnEN*+ITm^ikPd'kq^QoFkgo/*:R><cPHX6Oi(QOO^HT0,^&U_JjD`K/[Nf:i"K$/>J9fmE>N?NBOX?_Q,i31aE?iJ%M(m>476<N8,iaC\eDnOi%]n$J1Wa#eR'AODb#DB%(.OG8[Ed2?UiR41JtV$8K<t(5eGa]:DmeMsB%A]'_g".Ch1pkBC8r*7lII<:%>]r5a5lX_;cR$hMBB.0D8oD;:Zdo=[?:8V2C`^pW"n!TYX8>7qZ6:cL0HU!0TN<H[-HXgIm!PM<"X5ir:79YBFjf5Nh?S(A$^e=c%h!,J`LlVO<a+g%rT&kq:;k\&.-eh+:Y`'\_iB?dD4[GlD>F:p`j_BmiGjm68#+rE+1\!VDI9[A3Zpilj!HD2Z<`q_db.A_:'0G/I%K([('+c%oU$?Xh\O2/=g#/r'\5WUV]G7oc6%Y%"^5Yk+5VkkE4Fi((dI6No`dSS0`J1c-#:,J]=aRp_MZlVSsheHQ#<9/?rHdd@F%6BBrUp/ok3jW)<feVueg<M?PE`]r;Xr-.&5Hi<Z-]:]&mQbRcmr8Go8J,B1;'`FrAs'f3jpP8<j8-4f`F<`aO(legMV0Plk5?^g2%<SYO8@$ddS)k\EVp?-,NIA!@n)dQV]N2kp;_L:I\9u/3uj9;L%Q5pP=RPCBJb[<KS4\8_=]h[h48<K@\d=d:>JfV@Xou9Nf_>NLY%b</=_^$m5\J8Pu(84RY_8/Ug:;;<:QKGg6/PAk!kk'0]VAt;]lHr)Me:hgXaOHM:Z8H]]sR"W#r]r-L9D[b^5e*r,BfpL<>ZCQCd%M*>TpN\Q.HE<5kLp!+P>UX1B;!4cTX)JC3P0Kgu&n(=URi1bVFZ2)j*YLllGP#NQHW7Oa6Sm=U'(!sIN'p]+!X@X_k9>gbK3f<(m%@/^6YFZ]srOt4B>n<G1U_fYRmdo+DU?8Rqlb4!iC"O]M)qY29c(Pl55p-C3a9cdAnj:28dOTgYFq%.8f?q$6ol\Rlg_#F0shV?>E%Oe`5mDU`EXREON8-D(-jq0kh.B9H\@03Be]>?)_h1YeI'j?"5R\GB>dQ,><%;8Z(N":W=]dC#!]d7$@o2qB,$@bJ?VQ=9?[JT)24%_<6+GSj(WQia1-?G_>#pdoF-*RYVgo^Z<JZ4_`]1K&[j+U[d(S8eKG\;^JB]4][*>CJp5*L*7XI8?U]%,SaaQ4FtSW$BLpSIP+o)%fTsD;+?X$%j:=gIAIE^nlaGYLKp-(8'MOm/l=oCD5bUT[lO^g';HGEt=ifj6Bum*/(KV@cX/1s:=/[&ooU3es3KHn%Ph_F"rQK;Y%`_6PW7E`A8:2$A/ou'Q:=(UNla]s7N;=V=2Vt8DGIq*MR[fR;<mMNBp_h><sJGSpC=_l)j)VC:WD7ogf-lR-'JT^R*8$X8=RB@>g%mk?)q&.K;07^,*HDH\Z9c:S+kY@W'<P*?'7),5bI2fp!8mcoEeU*d:)1MboQp_WIe\6Gt?AIlqtEjc\R,>)^4+GO2/3T%cq0u-Pa%.H@H_Z%3h%jJf[TA(O[.AJB9Zj-On&Za=0U9bYf.<&E2GF?)q"9=$3o]r7nH,M&s\%LcG@]'#&b#nKYfa,tr=NI$OZ@CVtaW*\.r%r5OX^a5g"W;7!N:&3'0Ro:99V.s[#mPdiqKmM$q)15Q/Q-R/kM/h$4qm>"J#CVbIOV3(]a@CtDN<kALPV7DOjZHnh;LN,+ECRE8k%;C%?!AIud1N#Mn%M\(N^)An8G:9nLU&t1(VW1j``1E]`lq^`<-1bDp=b\Lh4UR.EI!tf_*Ms:TE?*B]rONhj6RGi&*k!a!(Z_Ua$%WK(HeTm1Yqef1Kt^_=-#]B^@2ChGSe<aUlo3>Y]"-@*u@q$bQ_$(3WKX)<T=*otKcQk+8j,pgP4o,REfSPaI(cS.1.aW*\=^5"_u%,B]5+Q)>qM[uGEEK7dHqK0iRY@+(_mO!C<@P,<(/F4;elY`Ap%)R]hDF!/$IBj?G-2)dXgW3hX!B,.7+0(Lbfcl;Q?`@ThpY5'GO%'NT0+M!K!S'q<4SU9F,uB<Z[K_<b#?^o'Z2VB\-Z&-K%Ykf.C"+2>>$Qon@DPbFdc<L#2l4S].h@9&Jj+c9#X%fNQoC;eK,6+R%B%I;p?<.1'qtl"chjY(n?)oi.oVROqZ[A"mZXAqEkjQ]%/*)<M:sU9C)G:<Rlp8WbSS@tnh)pHM*I.S9AUcIrZcO3NF4M?]1O,pjYp%b$dLK3S3=JmC!P9_3jp[V^aSla>:oG3[M$tcn#)bKs`9,AhPJ:r]MH48/b#GMJZ+A)4Z"IoYb2BUq\WI6m%Z;2f\_ZAdk:#1TH^U%:<:98TZ!S5q\$`!!c_5rccI.ol.D.d?Mh"#h;A/[9R1tB[kP2I&adStOhQ$<Wg/m`Aq'(s<6o<HL@-m3QQWsf]Pt._Hi?VGY(5VB%Ng:7XfC:WG7=PG?*TSS50j8].4gNU.M:EDX'21p00ba9JJZo@i$jehJ4cmY\,+7tA8U/RW-Ca3r/&Z^q"?T"FZS&+r9[(2FRUa72%*C_^miq20AlQ%tSNe&P@"<=KY@->'E7N]hY%$9<Y'b"FV2@dsa&>fHJ.:!OA;+4dW7^<rRW?L=s=2T?-4+6&PkV,o`H6b`W6?84^%/47D&h(V3<7PK@K9llOC0gj/j:fYjc)+;>GPl/$$Ug"MqjM`$MZghYYLGgIU'"krY,ULEN>u5`rNoM2`S\f(H$Ln1,cH6RAJWT8-%&_dlG62W#g#]ATZVoV@48U$@$3SWY7CR3[^G(GS&220r2K.UpX^6I][/sHs'.`fBBN3,,0i;ee?kQ_l?7kODITMEl0q+Yf6]o#Nj%.E7WjJ.mO&\?/_4E;'$XFK*Mp?@73P(Lqr6'2r=:U%C(NS_\DGb`.Hnh?\KJEIFLK]A/9+Qk>88Z=CKa#9k]l],3*@.8_i]Gjr#*%U0mj6s!?u;BqegW_ae8%62=]c1MOU=\!>p8&%=a[F!LAg@+t.H)n[cA'Ml;[@)\+$5aX"_nQq<q1mi*OTAKe->RV"'FW9--bHGsX%$9Q;7a30@UUcog$944QT%FJd-MGD:2Z.L.(3RZ.CA<TjZKlJeF./8+pI?=+ff-"p0N"QPp?FD:SPH?b'!Nstl.t$e"F@2_D+t)3Y%*9a/['/D,"(lp]H@#*^GUjA'Tb`LBIh,-`0D+[s4Ht5f1*MU+1EGZb#*V,kpP[%Efc(D5CeU8"(GAS>=p(189=$qBu80@!<FU7q^%H>qddL^CQ"lkZ&W`G.C>!ng.dS+.nnOQNB#K(+kkM[_.%ptF:cmoCGpm+tl*2[6%5l`h@"_!3n`!m9thKrlYSF&P7=H?X!6"QqTM%odi%@'0-A.6Z*MpW,%4C`lt"sI&i/J\9DZ2UYHd)WpFc!Qh2uGWc`1/P+/;+X1"jOAi%VBEeEp1=;4@S1ILT`K"dkYIm]-"M(N0f%(LT$Z;_d0f,cq#8DqBld%"fg0IiJu;%M8%gio<YU(QP!M0uS2S^*%Vjq%^$ii&#Z&o/17=K<VEa@Sk0ui9gt3ROs1!6he(dXGm$d%+.)&/`jUtN[T!`k7.R>0n7RoN$f<#fBMlt^e;#69V+b2fYDT_<ne)@27DTA\"sog5Nd#T_LC"N.!VlGeHYaSd.i9<!pnAJt$M3T]%.S!Dq)ETKQD&ZZ\d\e%[4'7.]]5*&J&c;Ro<YtE'@eXbkDI?N"NNp4l7fDr%)tqJ,?[r%?Vl/-rq<jN[A-77)rRY,cqt&"G]__Kj%Isq.dO&)t9rO8,3?HIWmZC8Um1KseR^V>*jFQ]_'qWn#[DngepmXNEXYp=!Xd`msToCX3?s0J$'qtVn[rV!7kVf*[Wc[WV,maWfZ%S%%9^PkiSYfAF>lq=NQoGkoC(0Ah5.1n/DAqld20J+I;)Lg;M]nc#6[0.@fW(A[@`=24Y3jh'u2nb/HM=$Ka4<#@i&OD=^dgHW8Y%s)PM6^O>qGjdY^Vs7Okg_`3FRRRRrT["b>2Z/25i;1TiFh+PK&Ve5u.gP^s5B2$AmYl>FpaWAAV91X96EPLci-PnI\n;C#s$_iX.%nX9PtZHGPNA5ZaAGt;/9:D]Cl5TYROe>b+\#n_R>m::i_:T`J*E0"GXG%7WRn3$pc>Aj6apJaLn?/c"ei%5*SVKR;2s*qGO54,;#%UWKd]jLl"O$3TSk2_Y*s;.=pI/^V8TS76,rI(K"Hdms0XI"H'I/Ih/TCc;gb>f:d7K.o\=d@fLPHLT[(_rDVk0GSNa.2<*82O-7m%7ksf<Yd)ETCdZo)^>'j$a[q51Q,Tp._QEYm'uH<LDl_Y7_5cj:V!hk(8g9Z5SdJ240/^#GH&db)F)36U;'4IuFi)n"+84pMY^*?[%akUj?Wt=hPhI6^s3=U?q5W6[ck.\Q`XcIs:ZWl+'6itt*dc\-a-eRo\;.30CVQC<ra4(tl6Yrh5\pn]%Hsj182nAsu=EUZuKlBPX%2T6T_1_m-/@3':X^3Z^iBj^^S.!5/W6)i-6[Q`Qc?VPd$HZFUOmP*H>^`_39DFtF9#0_>t`\AutY=88WdVJ?'_((`iraYZk4Iaub%9r\<iX<+$nfem1oj1;Ooobs(kCiJ_#4U%km&)"<rcef!)i*Z?Tn\-ZX>jiYq-M(DW&9b+m8cbc]aFJRR]h!c5]*8QFV(1W_$A*k;%OO(OVIE]\EHs9i-3(SCJqA'A04.].f%WI47RVSW,d4Df1(aN%XSMour`?*e1G#,ng_*Qe=qcgE$j8@sOq&pFar,@Mn8\MD@lG,#I%5#q/m#Z;8b#CN^F/&]dZ1IJV=pZ3kuZLUlGL9sf</N1Zs0>9?sCXmg>WmKc6f==o*%neFb)X3<T1[#B-4uT_`N`+ro8?jOFJ'ff+%?M)>^C_9!Xi5:NmheQZp_(W#WI!SJI;V80"8I1N;(G$2^9%;5J$R?mP_ccN.n:1^Y6%I$i0De\aLKembm3op!%bac>-)qi^#8fnD%3C%aALj'"7l@V'rd%&"K[Uc<K>B(3[Hsd.TEk*T",L[eYO:FXaFFsXrgA',H*Y'mW,jFH-@R,(s+hSGAXK?B%fQ`W-Jo`'[%#Hti%Ri:iJ=+P'jYNj$MO"VgN)jkqTi#1ApGZG)d45rQYW(N8!ZK2QX<b:n=3JNth*OZ2dZ\&d/9EOKMVTWg*\?#*,bCg*'F>Z&$')VYG%">p^,9R1efjXQB8.s#>J3Zs".+W8+)j?i.9JClQ7<"3fq)rG176-;\D]]1L=K,$K]8iS[$`gQT7iH!REEO*.4!R[G!?DPgT%RcY"%>V=/T/jU6'E^eKX?(dQFc>9Ir"JpPe\^2,rXr+,gGn=Bn^3YQ3eE_<&1A<rh42gW\,@,hm$=Y'V)*8/HYSct.d#9dkK6Jiu*a`CI%eFU#^qAT=rEgDY51IN5s74UL65_eKifHt^K=3;mg=tQa":lL'U(j'h!_Qr,;KngF/FTch`-2Q]);N\ViWV>15np3Q,*U;R>;Tf(E%Ylp.X'nieHRk.0iXMprm$_)U115R>]EtF-<cg=6%!O[_LE0UMnl_ZV@JkI80(H2s]05C!:TI+)h(\bls0tHUo!^&5ZN8f#h$?=GO%.L8g>aaA<!p?6ZC)[oO08I&46p1)F.;KP1/@sS[h8D_;o_QL'(TsMqIoobn/'c+1ul3Q^ulCnCI/P3K"[a1%=-IsUjZr9i$KeA5!%Kokmk%_%9k<4))7s.N<u>[D+LH3g5@f[eT*7BE1R5b[dJkd\LN^,!VJ$R,ZVg"Hau4A+?/[WIQ"G;b5;G;g"fpR=NuM%DYr9`Al%%:cOFZg]tIT,]L-+dZi#j$!,M98#bgKY!>DG4Hh0!=;eopEJ"L1P;"ruH#heeO<:]Qj[0g_lL"OX(%1t7F:o26m6+k:E!^o2,9CS5%hkXIaj<,Z>$FDi7\@]+6)puR*@6UngZeCXlJl$f($Jt9GbNUn0.G,aN/E:1DDh@<H5@(E"Hm>mud-5LW5Q`)jL_+f^?,ujgg]I65%J%@Lq65LB>#+&9#_,t<]>(iC'>(hr`B`dhu_#_*`(bgA'4N]e>l[Ye9b+?H*!h4:1HfZR)iDO#C\gN;o6nK?](`Y?Y^]t+MiDUVg%SZpFYK'r6Fh`Zic7.H4Y,Cl=!/'Rqt('on<*g($t"VMi;:m1UtaW(>Jj,&L=&D\duK-#<."-V1=T=?t^K^(hS6YjP)es49[,Pe<a%)gt[&-)/s[bKo.Wkk&6m(G(k_\IL*gCSZ,^-+7osqZ7l7E"-6S/P=$>J0i3^T%W9Yn>ad+Ne^]oPp0h*F<YZ(;8+j*ar]1oieS>4%l:@f74]Yt2`*J/2W'M47HuL4(!4I?(E1c"jh<0:YL7kH=V81HL6ZA]GLQr5COPiBi*;JGW1^C2gDU(G\$+eIE2&ue`e"WXX*"47E%WRR#cNX@s0&7S4hb%pA8S"TX`?b8PnNVhbfYU0XkHiU`8SEqt6c8Ak">H[r#:%6'O&9#uJ<Vn(1!03Sp2;"R+XnD?=m!8[[C[(Gq%J2Ip;M%Z8"XhY/>>-6+hK$RXd=hA;s"=fpW34C0W[;2*P+W%R"<@!Ea+!)!5Oo<"&et(!8^pn@meg)-S(KNr;Y"5jc=Zf,44a9"e%pjn6bLdBsg'@HaC7CaJ>Q%Lq8TN9_kOJ+*aD-/Eq/q($60ZmO[:q:[<kVqaH-iTkDPu'o_hShPX[qXXQCW<cNcU.EUdWs&5&m_b.%kUt/DGa8I/@2nD:4TN\Ni1M4$&9't,BlKPq6ksn@L1ONHO[>hj'hX/j(O3BCkb(GrhR@ls9,=r=[FLscem]j5=;k$=LQZMULiWn4%D&;Zo$+8\2%&r3F6'&,&*T@sKb<^!r1fbXO^n/p:+mGmDSF?koW'jo0\e,gE2;$ZbXK0/>P.HFa=VoJW/)<s4P4b:'DZH_;:B)((%m_CkkpeF2s_'$[5ChdE59'6d-&19:[\t]M(N2,Z7=WPAA&GLRH[Y_L\*dX%U0/a5'b@s0@Z%W^[`G.;edt[AG<&Og9=M>ak"sdFl%a"MBSn"s4[o/O=4IFX1D59S((^^p^j:`\"NO1Nk73Q`LDm*m@[i[:-'-'[#*c&K]*Qm3"Kq&)K1q<eH6\[Qeo*0@V5QF02*Jdg9g%d)b-@YqnaO*e\5o>/UqClGqo1RNY'?KQ5W`5F2Ss@q=i4%[$?sTl6XsEe;nCb,sqlV[pF5-"_/T!.",JBcs?r64HdPfAt:LU'%i\%/9`RZ:e:;(Y9RD=CJ@BL9LYt+`M%a*o?+[OX4@:#?sK%s*XM%0*X)A]L?-<O1tFga"[EqLd*Qg0KA1&4))*I^lg6)p)pKs,hmte#%1Sfu2Nn"+RWB@2FBqqj;Q2uebSt-n(2M#=Sf&<'>Ud[CP:_$cD-lZ+t2ZAA%=4uA]WA$8_@8GF)`Ra*K@W^!`ngTFQo:fKSKJL9M%%CoLu\9\s\5n1D,L3i0$XL>,`[C53c(,>G=SMkOTP!\p]:1.i"8gIZd`j&j,f[63*lO$pAT#^[TKU=m$">A56?;M;dX\V`7YXgZ]%>*KoC\'PdB,.$?T&3<gWo/Lmq%A=!@OegACF2',)nefCg1hc8Vq/h7Z+FD_[&GFsuF[8(<SB"&Y)$<769fH+-E,j@3nsmdpQ.7R^%aZUd5P?fLP:_(Ai=;HL:f9)hH0,L7(]sq'R/,qH.^Kn5c:o..!3+*Y5W/p"QM(=Km.Kp&WZ`m&&m0uIU'0%^5Etlhpe>(8:SO'jE%\kU&L8OkmB)[Ec4_#aGl]aG\rd;;oOj?qVL^/WL9[]ZV>\L'8F\gHe+(dNqc?4F9KH9!.cjGmpfAp?&D_DI<b&D$+^b?48=W5bk3%g)E8#"CccY+='#i*5UkWii(:cRY,qZ6op-/N\.^Tm!(V#N#dPRS3K;^"(!"JO&!"f[1[IBlBHsBMh-!u/0;m'Q,I_,_j<)^;I_Uk%N`7YACCeE?FEpg7j^?EiPKF_?qWq;F6C[A:[LFgsA"YNf@Ji>Zj.+r7\f`<HFB))UE7B%c<_N&Nbkj#55(E*XRo=D8J(,aca3U8&%q=p?k,p,?mWkS8G>9^PKrSm4RDsq@PWhBodhnRt[!teg6FOT0e2)8`gYZBVt0W[hQPo8\(3S6f26!.X0g0KtR,71M(0Iu,J?;V"+%kaoP*BdF&$DJ!PhMb*?;(PjATL9cKo"ur<m(4dOs(E(@e57NF?_YrlH+MIL?V-34H&WY;f]:Pa/eX:G)UViq]NBrLC#qQ]>/Kc<,%P9ro1Rg!id!m+s;:ig>FLK[$q.D[$gO_@;()oDu9+]fHb,)'K@dR)@<p9&80mK!&8c>Zo9VUdE#1?`ClK<&cbmu+gXZ%dQ^bSWZ,%B-WX=N[_l`F"J2,$RO:^<e.kNqlrn8d`MGs4k\Ga+7!5ZeqU(4WXY*3:F`B&mk8EC;KSZu+\?c7g3qC?(C>$64@ktWp?gK;E2P=;%CIk5=7/B>4\i@-.pN_R=WIDFo*fGtmf@IS!EH\AkR0omRMfO.Q^%"[#e_l!%\3\;?f9D60dOEM3IQ:SF(\9`K[/%+PaO'PE''a4C%AF`@5WZms`^3&_l#J]V':.Z`&lbc"[*02Erobtf#+(qG#7@'-S@6O:(RM;UTV%a5E`++:-YoYlu#eR9]b@J/Pp^N&K=K/fIWdoJq%HeB.>%I^=NODAlhX)#^dg]05kROK'57Z2!6Hl-L;P@bg(QsA[9CCrHh>q<>YY$9;uT@_5(0#$PeF8JBrr_u^?o4NhVV*AH*n[bJd%C##=^\eG"P[W[Tos0S:\-$B5nSYi#NrbEEFmPq%+a9l!T?X(Y"@WOr7J5U#/o:f24\Qr1BTuD%7=HSC%XK=_mk1aE3$/7ML$LQ]R%W\-d:@?TN-agm'hI!XksB24P9r2_?1:S0R;+"Qqk(F4F\+LYI<RN*/e,Lk:EN?(Fed1?cC+gSNpq8*r+WXL/O.2;E&A`,%L/@L@8%D]jP)$nk%p`97IL20?!aV?Wa#B*hpSmflRoU=*M5W"Kc[,J,OP<2e*0N>Ak^2rUj0nkRV5f2!WQNfa%MZ4@-9P]j0[i^X$E\t[Qm%-8e?0."4/nF.Jdf>93)1![nr)3l2PF#VI@"hZc^fBkU',^BpsYOS$VZV]LQag^Nn2Z-'J;cFOeL>$T_F=K<mRmMA$cl`agCW5EF\%\1Q/Q%FdH9`MD#q/gn+P&lq13Tk`lE]i$Q%SJMY@CF74gU^Ksp%fIL\,V^>(JrF*ee.6:=&W0`$UWJBF2bqf'&n00dGXX/qHcrGs%V*+\dOu>\K8$RZtUj;=?"2Z)o-,^!$*kRHTBS"o,RgeO@PAT)TDN>oQK@ZBP@eQ=Qgf/$`8PAciAIG>u$R_*NPA?),1dAQ/CoIWO%8%W-U+mp?@V62o.e#IA"_uWCtCa5Yt*r5B'&_fR\X*3Yt'(H$fMMuZ1kJ]o*,`^C7U%l;%j20JFUeCL/".Q#FhYW=CVY=SM.\q*p%mUK>D2S6#,6a"fGY.bd3E<@mqF:?Z$es_]Ff[dEH#3_q.1Wm*6S"6_$g2,BCl"87Wkr08_"L=H/,G]`9/;!I`LQ\Ju@2A\8P=V\.%T3&T?gp+;rN'I8AZ$f+,rjt3a5F]S-@N8H^oEL0(kbTXF"";5(i$hADV,;]f4j);9k!a,+>$T+#TdO@K_0B[T8#(YaM8kX*.6dg7%l=ut6.eI#kcR&Kd1PCg]4\,)5ZXucmIGR)7XPB-ni]A7#WTg1a"%/5QRC&ce<r$3g&.:0PkY^_&Aj"4)M.%i0Mdi#-itBPr+e:p@%Pli]V1&VA,QZ][YHWFhGZnL7,OlA4^W[*!Jj7p/7k/`GuD0rBLL\5*lQY_iG2%r?5fc\#3U;'@0RTTb;jS$tJ1]%t$OLbo9OYn$A%@i=\KI2h7?n_+Qb7Oh6Dg*4kQLN:dhXp:`+o;Eu\%)jci[Wt./Bj4.>=1L@djBAs.aL/Uqe[rD5o;saS@!4SKXE<`dM`Ib@FL@Me%_^oETr+8NEn(0jr/,*dIfXBq#<K1A)3W.UK""]Lc5iC!,l3/?MYB$fO]g[T^cNdIE\!G7c;/_TT>FruO#45@D$]%]"Z"Kf"mJ14"%BC$$fi=9VE(1r3cEdq%HqIPkc>Dp++<bci.^rYUWk!3To*TifN1"G^7C^rKmp#M%ASJhLDXT<FB:h3DMc?^,uij##p*u^&cWQRI:%&lRmnM$$=4q`KZ?^0#[lfYf\dOP#cXJEob>+Pf&p0[`r6LE1Z.a6nIST'@WOCVSLU")_AT-[#:qpqO1GRjo\Ug3.Z$Ct$#M2WS%a%T_6T4N>ocI8T(WL]%igC;<+*(@tJTI2mZcTYZ^6pXj)1JWbr<[<e'`273\>\02hB(_BQO=H7ZqgVi2kYI2XQ.q_LlgK0S(+chJ1#%9'p+dGMgqjqO'adW(nJU1$ueS]?EU6bOdKTMmED>*X0B?1FlI(T,1LEa>'1o[\hes=&tI%i,#_l?A#S"X5"c3WpO8g+"$j?R%I%H%,A'J1IGPsc\'LQjq=pBLoT>kT@FKJ/BqX:u_+t&kU?3#`J;4-I?-O?KXrAp`QYB,#b.&egQ!sqcHs<,(<K$qb3AP"r@^ZiC8%!PY%UDTqadaLlW6>:1EXcF1K,\"($=\R$n0h(ME9&6)V@9LL%VA]("<6!IT/aFNH2-\is\obBM=]ZP'7%/KZ#89*'p1"K1HsN:b%[iS$%>DC<Dl`qdh6R5_[GoaC.6!A*T1:4rjFNs-Wb<mOZ0ePEFZD]Qr/]Oa?.Hm2QN6rqRMA<PBSoFC5,\QF2*mo_1k-C$6bT`2=acmF.%gk)51S`O+Z1<_#X]j._]T]32D/ZhUFYm,%f[pf4EP'7K9AW>XCMPI'UP/Ro[Qsg,>.JR`;eY\t2p!kc0opU7EN=(R(rF3"`MYEg`%VHFV]OLk)#`ne62Z!j2X)4j;5S'd.kjj]/$)4&G9G./ekZu1!Q=dj-C6C%PJ[CXkJI@7rW?(:\)mJ:Ohm*u9SF>FS(Wj@6!QVls_%9oAUT',UeCd$UM9Ag=iU*@MFo^ma?5(7'5;B7%lH*LD1lp/j<;D8W4^Aas6qbAO@QD=#gsOQdO8fP(^$)EQAQU)DHlBs^;b6mOr2%N>CM_?Lh8QWHP(gQD?-i-nOLuqVDN^BZmPs8pC.d__<enK8qFMNSVrc$9AgEL9D<Y>HpY1dqS,=jM[o&+\87=l'n+uKVB/?;f>\h%b5M^tqU(5d`@%b1bb.]p-)`@JJPq.]`GQ\KAU0UN1Kphq$UMBMg>k/'go6[3*-3$41@$XpkLV0LKZTVo3N9g'Q=EY<(P`=iiET`i%j%GHe=h5>+jeP?R9enm=gGC_)>)\<_Ytc_/:8O>c<N[Jaa3A5rLP,r]C9jZh>rcOn5n>E)9HpUE@'!X"mg=C_fnAC_FQ<;s&a+1F%AdYYh=Q7-B+>71nN1Ti1Ij6JRlkNN?`G9B2YRamed.9!t?&WQ2ZaNRs8UC$>3J$`n4%q!V)O.AE[^agd8fd%kcqB\B,VRo\&XPm_%Wqd!\T]Dr0Z&fB?]XooHa7k@hqT*gS.A?@Q,RaOoBu\3>SS2a4R8^5?H.HLnlMMWcr@po;pgT`#7tP0SgkJ-R/$)j@bFkAoH\Bfn%";iMF@9,5F0X%XFNK8)#+q=U]q!]tmY`bGqYn?Q2k[Abid#BBE2RUAVhbY)DYb'+'.#4Y1M.TW+Be(%c@_Wu#7cb7(MKY>3mH'\U%i56"_3Roi5bCL/(C25ZPeo[]FR?JKBJa9O^n>4;.EmAG!=AuU]Bpio%>V&Z"=)'J)b0jg\[.5JN]XSb)#0b3[+T0<YZ;&&&<6=@(%r-Ltp0^4tpmllAO8dDeq[5)AgL[,@HOdZ1"FbVj](.081gqjGWU!RY*MCka]!i/eWH))\.>jV`+IRGcUc-G]"b*U&\+5/SCC-ZGG%%Qh0T[@@W/lTfe=p17J%p[kGLX#`TnLaR>Yb;LL5$fIP+[9I:E'^I'uOt:99>B0iu]mh4(0Zg*RQs.]p5O?&)SOcTsbt3.8JZ4?8%4jh!_Z6g$h?\$!MbKMN:Y8F?XFfsu,+mZ$@[in#IQ+$BTdSEFAcp9MDL:DFZB^[um?'usBj%bB?q-D]"Feim6b0%)#2M>=P99$l;%NVdKB?p`FT7,8EJJ;R6-=EZe]Q?[l#(9KXE@B>:VI<%94i>IEiO=tBR9J!;3Bk<fnO&rM#lUKH&2YD&jm@-(Sk%0E4PcTV-`8qQQ%RbM9E7$p2n`_[>\eofE@3b9WJ7&C+>P*sd=Ucih%(Zik(l@O'+0nr<f2FCEp+<fm'9[Oj7J=(KV&9+_c&S.edF:G8ci;mATok!1@%/<EK!D)qU8Ac5]1I$o^I3C6fV?e%ugVQ\[.V5JY0AW::RgN#2IC8?r,2cc0@fpnsP>ca<PGSIbEG_@\*FM(j/b8k1^)q3.\\ug?"%6eQ00;s]b?EcFk1AjhS8K3Vq)agp3_3(<i\afh3=9R4U1BDNPJD&#Cg_^e\2OMK_*M/U,Up?3^05)_/?WWXn6N._T&NpLhl*m&d5%E&?Tm27@$cJjQ;/+e.,1[kgtM6i!0dm_Vmu]%l9\%[71DU&O'TfGh/un?_8F^4#uSbK%r!C[(LJBD_-D_1$3XNZU[EV2ZL:PK;l,%an>eAgug#2LlVOL)L@JbJ5ns],*5CDBJ`9oGp1riRmB">+b7@#&XW`Wo;M*[jl;-^qVE/Xk@\-o/@bLa8L94m,2m_<*SlhC'2m\`%oH%gko<Pg>6T9Xp9n+Ao(:"sk)+P<^Ts9+a:[mR2^4*Rljlbn\'^IVU%_tN"Lr)HDn;a/]jt-]:T$;<<+!&cj#cH]GH"p<WRO(qe%i&H8?JI_tkMo?ZYT_A1UE.._`Mj]1R>c+kE4/@Bi0fE$Q-5]h:mH?,5^.sJZ=iaJ[eFslac!q4Q4a.#+h?"(Wh2__&\dgC_EkUci%(BN!6p`-o6o7fol!S\k=g)HbQ@A)ED(:^fpAUU2/n7n>R)L?VW6*<uql@b;V#?n=6lMEYbFRNjaJ9-YGX]o;R)f`LjO8d>Z]i!sB%Jdm^BZ<R%-U%+dY`]Q2e"4uE&TAKe-L-DM-2Dg;O<4h&7^s(nI0Hf`7Zo@U`l%\'QhU!Xi)gXHI2X9^cgX*RMDF7clic7D9Q7^qc%S]2[smc>d:r;JHJD9B=BGNt`AID/DWNRKjFZQd"G'jb&9m,Q+@:-S"?>^cO`M`U\34bCI_fj;Q7XC\UW*'n@"nA0Zb-,ZEApZFJ$%p\EpeOP5rGQOuMI38PP'c:Eb:Ecf6;6-d%eK0c`o!aR)o$o#=tD@'toS"#&@c_EQ3m*IU\;"jk`9lPU]ViSI3e];ah\[<kI+sEO/%=kO37*NC0Pc36(==P-6gT_fNH/=Lsdj1Vj6FQeaX*uJK0SE%j:g>dRaD]\Pa/!cppWl+QdkR5(F5]EqgNe%pIY4K9X*lYpB8lsSG%OU@4>$9'XDg;!n3L%LuU(_1Pns&]AE]sE8qGPM04=-K76q%_`s)X\%t*J9+4"j9a^K!r@bA)>iV1)rABr95BB&b[X9qmM6,e_Q^1%M+E=WpZ5jdal;aW0anHNZ_8>ElG5?^JQ(a0a2L*9PEpFUXKq0khEN5CmjEch>QN7c6M,9g9E\$!CgOWeLJ&2fm\^/G\@u%i3&&8X%6"3J3pbs2&=`7l5=R1c'ao\1pgf`V^`s_N&e0Ze/Xe?W98+I<:D6Na8W1QX%62W+nl79qChBZ[3Je&nj:+SO:f@RL9rUE[:fmWQd%\i@5k?QUQ;mZ+6Hi"9S1YpLcg@<QR@qstm?Zg2(nIQ0.C:pQM.]g<oNjCCTeMb_ApKUDa-!\4f,$]kP90REi=?"59Ok0nas]RWN'%IS=pp?"NN6`M+UJMF,YN+AOt[\pe<8*ZsUMjgl)rnsUh<ET)$)ZT763]:(%&eLno$&;NM*,@:Q_4\C;6Uq^bH\5%&:dD98]G57,c%F2ehA1p4#r5$d4XTmI+WT(Nm-H=ZG+A+RZ#DR_fCgc=F`ER5d,"u1+B4lFJ;/J^j\7&+V'A!fP;r]9=AN5doi66*5f`ld2B1r\C[%Xm&4Y\u%2^+:phQ%[;4X=cAt'6KFFIT=@JTH3Z?q<H`(0LG$.mCWBj>W9p/UQm<H8+GX7rE<Y>B@s&-*TsF_kk=O\=7AaFZ_ap]&%=QWc.LKgCC\a4<X9M'#PWo.V@7pVIsfEOMZ+KK^a`q4,5bmJ??Q1)ujr;8I_-\K@]==#!]/^R:373]rr!FCb!&%SoAhA@'Hm?2Vh%*:=$/,e+HZ8DsOa\%ru9/rn7rK.n.76U)[P8oYelF+=q.QM5rZ%bBejGVSo)V2Kftjbkd@nXKB1?bcR"_oog.HM?Nf0>@5@[kGLA%ofq<HI/W^&h2?3cHhl8pG;%jf`MMqO?g'.ehn4=/h=og@HZf)=T>1=8+S:L*s5JrDs4`$OnUCQ`a4TG~>%AI9_PrivateDataEnd